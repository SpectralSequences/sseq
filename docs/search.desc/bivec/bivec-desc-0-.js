searchState.loadedDescShard("bivec", 0, "A BiVec is like a Vec, except we allow indices to be …\nIf <code>min_degree &lt; self.min_degree</code>, set <code>self.min_degree</code> to …\nExtends the bivec such that <code>max_degree()</code> is at least <code>max</code>. …\nReturns the argument unchanged.\nGet the <code>idx</code>th element if it exists; the last element …\nCalls <code>U::from(self)</code>.\nThis returns the “length” of the bivector, defined to …\nThis returns the largest degree in the bivector. This is …\nMutably borrows i and j. Panic if i != j.")
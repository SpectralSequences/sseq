searchState.loadedDescShard("sseq", 0, "The direction of the differentials\nThe first page of the spectral sequence\nx -&gt; y -&gt; r -&gt; differential\nx -&gt; y -&gt; validity. A bidegree is invalid if the page_data …\nWhether the product acts on the left or not. This affects …\nx -&gt; y -&gt; r -&gt; E_r^{x, y} as a subquotient of the original …\nx -&gt; y -&gt; permanent_classes\nReturns the argument unchanged.\nThe dimension in a bidegree, None if not yet defined\nCalls <code>U::from(self)</code>.\nThis can only be set when bidegrees to the left and bottom …\nExecute a function on a range of bidegrees, possibly in …\nType synonym for (s, t) bidegrees.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nComputes the bidegree containing the Massey product of …\nHomological degree\nInternal degree\nReturns difference as a bidegree if the difference in …\nAn element of a bigraded vector space. Most commonly used …\nBidegree of the element\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGet the string representation of the element as a linear …\nAn algebra-aware string representation. This assumes that …\nRepresenting vector\nA <em>basis</em> element of a bigraded vector space. Most commonly …\nBidegree of the element\nReturns the argument unchanged.\nPosition in the canonical basis for this bidegree\nCalls <code>U::from(self)</code>.\nA range of bidegrees, corresponding to all <code>s</code> up to a given …\nAuxillary data that <code>t</code> may depend on.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe maximal value of <code>s</code> in the range.\nThe function that gives, for a given value of <code>s</code>, the …\nAdd a differential\nThis evaluates the differential on <code>source</code>, adding the …\nReturns the argument unchanged.\nAn iterator of differentials in the form <code>(source, target)</code>\nWhether the current set of differentials is inconsistent. …\nCalls <code>U::from(self)</code>.\nFind the differential that hits <code>value</code>, and write the …\nGiven a subspace of the target space, project the target …\nThe direction of the differentials\nAdd a $d_r$ differential from bidegree $(x, y)$, with the …\nReturns\nThe first page of the spectral sequence\nWhether the calcuations at bidegree (x, y) are complete. …\nx -&gt; y -&gt; r -&gt; differential\nEnsure <code>self.differentials[x][y][r]</code> is defined. Must call …\nEnsure <code>self.page_data[x][y][r]</code> is defined\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWhether there is an inconsistent differential involving …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nx -&gt; y -&gt; validity. A bidegree is invalid if the page_data …\nWhether the product acts on the left or not. This affects …\nApply the Leibniz rule to obtain new differentials. The …\nCompute the product between <code>product</code> and the class <code>class</code> at …\nx -&gt; y -&gt; r -&gt; E_r^{x, y} as a subquotient of the original …\nx -&gt; y -&gt; permanent_classes\nThis returns the vec of differentials to draw on each page.\nThis shifts the sseq horizontally so that the minimum x is …")
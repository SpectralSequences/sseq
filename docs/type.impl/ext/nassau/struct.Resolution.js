(function() {
    var type_impls = Object.fromEntries([["ext",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AugmentedChainComplex-for-Resolution%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#1179-1190\">source</a><a href=\"#impl-AugmentedChainComplex-for-Resolution%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M: <a class=\"trait\" href=\"algebra/module/zero_module/trait.ZeroModule.html\" title=\"trait algebra::module::zero_module::ZeroModule\">ZeroModule</a>&lt;Algebra = <a class=\"struct\" href=\"algebra/algebra/milnor_algebra/struct.MilnorAlgebra.html\" title=\"struct algebra::algebra::milnor_algebra::MilnorAlgebra\">MilnorAlgebra</a>&gt;&gt; <a class=\"trait\" href=\"ext/chain_complex/trait.AugmentedChainComplex.html\" title=\"trait ext::chain_complex::AugmentedChainComplex\">AugmentedChainComplex</a> for <a class=\"struct\" href=\"ext/nassau/struct.Resolution.html\" title=\"struct ext::nassau::Resolution\">Resolution</a>&lt;M&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.ChainMap\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#1180\">source</a><a href=\"#associatedtype.ChainMap\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ext/chain_complex/trait.AugmentedChainComplex.html#associatedtype.ChainMap\" class=\"associatedtype\">ChainMap</a> = <a class=\"struct\" href=\"algebra/module/homomorphism/free_module_homomorphism/struct.MuFreeModuleHomomorphism.html\" title=\"struct algebra::module::homomorphism::free_module_homomorphism::MuFreeModuleHomomorphism\">MuFreeModuleHomomorphism</a>&lt;false, M&gt;</h4></section><section id=\"associatedtype.TargetComplex\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#1181\">source</a><a href=\"#associatedtype.TargetComplex\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ext/chain_complex/trait.AugmentedChainComplex.html#associatedtype.TargetComplex\" class=\"associatedtype\">TargetComplex</a> = <a class=\"struct\" href=\"ext/chain_complex/finite_chain_complex/struct.FiniteChainComplex.html\" title=\"struct ext::chain_complex::finite_chain_complex::FiniteChainComplex\">FiniteChainComplex</a>&lt;M&gt;</h4></section><section id=\"method.target\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#1183-1185\">source</a><a href=\"#method.target\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.AugmentedChainComplex.html#tymethod.target\" class=\"fn\">target</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;Self::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.AugmentedChainComplex.html#associatedtype.TargetComplex\" title=\"type ext::chain_complex::AugmentedChainComplex::TargetComplex\">TargetComplex</a>&gt;</h4></section><section id=\"method.chain_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#1187-1189\">source</a><a href=\"#method.chain_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.AugmentedChainComplex.html#tymethod.chain_map\" class=\"fn\">chain_map</a>(&amp;self, s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;Self::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.AugmentedChainComplex.html#associatedtype.ChainMap\" title=\"type ext::chain_complex::AugmentedChainComplex::ChainMap\">ChainMap</a>&gt;</h4></section></div></details>","AugmentedChainComplex","ext::utils::QueryModuleResolution"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ChainComplex-for-Resolution%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#948-1177\">source</a><a href=\"#impl-ChainComplex-for-Resolution%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M: <a class=\"trait\" href=\"algebra/module/zero_module/trait.ZeroModule.html\" title=\"trait algebra::module::zero_module::ZeroModule\">ZeroModule</a>&lt;Algebra = <a class=\"struct\" href=\"algebra/algebra/milnor_algebra/struct.MilnorAlgebra.html\" title=\"struct algebra::algebra::milnor_algebra::MilnorAlgebra\">MilnorAlgebra</a>&gt;&gt; <a class=\"trait\" href=\"ext/chain_complex/trait.ChainComplex.html\" title=\"trait ext::chain_complex::ChainComplex\">ChainComplex</a> for <a class=\"struct\" href=\"ext/nassau/struct.Resolution.html\" title=\"struct ext::nassau::Resolution\">Resolution</a>&lt;M&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Algebra\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#949\">source</a><a href=\"#associatedtype.Algebra\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Algebra\" class=\"associatedtype\">Algebra</a> = <a class=\"struct\" href=\"algebra/algebra/milnor_algebra/struct.MilnorAlgebra.html\" title=\"struct algebra::algebra::milnor_algebra::MilnorAlgebra\">MilnorAlgebra</a></h4></section><section id=\"associatedtype.Homomorphism\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#950\">source</a><a href=\"#associatedtype.Homomorphism\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Homomorphism\" class=\"associatedtype\">Homomorphism</a> = <a class=\"struct\" href=\"algebra/module/homomorphism/free_module_homomorphism/struct.MuFreeModuleHomomorphism.html\" title=\"struct algebra::module::homomorphism::free_module_homomorphism::MuFreeModuleHomomorphism\">MuFreeModuleHomomorphism</a>&lt;false, <a class=\"struct\" href=\"algebra/module/free_module/struct.MuFreeModule.html\" title=\"struct algebra::module::free_module::MuFreeModule\">MuFreeModule</a>&lt;false, &lt;<a class=\"struct\" href=\"ext/nassau/struct.Resolution.html\" title=\"struct ext::nassau::Resolution\">Resolution</a>&lt;M&gt; as <a class=\"trait\" href=\"ext/chain_complex/trait.ChainComplex.html\" title=\"trait ext::chain_complex::ChainComplex\">ChainComplex</a>&gt;::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Algebra\" title=\"type ext::chain_complex::ChainComplex::Algebra\">Algebra</a>&gt;&gt;</h4></section><section id=\"associatedtype.Module\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#951\">source</a><a href=\"#associatedtype.Module\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Module\" class=\"associatedtype\">Module</a> = <a class=\"struct\" href=\"algebra/module/free_module/struct.MuFreeModule.html\" title=\"struct algebra::module::free_module::MuFreeModule\">MuFreeModule</a>&lt;false, &lt;<a class=\"struct\" href=\"ext/nassau/struct.Resolution.html\" title=\"struct ext::nassau::Resolution\">Resolution</a>&lt;M&gt; as <a class=\"trait\" href=\"ext/chain_complex/trait.ChainComplex.html\" title=\"trait ext::chain_complex::ChainComplex\">ChainComplex</a>&gt;::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Algebra\" title=\"type ext::chain_complex::ChainComplex::Algebra\">Algebra</a>&gt;</h4></section><section id=\"method.prime\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#953-955\">source</a><a href=\"#method.prime\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#method.prime\" class=\"fn\">prime</a>(&amp;self) -&gt; <a class=\"struct\" href=\"fp/prime/primes_generic/struct.ValidPrime.html\" title=\"struct fp::prime::primes_generic::ValidPrime\">ValidPrime</a></h4></section><section id=\"method.algebra\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#957-959\">source</a><a href=\"#method.algebra\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#tymethod.algebra\" class=\"fn\">algebra</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;Self::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Algebra\" title=\"type ext::chain_complex::ChainComplex::Algebra\">Algebra</a>&gt;</h4></section><section id=\"method.module\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#961-963\">source</a><a href=\"#method.module\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#tymethod.module\" class=\"fn\">module</a>(&amp;self, s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;Self::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Module\" title=\"type ext::chain_complex::ChainComplex::Module\">Module</a>&gt;</h4></section><section id=\"method.zero_module\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#965-967\">source</a><a href=\"#method.zero_module\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#tymethod.zero_module\" class=\"fn\">zero_module</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;Self::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Module\" title=\"type ext::chain_complex::ChainComplex::Module\">Module</a>&gt;</h4></section><section id=\"method.min_degree\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#969-971\">source</a><a href=\"#method.min_degree\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#tymethod.min_degree\" class=\"fn\">min_degree</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.i32.html\">i32</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_computed_bidegree\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#973-975\">source</a><a href=\"#method.has_computed_bidegree\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#tymethod.has_computed_bidegree\" class=\"fn\">has_computed_bidegree</a>(&amp;self, b: <a class=\"struct\" href=\"sseq/coordinates/bidegree/struct.Bidegree.html\" title=\"struct sseq::coordinates::bidegree::Bidegree\">Bidegree</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>If the complex has been computed at bidegree (s, t). This means the module has been\ncomputed at (s, t), and so has the differential at (s, t). In the case of a free module,\nthe target of the differential, namely the bidegree (s - 1, t), need not be computed, as\nlong as all the generators hit by the differential have already been computed.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.differential\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#977-979\">source</a><a href=\"#method.differential\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#tymethod.differential\" class=\"fn\">differential</a>(&amp;self, s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;Self::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Homomorphism\" title=\"type ext::chain_complex::ChainComplex::Homomorphism\">Homomorphism</a>&gt;</h4></section></summary><div class='docblock'>This returns the differential starting from the sth module.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compute_through_bidegree\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#981\">source</a><a href=\"#method.compute_through_bidegree\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#tymethod.compute_through_bidegree\" class=\"fn\">compute_through_bidegree</a>(&amp;self, max: <a class=\"struct\" href=\"sseq/coordinates/bidegree/struct.Bidegree.html\" title=\"struct sseq::coordinates::bidegree::Bidegree\">Bidegree</a>)</h4></section></summary><div class='docblock'>Ensure all bidegrees less than or equal to (s, t) have been computed</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_homological_degree\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#999-1001\">source</a><a href=\"#method.next_homological_degree\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#tymethod.next_homological_degree\" class=\"fn\">next_homological_degree</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The first s such that <code>self.module(s)</code> is not defined.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.save_dir\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#1003-1005\">source</a><a href=\"#method.save_dir\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#method.save_dir\" class=\"fn\">save_dir</a>(&amp;self) -&gt; &amp;<a class=\"enum\" href=\"ext/save/enum.SaveDirectory.html\" title=\"enum ext::save::SaveDirectory\">SaveDirectory</a></h4></section></summary><div class='docblock'>A directory used to save information about the chain complex.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply_quasi_inverse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#1007-1176\">source</a><a href=\"#method.apply_quasi_inverse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#method.apply_quasi_inverse\" class=\"fn\">apply_quasi_inverse</a>&lt;T, S&gt;(\n    &amp;self,\n    results: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.slice.html\">[T]</a>,\n    b: <a class=\"struct\" href=\"sseq/coordinates/bidegree/struct.Bidegree.html\" title=\"struct sseq::coordinates::bidegree::Bidegree\">Bidegree</a>,\n    inputs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.slice.html\">[S]</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    for&lt;'a&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.reference.html\">&amp;'a mut T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"fp/vector/fp_wrapper/enum.FpSliceMut.html\" title=\"enum fp::vector::fp_wrapper::FpSliceMut\">FpSliceMut</a>&lt;'a&gt;&gt;,\n    for&lt;'a&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.reference.html\">&amp;'a S</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"fp/vector/fp_wrapper/enum.FpSlice.html\" title=\"enum fp::vector::fp_wrapper::FpSlice\">FpSlice</a>&lt;'a&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply the quasi-inverse of the (s, t)th differential to the list of inputs and results.\nThis defaults to applying <code>self.differentials(s).quasi_inverse(t)</code>, but in some cases\nthe quasi-inverse might be stored separately on disk. <a href=\"ext/chain_complex/trait.ChainComplex.html#method.apply_quasi_inverse\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_stem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/chain_complex/mod.rs.html#197-203\">source</a><a href=\"#method.iter_stem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#method.iter_stem\" class=\"fn\">iter_stem</a>(&amp;self) -&gt; <a class=\"struct\" href=\"ext/chain_complex/struct.StemIterator.html\" title=\"struct ext::chain_complex::StemIterator\">StemIterator</a>&lt;'_, Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"StemIterator&lt;&#39;_, Self&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Iterate through all defined bidegrees in increasing order of stem.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.save_file\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/chain_complex/mod.rs.html#240-251\">source</a><a href=\"#method.save_file\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#method.save_file\" class=\"fn\">save_file</a>(&amp;self, kind: <a class=\"enum\" href=\"ext/save/enum.SaveKind.html\" title=\"enum ext::save::SaveKind\">SaveKind</a>, b: <a class=\"struct\" href=\"sseq/coordinates/bidegree/struct.Bidegree.html\" title=\"struct sseq::coordinates::bidegree::Bidegree\">Bidegree</a>) -&gt; <a class=\"struct\" href=\"ext/save/struct.SaveFile.html\" title=\"struct ext::save::SaveFile\">SaveFile</a>&lt;Self::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Algebra\" title=\"type ext::chain_complex::ChainComplex::Algebra\">Algebra</a>&gt;</h4></section></summary><div class='docblock'>Get the save file of a bidegree</div></details></div></details>","ChainComplex","ext::utils::QueryModuleResolution"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Resolution%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#401-946\">source</a><a href=\"#impl-Resolution%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M: <a class=\"trait\" href=\"algebra/module/zero_module/trait.ZeroModule.html\" title=\"trait algebra::module::zero_module::ZeroModule\">ZeroModule</a>&lt;Algebra = <a class=\"struct\" href=\"algebra/algebra/milnor_algebra/struct.MilnorAlgebra.html\" title=\"struct algebra::algebra::milnor_algebra::MilnorAlgebra\">MilnorAlgebra</a>&gt;&gt; <a class=\"struct\" href=\"ext/nassau/struct.Resolution.html\" title=\"struct ext::nassau::Resolution\">Resolution</a>&lt;M&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.name\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#402-404\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/nassau/struct.Resolution.html#tymethod.name\" class=\"fn\">name</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.str.html\">str</a></h4></section><section id=\"method.set_name\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#406-408\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/nassau/struct.Resolution.html#tymethod.set_name\" class=\"fn\">set_name</a>(&amp;mut self, name: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>)</h4></section><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#410-412\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/nassau/struct.Resolution.html#tymethod.new\" class=\"fn\">new</a>(module: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;M&gt;) -&gt; Self</h4></section><section id=\"method.new_with_save\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#414-441\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/nassau/struct.Resolution.html#tymethod.new_with_save\" class=\"fn\">new_with_save</a>(\n    module: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;M&gt;,\n    save_dir: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"ext/save/enum.SaveDirectory.html\" title=\"enum ext::save::SaveDirectory\">SaveDirectory</a>&gt;,\n) -&gt; <a class=\"type\" href=\"https://docs.rs/anyhow/1.0.91/anyhow/type.Result.html\" title=\"type anyhow::Result\">Result</a>&lt;Self&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_through_degree\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#446-480\">source</a><h4 class=\"code-header\">fn <a href=\"ext/nassau/struct.Resolution.html#tymethod.extend_through_degree\" class=\"fn\">extend_through_degree</a>(&amp;self, max_s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class=\"docblock\"><p>This function prepares the Resolution object to perform computations up to the\nspecified s degree. It does <em>not</em> perform any computations by itself. It simply lengthens\nthe <code>OnceVec</code>s <code>modules</code>, <code>chain_maps</code>, etc. to the right length.</p>\n</div></details><section id=\"method.write_qi\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#482\">source</a><h4 class=\"code-header\">fn <a href=\"ext/nassau/struct.Resolution.html#tymethod.write_qi\" class=\"fn\">write_qi</a>(\n    f: &amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>&gt;,\n    scratch: &amp;mut <a class=\"enum\" href=\"fp/vector/fp_wrapper/enum.FpVector.html\" title=\"enum fp::vector::fp_wrapper::FpVector\">FpVector</a>,\n    signature: &amp;[<a class=\"type\" href=\"algebra/algebra/milnor_algebra/type.PPartEntry.html\" title=\"type algebra::algebra::milnor_algebra::PPartEntry\">PPartEntry</a>],\n    next_mask: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>],\n    full_matrix: &amp;<a class=\"struct\" href=\"fp/matrix/matrix_inner/struct.Matrix.html\" title=\"struct fp::matrix::matrix_inner::Matrix\">Matrix</a>,\n    masked_matrix: &amp;<a class=\"struct\" href=\"fp/matrix/matrix_inner/struct.AugmentedMatrix.html\" title=\"struct fp::matrix::matrix_inner::AugmentedMatrix\">AugmentedMatrix</a>&lt;2&gt;,\n) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.82.0/std/io/error/type.Result.html\" title=\"type std::io::error::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.unit.html\">()</a>&gt;</h4></section><section id=\"method.write_differential\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#535-553\">source</a><h4 class=\"code-header\">fn <a href=\"ext/nassau/struct.Resolution.html#tymethod.write_differential\" class=\"fn\">write_differential</a>(\n    &amp;self,\n    b: <a class=\"struct\" href=\"sseq/coordinates/bidegree/struct.Bidegree.html\" title=\"struct sseq::coordinates::bidegree::Bidegree\">Bidegree</a>,\n    num_new_gens: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>,\n    target_dim: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"type\" href=\"https://docs.rs/anyhow/1.0.91/anyhow/type.Result.html\" title=\"type anyhow::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.unit.html\">()</a>&gt;</h4></section><section id=\"method.step_resolution_with_subalgebra\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#555\">source</a><h4 class=\"code-header\">fn <a href=\"ext/nassau/struct.Resolution.html#tymethod.step_resolution_with_subalgebra\" class=\"fn\">step_resolution_with_subalgebra</a>(\n    &amp;self,\n    b: <a class=\"struct\" href=\"sseq/coordinates/bidegree/struct.Bidegree.html\" title=\"struct sseq::coordinates::bidegree::Bidegree\">Bidegree</a>,\n    subalgebra: <a class=\"struct\" href=\"ext/nassau/struct.MilnorSubalgebra.html\" title=\"struct ext::nassau::MilnorSubalgebra\">MilnorSubalgebra</a>,\n) -&gt; <a class=\"type\" href=\"https://docs.rs/anyhow/1.0.91/anyhow/type.Result.html\" title=\"type anyhow::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.unit.html\">()</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.step0\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#721-768\">source</a><h4 class=\"code-header\">fn <a href=\"ext/nassau/struct.Resolution.html#tymethod.step0\" class=\"fn\">step0</a>(&amp;self, t: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class=\"docblock\"><p>Step resolution for s = 0</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.step1\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#771-812\">source</a><h4 class=\"code-header\">fn <a href=\"ext/nassau/struct.Resolution.html#tymethod.step1\" class=\"fn\">step1</a>(&amp;self, t: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"type\" href=\"https://docs.rs/anyhow/1.0.91/anyhow/type.Result.html\" title=\"type anyhow::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Step resolution for s = 1</p>\n</div></details><section id=\"method.step_resolution_with_result\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#814-880\">source</a><h4 class=\"code-header\">fn <a href=\"ext/nassau/struct.Resolution.html#tymethod.step_resolution_with_result\" class=\"fn\">step_resolution_with_result</a>(&amp;self, b: <a class=\"struct\" href=\"sseq/coordinates/bidegree/struct.Bidegree.html\" title=\"struct sseq::coordinates::bidegree::Bidegree\">Bidegree</a>) -&gt; <a class=\"type\" href=\"https://docs.rs/anyhow/1.0.91/anyhow/type.Result.html\" title=\"type anyhow::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.unit.html\">()</a>&gt;</h4></section><section id=\"method.step_resolution\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#882-885\">source</a><h4 class=\"code-header\">fn <a href=\"ext/nassau/struct.Resolution.html#tymethod.step_resolution\" class=\"fn\">step_resolution</a>(&amp;self, b: <a class=\"struct\" href=\"sseq/coordinates/bidegree/struct.Bidegree.html\" title=\"struct sseq::coordinates::bidegree::Bidegree\">Bidegree</a>)</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.compute_through_stem\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#888\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/nassau/struct.Resolution.html#tymethod.compute_through_stem\" class=\"fn\">compute_through_stem</a>(&amp;self, max: <a class=\"struct\" href=\"sseq/coordinates/bidegree/struct.Bidegree.html\" title=\"struct sseq::coordinates::bidegree::Bidegree\">Bidegree</a>)</h4></section></summary><div class=\"docblock\"><p>This function resolves up till a fixed stem instead of a fixed t.</p>\n</div></details></div></details>",0,"ext::utils::QueryModuleResolution"]]],["ext",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AugmentedChainComplex-for-Resolution%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#1179-1190\">source</a><a href=\"#impl-AugmentedChainComplex-for-Resolution%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M: ZeroModule&lt;Algebra = MilnorAlgebra&gt;&gt; <a class=\"trait\" href=\"ext/chain_complex/trait.AugmentedChainComplex.html\" title=\"trait ext::chain_complex::AugmentedChainComplex\">AugmentedChainComplex</a> for <a class=\"struct\" href=\"ext/nassau/struct.Resolution.html\" title=\"struct ext::nassau::Resolution\">Resolution</a>&lt;M&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.ChainMap\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#1180\">source</a><a href=\"#associatedtype.ChainMap\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ext/chain_complex/trait.AugmentedChainComplex.html#associatedtype.ChainMap\" class=\"associatedtype\">ChainMap</a> = MuFreeModuleHomomorphism&lt;false, M&gt;</h4></section><section id=\"associatedtype.TargetComplex\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#1181\">source</a><a href=\"#associatedtype.TargetComplex\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ext/chain_complex/trait.AugmentedChainComplex.html#associatedtype.TargetComplex\" class=\"associatedtype\">TargetComplex</a> = <a class=\"struct\" href=\"ext/chain_complex/struct.FiniteChainComplex.html\" title=\"struct ext::chain_complex::FiniteChainComplex\">FiniteChainComplex</a>&lt;M&gt;</h4></section><section id=\"method.target\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#1183-1185\">source</a><a href=\"#method.target\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.AugmentedChainComplex.html#tymethod.target\" class=\"fn\">target</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;Self::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.AugmentedChainComplex.html#associatedtype.TargetComplex\" title=\"type ext::chain_complex::AugmentedChainComplex::TargetComplex\">TargetComplex</a>&gt;</h4></section><section id=\"method.chain_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#1187-1189\">source</a><a href=\"#method.chain_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.AugmentedChainComplex.html#tymethod.chain_map\" class=\"fn\">chain_map</a>(&amp;self, s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;Self::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.AugmentedChainComplex.html#associatedtype.ChainMap\" title=\"type ext::chain_complex::AugmentedChainComplex::ChainMap\">ChainMap</a>&gt;</h4></section></div></details>","AugmentedChainComplex","ext::utils::QueryModuleResolution"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ChainComplex-for-Resolution%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#948-1177\">source</a><a href=\"#impl-ChainComplex-for-Resolution%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M: ZeroModule&lt;Algebra = MilnorAlgebra&gt;&gt; <a class=\"trait\" href=\"ext/chain_complex/trait.ChainComplex.html\" title=\"trait ext::chain_complex::ChainComplex\">ChainComplex</a> for <a class=\"struct\" href=\"ext/nassau/struct.Resolution.html\" title=\"struct ext::nassau::Resolution\">Resolution</a>&lt;M&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Algebra\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#949\">source</a><a href=\"#associatedtype.Algebra\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Algebra\" class=\"associatedtype\">Algebra</a> = MilnorAlgebra</h4></section><section id=\"associatedtype.Homomorphism\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#950\">source</a><a href=\"#associatedtype.Homomorphism\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Homomorphism\" class=\"associatedtype\">Homomorphism</a> = MuFreeModuleHomomorphism&lt;false, MuFreeModule&lt;false, &lt;<a class=\"struct\" href=\"ext/nassau/struct.Resolution.html\" title=\"struct ext::nassau::Resolution\">Resolution</a>&lt;M&gt; as <a class=\"trait\" href=\"ext/chain_complex/trait.ChainComplex.html\" title=\"trait ext::chain_complex::ChainComplex\">ChainComplex</a>&gt;::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Algebra\" title=\"type ext::chain_complex::ChainComplex::Algebra\">Algebra</a>&gt;&gt;</h4></section><section id=\"associatedtype.Module\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#951\">source</a><a href=\"#associatedtype.Module\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Module\" class=\"associatedtype\">Module</a> = MuFreeModule&lt;false, &lt;<a class=\"struct\" href=\"ext/nassau/struct.Resolution.html\" title=\"struct ext::nassau::Resolution\">Resolution</a>&lt;M&gt; as <a class=\"trait\" href=\"ext/chain_complex/trait.ChainComplex.html\" title=\"trait ext::chain_complex::ChainComplex\">ChainComplex</a>&gt;::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Algebra\" title=\"type ext::chain_complex::ChainComplex::Algebra\">Algebra</a>&gt;</h4></section><section id=\"method.prime\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#953-955\">source</a><a href=\"#method.prime\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#method.prime\" class=\"fn\">prime</a>(&amp;self) -&gt; ValidPrime</h4></section><section id=\"method.algebra\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#957-959\">source</a><a href=\"#method.algebra\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#tymethod.algebra\" class=\"fn\">algebra</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;Self::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Algebra\" title=\"type ext::chain_complex::ChainComplex::Algebra\">Algebra</a>&gt;</h4></section><section id=\"method.module\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#961-963\">source</a><a href=\"#method.module\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#tymethod.module\" class=\"fn\">module</a>(&amp;self, s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;Self::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Module\" title=\"type ext::chain_complex::ChainComplex::Module\">Module</a>&gt;</h4></section><section id=\"method.zero_module\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#965-967\">source</a><a href=\"#method.zero_module\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#tymethod.zero_module\" class=\"fn\">zero_module</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;Self::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Module\" title=\"type ext::chain_complex::ChainComplex::Module\">Module</a>&gt;</h4></section><section id=\"method.min_degree\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#969-971\">source</a><a href=\"#method.min_degree\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#tymethod.min_degree\" class=\"fn\">min_degree</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.i32.html\">i32</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_computed_bidegree\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#973-975\">source</a><a href=\"#method.has_computed_bidegree\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#tymethod.has_computed_bidegree\" class=\"fn\">has_computed_bidegree</a>(&amp;self, b: Bidegree) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>If the complex has been computed at bidegree (s, t). This means the module has been\ncomputed at (s, t), and so has the differential at (s, t). In the case of a free module,\nthe target of the differential, namely the bidegree (s - 1, t), need not be computed, as\nlong as all the generators hit by the differential have already been computed.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.differential\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#977-979\">source</a><a href=\"#method.differential\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#tymethod.differential\" class=\"fn\">differential</a>(&amp;self, s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;Self::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Homomorphism\" title=\"type ext::chain_complex::ChainComplex::Homomorphism\">Homomorphism</a>&gt;</h4></section></summary><div class='docblock'>This returns the differential starting from the sth module.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compute_through_bidegree\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#981\">source</a><a href=\"#method.compute_through_bidegree\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#tymethod.compute_through_bidegree\" class=\"fn\">compute_through_bidegree</a>(&amp;self, max: Bidegree)</h4></section></summary><div class='docblock'>Ensure all bidegrees less than or equal to (s, t) have been computed</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_homological_degree\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#999-1001\">source</a><a href=\"#method.next_homological_degree\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#tymethod.next_homological_degree\" class=\"fn\">next_homological_degree</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The first s such that <code>self.module(s)</code> is not defined.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.save_dir\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#1003-1005\">source</a><a href=\"#method.save_dir\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#method.save_dir\" class=\"fn\">save_dir</a>(&amp;self) -&gt; &amp;<a class=\"enum\" href=\"ext/save/enum.SaveDirectory.html\" title=\"enum ext::save::SaveDirectory\">SaveDirectory</a></h4></section></summary><div class='docblock'>A directory used to save information about the chain complex.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply_quasi_inverse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#1007-1176\">source</a><a href=\"#method.apply_quasi_inverse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#method.apply_quasi_inverse\" class=\"fn\">apply_quasi_inverse</a>&lt;T, S&gt;(\n    &amp;self,\n    results: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.slice.html\">[T]</a>,\n    b: Bidegree,\n    inputs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.slice.html\">[S]</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    for&lt;'a&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.reference.html\">&amp;'a mut T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;FpSliceMut&lt;'a&gt;&gt;,\n    for&lt;'a&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.reference.html\">&amp;'a S</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;FpSlice&lt;'a&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply the quasi-inverse of the (s, t)th differential to the list of inputs and results.\nThis defaults to applying <code>self.differentials(s).quasi_inverse(t)</code>, but in some cases\nthe quasi-inverse might be stored separately on disk. <a href=\"ext/chain_complex/trait.ChainComplex.html#method.apply_quasi_inverse\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_stem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/chain_complex/mod.rs.html#197-203\">source</a><a href=\"#method.iter_stem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#method.iter_stem\" class=\"fn\">iter_stem</a>(&amp;self) -&gt; <a class=\"struct\" href=\"ext/chain_complex/struct.StemIterator.html\" title=\"struct ext::chain_complex::StemIterator\">StemIterator</a>&lt;'_, Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"StemIterator&lt;&#39;_, Self&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Iterate through all defined bidegrees in increasing order of stem.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.save_file\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/chain_complex/mod.rs.html#240-251\">source</a><a href=\"#method.save_file\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#method.save_file\" class=\"fn\">save_file</a>(&amp;self, kind: <a class=\"enum\" href=\"ext/save/enum.SaveKind.html\" title=\"enum ext::save::SaveKind\">SaveKind</a>, b: Bidegree) -&gt; <a class=\"struct\" href=\"ext/save/struct.SaveFile.html\" title=\"struct ext::save::SaveFile\">SaveFile</a>&lt;Self::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Algebra\" title=\"type ext::chain_complex::ChainComplex::Algebra\">Algebra</a>&gt;</h4></section></summary><div class='docblock'>Get the save file of a bidegree</div></details></div></details>","ChainComplex","ext::utils::QueryModuleResolution"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Resolution%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#401-946\">source</a><a href=\"#impl-Resolution%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M: ZeroModule&lt;Algebra = MilnorAlgebra&gt;&gt; <a class=\"struct\" href=\"ext/nassau/struct.Resolution.html\" title=\"struct ext::nassau::Resolution\">Resolution</a>&lt;M&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.name\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#402-404\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/nassau/struct.Resolution.html#tymethod.name\" class=\"fn\">name</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.str.html\">str</a></h4></section><section id=\"method.set_name\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#406-408\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/nassau/struct.Resolution.html#tymethod.set_name\" class=\"fn\">set_name</a>(&amp;mut self, name: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>)</h4></section><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#410-412\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/nassau/struct.Resolution.html#tymethod.new\" class=\"fn\">new</a>(module: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;M&gt;) -&gt; Self</h4></section><section id=\"method.new_with_save\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#414-441\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/nassau/struct.Resolution.html#tymethod.new_with_save\" class=\"fn\">new_with_save</a>(\n    module: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;M&gt;,\n    save_dir: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"ext/save/enum.SaveDirectory.html\" title=\"enum ext::save::SaveDirectory\">SaveDirectory</a>&gt;,\n) -&gt; <a class=\"type\" href=\"https://docs.rs/anyhow/1.0.91/anyhow/type.Result.html\" title=\"type anyhow::Result\">Result</a>&lt;Self&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.compute_through_stem\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/nassau.rs.html#888\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/nassau/struct.Resolution.html#tymethod.compute_through_stem\" class=\"fn\">compute_through_stem</a>(&amp;self, max: Bidegree)</h4></section></summary><div class=\"docblock\"><p>This function resolves up till a fixed stem instead of a fixed t.</p>\n</div></details></div></details>",0,"ext::utils::QueryModuleResolution"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[28957,19504]}
(function() {var type_impls = {
"ext":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FiniteChainComplex%3CM,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ext/chain_complex/finite_chain_complex.rs.html#17-51\">source</a><a href=\"#impl-FiniteChainComplex%3CM,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, F&gt; <a class=\"struct\" href=\"ext/chain_complex/struct.FiniteChainComplex.html\" title=\"struct ext::chain_complex::FiniteChainComplex\">FiniteChainComplex</a>&lt;M, F&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"algebra/module/module_trait/trait.Module.html\" title=\"trait algebra::module::module_trait::Module\">Module</a> + <a class=\"trait\" href=\"algebra/module/zero_module/trait.ZeroModule.html\" title=\"trait algebra::module::zero_module::ZeroModule\">ZeroModule</a>,\n    F: <a class=\"trait\" href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html\" title=\"trait algebra::module::homomorphism::ModuleHomomorphism\">ModuleHomomorphism</a>&lt;Source = M, Target = M&gt; + <a class=\"trait\" href=\"algebra/module/homomorphism/trait.ZeroHomomorphism.html\" title=\"trait algebra::module::homomorphism::ZeroHomomorphism\">ZeroHomomorphism</a>&lt;M, M&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/chain_complex/finite_chain_complex.rs.html#22-46\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/chain_complex/struct.FiniteChainComplex.html#tymethod.new\" class=\"fn\">new</a>(modules: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;M&gt;&gt;, differentials: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;F&gt;&gt;) -&gt; Self</h4></section><section id=\"method.ccdz\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/chain_complex/finite_chain_complex.rs.html#48-50\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/chain_complex/struct.FiniteChainComplex.html#tymethod.ccdz\" class=\"fn\">ccdz</a>(module: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;M&gt;) -&gt; Self</h4></section></div></details>",0,"ext::CCC"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FiniteChainComplex%3CM,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ext/chain_complex/finite_chain_complex.rs.html#53-80\">source</a><a href=\"#impl-FiniteChainComplex%3CM,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, F&gt; <a class=\"struct\" href=\"ext/chain_complex/struct.FiniteChainComplex.html\" title=\"struct ext::chain_complex::FiniteChainComplex\">FiniteChainComplex</a>&lt;M, F&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"algebra/module/module_trait/trait.Module.html\" title=\"trait algebra::module::module_trait::Module\">Module</a>,\n    F: <a class=\"trait\" href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html\" title=\"trait algebra::module::homomorphism::ModuleHomomorphism\">ModuleHomomorphism</a>&lt;Source = M, Target = M&gt; + <a class=\"trait\" href=\"algebra/module/homomorphism/trait.ZeroHomomorphism.html\" title=\"trait algebra::module::homomorphism::ZeroHomomorphism\">ZeroHomomorphism</a>&lt;M, M&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/chain_complex/finite_chain_complex.rs.html#58-79\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/chain_complex/struct.FiniteChainComplex.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self)</h4></section></div></details>",0,"ext::CCC"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FiniteChainComplex%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ext/chain_complex/finite_chain_complex.rs.html#82-117\">source</a><a href=\"#impl-FiniteChainComplex%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M: <a class=\"trait\" href=\"algebra/module/module_trait/trait.Module.html\" title=\"trait algebra::module::module_trait::Module\">Module</a>&gt; <a class=\"struct\" href=\"ext/chain_complex/struct.FiniteChainComplex.html\" title=\"struct ext::chain_complex::FiniteChainComplex\">FiniteChainComplex</a>&lt;M, <a class=\"struct\" href=\"algebra/module/homomorphism/full_module_homomorphism/struct.FullModuleHomomorphism.html\" title=\"struct algebra::module::homomorphism::full_module_homomorphism::FullModuleHomomorphism\">FullModuleHomomorphism</a>&lt;M&gt;&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.map\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/chain_complex/finite_chain_complex.rs.html#83-116\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/chain_complex/struct.FiniteChainComplex.html#tymethod.map\" class=\"fn\">map</a>&lt;N: <a class=\"trait\" href=\"algebra/module/module_trait/trait.Module.html\" title=\"trait algebra::module::module_trait::Module\">Module</a>&lt;Algebra = M::<a class=\"associatedtype\" href=\"algebra/module/module_trait/trait.Module.html#associatedtype.Algebra\" title=\"type algebra::module::module_trait::Module::Algebra\">Algebra</a>&gt;&gt;(\n    &amp;self,\n    f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;M</a>) -&gt; N\n) -&gt; <a class=\"struct\" href=\"ext/chain_complex/struct.FiniteChainComplex.html\" title=\"struct ext::chain_complex::FiniteChainComplex\">FiniteChainComplex</a>&lt;N, <a class=\"struct\" href=\"algebra/module/homomorphism/full_module_homomorphism/struct.FullModuleHomomorphism.html\" title=\"struct algebra::module::homomorphism::full_module_homomorphism::FullModuleHomomorphism\">FullModuleHomomorphism</a>&lt;N&gt;&gt;</h4></section></div></details>",0,"ext::CCC"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FiniteChainComplex%3CM,+F1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ext/chain_complex/finite_chain_complex.rs.html#311-330\">source</a><a href=\"#impl-FiniteChainComplex%3CM,+F1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, F1&gt; <a class=\"struct\" href=\"ext/chain_complex/struct.FiniteChainComplex.html\" title=\"struct ext::chain_complex::FiniteChainComplex\">FiniteChainComplex</a>&lt;M, F1&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"algebra/module/module_trait/trait.Module.html\" title=\"trait algebra::module::module_trait::Module\">Module</a>,\n    F1: <a class=\"trait\" href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html\" title=\"trait algebra::module::homomorphism::ModuleHomomorphism\">ModuleHomomorphism</a>&lt;Source = M, Target = M&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.augment\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/chain_complex/finite_chain_complex.rs.html#316-329\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/chain_complex/struct.FiniteChainComplex.html#tymethod.augment\" class=\"fn\">augment</a>&lt;CC: <a class=\"trait\" href=\"ext/chain_complex/trait.ChainComplex.html\" title=\"trait ext::chain_complex::ChainComplex\">ChainComplex</a>&lt;Algebra = M::<a class=\"associatedtype\" href=\"algebra/module/module_trait/trait.Module.html#associatedtype.Algebra\" title=\"type algebra::module::module_trait::Module::Algebra\">Algebra</a>&gt;, F2: <a class=\"trait\" href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html\" title=\"trait algebra::module::homomorphism::ModuleHomomorphism\">ModuleHomomorphism</a>&lt;Source = M, Target = CC::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Module\" title=\"type ext::chain_complex::ChainComplex::Module\">Module</a>&gt;&gt;(\n    self,\n    target_cc: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;CC&gt;,\n    chain_maps: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;F2&gt;&gt;\n) -&gt; <a class=\"struct\" href=\"ext/chain_complex/struct.FiniteAugmentedChainComplex.html\" title=\"struct ext::chain_complex::FiniteAugmentedChainComplex\">FiniteAugmentedChainComplex</a>&lt;M, F1, F2, CC&gt;</h4></section></div></details>",0,"ext::CCC"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFiniteAugmentedChainComplex%3CM,+F1,+F2,+CC%3E%3E-for-FiniteChainComplex%3CM,+F1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ext/chain_complex/finite_chain_complex.rs.html#287-297\">source</a><a href=\"#impl-From%3CFiniteAugmentedChainComplex%3CM,+F1,+F2,+CC%3E%3E-for-FiniteChainComplex%3CM,+F1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, F1, F2, CC&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"ext/chain_complex/struct.FiniteAugmentedChainComplex.html\" title=\"struct ext::chain_complex::FiniteAugmentedChainComplex\">FiniteAugmentedChainComplex</a>&lt;M, F1, F2, CC&gt;&gt; for <a class=\"struct\" href=\"ext/chain_complex/struct.FiniteChainComplex.html\" title=\"struct ext::chain_complex::FiniteChainComplex\">FiniteChainComplex</a>&lt;M, F1&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"algebra/module/module_trait/trait.Module.html\" title=\"trait algebra::module::module_trait::Module\">Module</a>,\n    CC: <a class=\"trait\" href=\"ext/chain_complex/trait.ChainComplex.html\" title=\"trait ext::chain_complex::ChainComplex\">ChainComplex</a>&lt;Algebra = M::<a class=\"associatedtype\" href=\"algebra/module/module_trait/trait.Module.html#associatedtype.Algebra\" title=\"type algebra::module::module_trait::Module::Algebra\">Algebra</a>&gt;,\n    F1: <a class=\"trait\" href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html\" title=\"trait algebra::module::homomorphism::ModuleHomomorphism\">ModuleHomomorphism</a>&lt;Source = M, Target = M&gt;,\n    F2: <a class=\"trait\" href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html\" title=\"trait algebra::module::homomorphism::ModuleHomomorphism\">ModuleHomomorphism</a>&lt;Source = M, Target = CC::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Module\" title=\"type ext::chain_complex::ChainComplex::Module\">Module</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/chain_complex/finite_chain_complex.rs.html#294-296\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(\n    c: <a class=\"struct\" href=\"ext/chain_complex/struct.FiniteAugmentedChainComplex.html\" title=\"struct ext::chain_complex::FiniteAugmentedChainComplex\">FiniteAugmentedChainComplex</a>&lt;M, F1, F2, CC&gt;\n) -&gt; <a class=\"struct\" href=\"ext/chain_complex/struct.FiniteChainComplex.html\" title=\"struct ext::chain_complex::FiniteChainComplex\">FiniteChainComplex</a>&lt;M, F1&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<FiniteAugmentedChainComplex<M, F1, F2, CC>>","ext::CCC"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ChainComplex-for-FiniteChainComplex%3CM,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ext/chain_complex/finite_chain_complex.rs.html#119-167\">source</a><a href=\"#impl-ChainComplex-for-FiniteChainComplex%3CM,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, F&gt; <a class=\"trait\" href=\"ext/chain_complex/trait.ChainComplex.html\" title=\"trait ext::chain_complex::ChainComplex\">ChainComplex</a> for <a class=\"struct\" href=\"ext/chain_complex/struct.FiniteChainComplex.html\" title=\"struct ext::chain_complex::FiniteChainComplex\">FiniteChainComplex</a>&lt;M, F&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"algebra/module/module_trait/trait.Module.html\" title=\"trait algebra::module::module_trait::Module\">Module</a>,\n    F: <a class=\"trait\" href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html\" title=\"trait algebra::module::homomorphism::ModuleHomomorphism\">ModuleHomomorphism</a>&lt;Source = M, Target = M&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Algebra\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Algebra\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Algebra\" class=\"associatedtype\">Algebra</a> = &lt;M as <a class=\"trait\" href=\"algebra/module/module_trait/trait.Module.html\" title=\"trait algebra::module::module_trait::Module\">Module</a>&gt;::<a class=\"associatedtype\" href=\"algebra/module/module_trait/trait.Module.html#associatedtype.Algebra\" title=\"type algebra::module::module_trait::Module::Algebra\">Algebra</a></h4></section><section id=\"associatedtype.Module\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Module\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Module\" class=\"associatedtype\">Module</a> = M</h4></section><section id=\"associatedtype.Homomorphism\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Homomorphism\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Homomorphism\" class=\"associatedtype\">Homomorphism</a> = F</h4></section><section id=\"method.algebra\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/chain_complex/finite_chain_complex.rs.html#128-130\">source</a><a href=\"#method.algebra\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#tymethod.algebra\" class=\"fn\">algebra</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;Self::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Algebra\" title=\"type ext::chain_complex::ChainComplex::Algebra\">Algebra</a>&gt;</h4></section><section id=\"method.min_degree\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/chain_complex/finite_chain_complex.rs.html#131-133\">source</a><a href=\"#method.min_degree\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#tymethod.min_degree\" class=\"fn\">min_degree</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a></h4></section><section id=\"method.zero_module\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/chain_complex/finite_chain_complex.rs.html#135-137\">source</a><a href=\"#method.zero_module\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#tymethod.zero_module\" class=\"fn\">zero_module</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;Self::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Module\" title=\"type ext::chain_complex::ChainComplex::Module\">Module</a>&gt;</h4></section><section id=\"method.module\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/chain_complex/finite_chain_complex.rs.html#139-146\">source</a><a href=\"#method.module\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#tymethod.module\" class=\"fn\">module</a>(&amp;self, s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;Self::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Module\" title=\"type ext::chain_complex::ChainComplex::Module\">Module</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.differential\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/chain_complex/finite_chain_complex.rs.html#148-152\">source</a><a href=\"#method.differential\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#tymethod.differential\" class=\"fn\">differential</a>(&amp;self, s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;Self::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Homomorphism\" title=\"type ext::chain_complex::ChainComplex::Homomorphism\">Homomorphism</a>&gt;</h4></section></summary><div class='docblock'>This returns the differential starting from the sth module.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compute_through_bidegree\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/chain_complex/finite_chain_complex.rs.html#154-158\">source</a><a href=\"#method.compute_through_bidegree\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#tymethod.compute_through_bidegree\" class=\"fn\">compute_through_bidegree</a>(&amp;self, b: <a class=\"struct\" href=\"sseq/coordinates/bidegree/struct.Bidegree.html\" title=\"struct sseq::coordinates::bidegree::Bidegree\">Bidegree</a>)</h4></section></summary><div class='docblock'>Ensure all bidegrees less than or equal to (s, t) have been computed</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_computed_bidegree\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/chain_complex/finite_chain_complex.rs.html#160-162\">source</a><a href=\"#method.has_computed_bidegree\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#tymethod.has_computed_bidegree\" class=\"fn\">has_computed_bidegree</a>(&amp;self, b: <a class=\"struct\" href=\"sseq/coordinates/bidegree/struct.Bidegree.html\" title=\"struct sseq::coordinates::bidegree::Bidegree\">Bidegree</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>If the complex has been computed at bidegree (s, t). This means the module has been\ncomputed at (s, t), and so has the differential at (s, t). In the case of a free module,\nthe target of the differential, namely the bidegree (s - 1, t), need not be computed, as\nlong as all the generators hit by the differential have already been computed.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_homological_degree\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/chain_complex/finite_chain_complex.rs.html#164-166\">source</a><a href=\"#method.next_homological_degree\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#tymethod.next_homological_degree\" class=\"fn\">next_homological_degree</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The first s such that <code>self.module(s)</code> is not defined.</div></details><section id=\"method.prime\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/chain_complex/mod.rs.html#159-161\">source</a><a href=\"#method.prime\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#method.prime\" class=\"fn\">prime</a>(&amp;self) -&gt; <a class=\"struct\" href=\"fp/prime/validprime/struct.ValidPrime.html\" title=\"struct fp::prime::validprime::ValidPrime\">ValidPrime</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_stem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/chain_complex/mod.rs.html#185-191\">source</a><a href=\"#method.iter_stem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#method.iter_stem\" class=\"fn\">iter_stem</a>(&amp;self) -&gt; <a class=\"struct\" href=\"ext/chain_complex/struct.StemIterator.html\" title=\"struct ext::chain_complex::StemIterator\">StemIterator</a>&lt;'_, Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"StemIterator&lt;&#39;_, Self&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Iterate through all defined bidegrees in increasing order of stem. The return values are of\nthe form <code>(s, n, t)</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply_quasi_inverse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/chain_complex/mod.rs.html#199-220\">source</a><a href=\"#method.apply_quasi_inverse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#method.apply_quasi_inverse\" class=\"fn\">apply_quasi_inverse</a>&lt;T, S&gt;(\n    &amp;self,\n    results: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.slice.html\">[T]</a>,\n    b: <a class=\"struct\" href=\"sseq/coordinates/bidegree/struct.Bidegree.html\" title=\"struct sseq::coordinates::bidegree::Bidegree\">Bidegree</a>,\n    inputs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.slice.html\">[S]</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    for&lt;'a&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'a mut T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"fp/vector/vector_generic/enum.SliceMut.html\" title=\"enum fp::vector::vector_generic::SliceMut\">SliceMut</a>&lt;'a&gt;&gt;,\n    for&lt;'a&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'a S</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"fp/vector/vector_generic/enum.Slice.html\" title=\"enum fp::vector::vector_generic::Slice\">Slice</a>&lt;'a&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply the quasi-inverse of the (s, t)th differential to the list of inputs and results.\nThis defaults to applying <code>self.differentials(s).quasi_inverse(t)</code>, but in some cases\nthe quasi-inverse might be stored separately on disk. <a href=\"ext/chain_complex/trait.ChainComplex.html#method.apply_quasi_inverse\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.save_dir\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/chain_complex/mod.rs.html#223-225\">source</a><a href=\"#method.save_dir\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#method.save_dir\" class=\"fn\">save_dir</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt;</h4></section></summary><div class='docblock'>A directory used to save information about the chain complex.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.save_file\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/chain_complex/mod.rs.html#228-239\">source</a><a href=\"#method.save_file\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.ChainComplex.html#method.save_file\" class=\"fn\">save_file</a>(&amp;self, kind: <a class=\"enum\" href=\"ext/save/enum.SaveKind.html\" title=\"enum ext::save::SaveKind\">SaveKind</a>, b: <a class=\"struct\" href=\"sseq/coordinates/bidegree/struct.Bidegree.html\" title=\"struct sseq::coordinates::bidegree::Bidegree\">Bidegree</a>) -&gt; <a class=\"struct\" href=\"ext/save/struct.SaveFile.html\" title=\"struct ext::save::SaveFile\">SaveFile</a>&lt;Self::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Algebra\" title=\"type ext::chain_complex::ChainComplex::Algebra\">Algebra</a>&gt;</h4></section></summary><div class='docblock'>Get the save file of a bidegree</div></details></div></details>","ChainComplex","ext::CCC"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BoundedChainComplex-for-FiniteChainComplex%3CM,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ext/chain_complex/finite_chain_complex.rs.html#169-177\">source</a><a href=\"#impl-BoundedChainComplex-for-FiniteChainComplex%3CM,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, F&gt; <a class=\"trait\" href=\"ext/chain_complex/trait.BoundedChainComplex.html\" title=\"trait ext::chain_complex::BoundedChainComplex\">BoundedChainComplex</a> for <a class=\"struct\" href=\"ext/chain_complex/struct.FiniteChainComplex.html\" title=\"struct ext::chain_complex::FiniteChainComplex\">FiniteChainComplex</a>&lt;M, F&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"algebra/module/module_trait/trait.Module.html\" title=\"trait algebra::module::module_trait::Module\">Module</a>,\n    F: <a class=\"trait\" href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html\" title=\"trait algebra::module::homomorphism::ModuleHomomorphism\">ModuleHomomorphism</a>&lt;Source = M, Target = M&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.max_s\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/chain_complex/finite_chain_complex.rs.html#174-176\">source</a><a href=\"#method.max_s\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.BoundedChainComplex.html#tymethod.max_s\" class=\"fn\">max_s</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.euler_characteristic\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ext/chain_complex/mod.rs.html#292-296\">source</a><a href=\"#method.euler_characteristic\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ext/chain_complex/trait.BoundedChainComplex.html#method.euler_characteristic\" class=\"fn\">euler_characteristic</a>(&amp;self, t: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a></h4></section></div></details>","BoundedChainComplex","ext::CCC"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()
(function() {var type_impls = {
"ext":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MuResolutionHomomorphism%3CU,+CC1,+CC2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ext/resolution_homomorphism.rs.html#42-100\">source</a><a href=\"#impl-MuResolutionHomomorphism%3CU,+CC1,+CC2%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;const U: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>, CC1, CC2&gt; <a class=\"struct\" href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html\" title=\"struct ext::resolution_homomorphism::MuResolutionHomomorphism\">MuResolutionHomomorphism</a>&lt;U, CC1, CC2&gt;<span class=\"where fmt-newline\">where\n    CC1: <a class=\"trait\" href=\"ext/chain_complex/trait.FreeChainComplex.html\" title=\"trait ext::chain_complex::FreeChainComplex\">FreeChainComplex</a>&lt;U&gt;,\n    CC1::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Algebra\" title=\"type ext::chain_complex::ChainComplex::Algebra\">Algebra</a>: <a class=\"trait\" href=\"algebra/algebra/algebra_trait/trait.MuAlgebra.html\" title=\"trait algebra::algebra::algebra_trait::MuAlgebra\">MuAlgebra</a>&lt;U&gt;,\n    CC2: <a class=\"trait\" href=\"ext/chain_complex/trait.ChainComplex.html\" title=\"trait ext::chain_complex::ChainComplex\">ChainComplex</a>&lt;Algebra = CC1::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Algebra\" title=\"type ext::chain_complex::ChainComplex::Algebra\">Algebra</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/resolution_homomorphism.rs.html#48-66\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html#tymethod.new\" class=\"fn\">new</a>(\n    name: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>,\n    source: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;CC1&gt;,\n    target: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;CC2&gt;,\n    shift: <a class=\"struct\" href=\"sseq/coordinates/bidegree/struct.Bidegree.html\" title=\"struct sseq::coordinates::bidegree::Bidegree\">Bidegree</a>\n) -&gt; Self</h4></section><section id=\"method.name\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/resolution_homomorphism.rs.html#68-70\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html#tymethod.name\" class=\"fn\">name</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a></h4></section><section id=\"method.algebra\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/resolution_homomorphism.rs.html#72-74\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html#tymethod.algebra\" class=\"fn\">algebra</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;CC1::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Algebra\" title=\"type ext::chain_complex::ChainComplex::Algebra\">Algebra</a>&gt;</h4></section><section id=\"method.next_homological_degree\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/resolution_homomorphism.rs.html#76-78\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html#tymethod.next_homological_degree\" class=\"fn\">next_homological_degree</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section><section id=\"method.get_map_ensure_length\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/resolution_homomorphism.rs.html#80-90\">source</a><h4 class=\"code-header\">fn <a href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html#tymethod.get_map_ensure_length\" class=\"fn\">get_map_ensure_length</a>(\n    &amp;self,\n    input_s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>\n) -&gt; &amp;<a class=\"struct\" href=\"algebra/module/homomorphism/free_module_homomorphism/struct.MuFreeModuleHomomorphism.html\" title=\"struct algebra::module::homomorphism::free_module_homomorphism::MuFreeModuleHomomorphism\">MuFreeModuleHomomorphism</a>&lt;U, CC2::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Module\" title=\"type ext::chain_complex::ChainComplex::Module\">Module</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_map\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/resolution_homomorphism.rs.html#93-95\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html#tymethod.get_map\" class=\"fn\">get_map</a>(\n    &amp;self,\n    input_s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"algebra/module/homomorphism/free_module_homomorphism/struct.MuFreeModuleHomomorphism.html\" title=\"struct algebra::module::homomorphism::free_module_homomorphism::MuFreeModuleHomomorphism\">MuFreeModuleHomomorphism</a>&lt;U, CC2::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Module\" title=\"type ext::chain_complex::ChainComplex::Module\">Module</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the chain map on the <code>s</code>th source module.</p>\n</div></details><section id=\"method.save_dir\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/resolution_homomorphism.rs.html#97-99\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html#tymethod.save_dir\" class=\"fn\">save_dir</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt;</h4></section></div></details>",0,"ext::resolution_homomorphism::ResolutionHomomorphism","ext::resolution_homomorphism::UnstableResolutionHomomorphism"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MuResolutionHomomorphism%3CU,+CC1,+CC2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ext/resolution_homomorphism.rs.html#102-332\">source</a><a href=\"#impl-MuResolutionHomomorphism%3CU,+CC1,+CC2%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;const U: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>, CC1, CC2&gt; <a class=\"struct\" href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html\" title=\"struct ext::resolution_homomorphism::MuResolutionHomomorphism\">MuResolutionHomomorphism</a>&lt;U, CC1, CC2&gt;<span class=\"where fmt-newline\">where\n    CC1: <a class=\"trait\" href=\"ext/chain_complex/trait.FreeChainComplex.html\" title=\"trait ext::chain_complex::FreeChainComplex\">FreeChainComplex</a>&lt;U&gt;,\n    CC1::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Algebra\" title=\"type ext::chain_complex::ChainComplex::Algebra\">Algebra</a>: <a class=\"trait\" href=\"algebra/algebra/algebra_trait/trait.MuAlgebra.html\" title=\"trait algebra::algebra::algebra_trait::MuAlgebra\">MuAlgebra</a>&lt;U&gt;,\n    CC2: <a class=\"trait\" href=\"ext/chain_complex/trait.ChainComplex.html\" title=\"trait ext::chain_complex::ChainComplex\">ChainComplex</a>&lt;Algebra = CC1::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Algebra\" title=\"type ext::chain_complex::ChainComplex::Algebra\">Algebra</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/resolution_homomorphism.rs.html#114-116\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html#tymethod.extend\" class=\"fn\">extend</a>(&amp;self, max: <a class=\"struct\" href=\"sseq/coordinates/bidegree/struct.Bidegree.html\" title=\"struct sseq::coordinates::bidegree::Bidegree\">Bidegree</a>)</h4></section></summary><div class=\"docblock\"><p>Extend the resolution homomorphism such that it is defined on degrees\n(<code>max_s</code>, <code>max_t</code>).</p>\n<p>This assumes in yet-uncomputed bidegrees, the homology of the source consists only of\ndecomposables (e.g. it is trivial). More precisely, we assume\n<a href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html#method.extend_step_raw\" title=\"method ext::resolution_homomorphism::MuResolutionHomomorphism::extend_step_raw\"><code>MuResolutionHomomorphism::extend_step_raw</code></a> can be called with <code>extra_images = None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_through_stem\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/resolution_homomorphism.rs.html#124-128\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html#tymethod.extend_through_stem\" class=\"fn\">extend_through_stem</a>(&amp;self, max: <a class=\"struct\" href=\"sseq/coordinates/bidegree/struct.Bidegree.html\" title=\"struct sseq::coordinates::bidegree::Bidegree\">Bidegree</a>)</h4></section></summary><div class=\"docblock\"><p>Extend the resolution homomorphism such that it is defined on degrees\n(<code>max_n</code>, <code>max_s</code>).</p>\n<p>This assumes in yet-uncomputed bidegrees, the homology of the source consists only of\ndecomposables (e.g. it is trivial). More precisely, we assume\n<a href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html#method.extend_step_raw\" title=\"method ext::resolution_homomorphism::MuResolutionHomomorphism::extend_step_raw\"><code>MuResolutionHomomorphism::extend_step_raw</code></a> can be called with <code>extra_images = None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_all\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/resolution_homomorphism.rs.html#136-154\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html#tymethod.extend_all\" class=\"fn\">extend_all</a>(&amp;self)</h4></section></summary><div class=\"docblock\"><p>Extend the resolution homomorphism as far as possible, as constrained by how much the\nsource and target have been resolved.</p>\n<p>This assumes in yet-uncomputed bidegrees, the homology of the source consists only of\ndecomposables (e.g. it is trivial). More precisely, we assume\n<a href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html#method.extend_step_raw\" title=\"method ext::resolution_homomorphism::MuResolutionHomomorphism::extend_step_raw\"><code>MuResolutionHomomorphism::extend_step_raw</code></a> can be called with <code>extra_images = None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_profile\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/resolution_homomorphism.rs.html#168-187\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html#tymethod.extend_profile\" class=\"fn\">extend_profile</a>&lt;AUX: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;(&amp;self, max: <a class=\"struct\" href=\"sseq/coordinates/range/struct.BidegreeRange.html\" title=\"struct sseq::coordinates::range::BidegreeRange\">BidegreeRange</a>&lt;'_, AUX&gt;)</h4></section></summary><div class=\"docblock\"><p>Extends the resolution homomorphism up to a given range. This range is first specified by\nthe maximum <code>s</code>, then the maximum <code>t</code> for each <code>s</code>. This should rarely be used directly;\ninstead one should use <a href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html#method.extend\" title=\"method ext::resolution_homomorphism::MuResolutionHomomorphism::extend\"><code>MuResolutionHomomorphism::extend</code></a>,\n<a href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html#method.extend_through_stem\" title=\"method ext::resolution_homomorphism::MuResolutionHomomorphism::extend_through_stem\"><code>MuResolutionHomomorphism::extend_through_stem</code></a> and <a href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html#method.extend_all\" title=\"method ext::resolution_homomorphism::MuResolutionHomomorphism::extend_all\"><code>ResolutionHomomorphism::extend_all</code></a>\nas appropriate.</p>\n<p>Note that unlike the more specific versions of this function, the bounds <code>max_s</code> and\n<code>max_t</code> are exclusive.</p>\n<p>This assumes in yet-uncomputed bidegrees, the homology of the source consists only of\ndecomposables (e.g. it is trivial). More precisely, we assume\n<a href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html#method.extend_step_raw\" title=\"method ext::resolution_homomorphism::MuResolutionHomomorphism::extend_step_raw\"><code>MuResolutionHomomorphism::extend_step_raw</code></a> can be called with <code>extra_images = None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_step_raw\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/resolution_homomorphism.rs.html#196-331\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html#tymethod.extend_step_raw\" class=\"fn\">extend_step_raw</a>(\n    &amp;self,\n    input: <a class=\"struct\" href=\"sseq/coordinates/bidegree/struct.Bidegree.html\" title=\"struct sseq::coordinates::bidegree::Bidegree\">Bidegree</a>,\n    extra_images: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"fp/vector/vector_generic/enum.FpVector.html\" title=\"enum fp::vector::vector_generic::FpVector\">FpVector</a>&gt;&gt;\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Extend the <a href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html\" title=\"struct ext::resolution_homomorphism::MuResolutionHomomorphism\"><code>MuResolutionHomomorphism</code></a> to be defined on <code>(input_s, input_t)</code>. The resulting\nhomomorphism <code>f</code> is a chain map such that if <code>g</code> is the <code>k</code>th generator in the source such\nthat <code>d(g) = 0</code>, then <code>f(g)</code> is the <code>k</code>th row of <code>extra_images</code>.</p>\n<p>The user should call this function explicitly to manually define the chain map where the\nchain complex is not exact, and then call <a href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html#method.extend_all\" title=\"method ext::resolution_homomorphism::MuResolutionHomomorphism::extend_all\"><code>MuResolutionHomomorphism::extend_all</code></a> to extend\nthe rest by exactness.</p>\n</div></details></div></details>",0,"ext::resolution_homomorphism::ResolutionHomomorphism","ext::resolution_homomorphism::UnstableResolutionHomomorphism"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MuResolutionHomomorphism%3CU,+CC1,+CC2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ext/resolution_homomorphism.rs.html#334-397\">source</a><a href=\"#impl-MuResolutionHomomorphism%3CU,+CC1,+CC2%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;const U: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>, CC1, CC2&gt; <a class=\"struct\" href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html\" title=\"struct ext::resolution_homomorphism::MuResolutionHomomorphism\">MuResolutionHomomorphism</a>&lt;U, CC1, CC2&gt;<span class=\"where fmt-newline\">where\n    CC1: <a class=\"trait\" href=\"ext/chain_complex/trait.FreeChainComplex.html\" title=\"trait ext::chain_complex::FreeChainComplex\">FreeChainComplex</a>&lt;U&gt;,\n    CC1::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Algebra\" title=\"type ext::chain_complex::ChainComplex::Algebra\">Algebra</a>: <a class=\"trait\" href=\"algebra/algebra/algebra_trait/trait.MuAlgebra.html\" title=\"trait algebra::algebra::algebra_trait::MuAlgebra\">MuAlgebra</a>&lt;U&gt;,\n    CC2: <a class=\"trait\" href=\"ext/chain_complex/trait.AugmentedChainComplex.html\" title=\"trait ext::chain_complex::AugmentedChainComplex\">AugmentedChainComplex</a>&lt;Algebra = CC1::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Algebra\" title=\"type ext::chain_complex::ChainComplex::Algebra\">Algebra</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_class\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/resolution_homomorphism.rs.html#340-362\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html#tymethod.from_class\" class=\"fn\">from_class</a>(\n    name: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>,\n    source: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;CC1&gt;,\n    target: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;CC2&gt;,\n    shift: <a class=\"struct\" href=\"sseq/coordinates/bidegree/struct.Bidegree.html\" title=\"struct sseq::coordinates::bidegree::Bidegree\">Bidegree</a>,\n    class: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>]\n) -&gt; Self</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_step\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/resolution_homomorphism.rs.html#372-396\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html#tymethod.extend_step\" class=\"fn\">extend_step</a>(\n    &amp;self,\n    input: <a class=\"struct\" href=\"sseq/coordinates/bidegree/struct.Bidegree.html\" title=\"struct sseq::coordinates::bidegree::Bidegree\">Bidegree</a>,\n    extra_images: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"fp/matrix/matrix_inner/struct.Matrix.html\" title=\"struct fp::matrix::matrix_inner::Matrix\">Matrix</a>&gt;\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Extend the <a href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html\" title=\"struct ext::resolution_homomorphism::MuResolutionHomomorphism\"><code>MuResolutionHomomorphism</code></a> to be defined on <code>(input_s, input_t)</code>. The resulting\nhomomorphism <code>f</code> is a chain map such that if <code>g</code> is the <code>k</code>th generator in the source such\nthat <code>d(g) = 0</code>, then the image of <code>f(g)</code> in the augmentation of the target is the <code>k</code>th\nrow of <code>extra_images</code>.</p>\n<p>The user should call this function explicitly to manually define the chain map where the\nchain complex is not exact, and then call <a href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html#method.extend_all\" title=\"method ext::resolution_homomorphism::MuResolutionHomomorphism::extend_all\"><code>MuResolutionHomomorphism::extend_all</code></a> to extend\nthe rest by exactness.</p>\n</div></details></div></details>",0,"ext::resolution_homomorphism::ResolutionHomomorphism","ext::resolution_homomorphism::UnstableResolutionHomomorphism"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MuResolutionHomomorphism%3CU,+CC1,+CC2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ext/resolution_homomorphism.rs.html#399-453\">source</a><a href=\"#impl-MuResolutionHomomorphism%3CU,+CC1,+CC2%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;const U: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>, CC1, CC2&gt; <a class=\"struct\" href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html\" title=\"struct ext::resolution_homomorphism::MuResolutionHomomorphism\">MuResolutionHomomorphism</a>&lt;U, CC1, CC2&gt;<span class=\"where fmt-newline\">where\n    CC1: <a class=\"trait\" href=\"ext/chain_complex/trait.AugmentedChainComplex.html\" title=\"trait ext::chain_complex::AugmentedChainComplex\">AugmentedChainComplex</a> + <a class=\"trait\" href=\"ext/chain_complex/trait.FreeChainComplex.html\" title=\"trait ext::chain_complex::FreeChainComplex\">FreeChainComplex</a>&lt;U&gt;,\n    CC1::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Algebra\" title=\"type ext::chain_complex::ChainComplex::Algebra\">Algebra</a>: <a class=\"trait\" href=\"algebra/algebra/algebra_trait/trait.MuAlgebra.html\" title=\"trait algebra::algebra::algebra_trait::MuAlgebra\">MuAlgebra</a>&lt;U&gt;,\n    CC2: <a class=\"trait\" href=\"ext/chain_complex/trait.AugmentedChainComplex.html\" title=\"trait ext::chain_complex::AugmentedChainComplex\">AugmentedChainComplex</a>&lt;Algebra = CC1::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Algebra\" title=\"type ext::chain_complex::ChainComplex::Algebra\">Algebra</a>&gt;,\n    CC1::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.AugmentedChainComplex.html#associatedtype.TargetComplex\" title=\"type ext::chain_complex::AugmentedChainComplex::TargetComplex\">TargetComplex</a>: <a class=\"trait\" href=\"ext/chain_complex/trait.BoundedChainComplex.html\" title=\"trait ext::chain_complex::BoundedChainComplex\">BoundedChainComplex</a>,\n    CC2::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.AugmentedChainComplex.html#associatedtype.TargetComplex\" title=\"type ext::chain_complex::AugmentedChainComplex::TargetComplex\">TargetComplex</a>: <a class=\"trait\" href=\"ext/chain_complex/trait.BoundedChainComplex.html\" title=\"trait ext::chain_complex::BoundedChainComplex\">BoundedChainComplex</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_module_homomorphism\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/resolution_homomorphism.rs.html#408-452\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html#tymethod.from_module_homomorphism\" class=\"fn\">from_module_homomorphism</a>(\n    name: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>,\n    source: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;CC1&gt;,\n    target: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;CC2&gt;,\n    f: &amp;impl <a class=\"trait\" href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html\" title=\"trait algebra::module::homomorphism::ModuleHomomorphism\">ModuleHomomorphism</a>&lt;Source = &lt;&lt;CC1 as <a class=\"trait\" href=\"ext/chain_complex/trait.AugmentedChainComplex.html\" title=\"trait ext::chain_complex::AugmentedChainComplex\">AugmentedChainComplex</a>&gt;::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.AugmentedChainComplex.html#associatedtype.TargetComplex\" title=\"type ext::chain_complex::AugmentedChainComplex::TargetComplex\">TargetComplex</a> as <a class=\"trait\" href=\"ext/chain_complex/trait.ChainComplex.html\" title=\"trait ext::chain_complex::ChainComplex\">ChainComplex</a>&gt;::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Module\" title=\"type ext::chain_complex::ChainComplex::Module\">Module</a>, Target = &lt;&lt;CC2 as <a class=\"trait\" href=\"ext/chain_complex/trait.AugmentedChainComplex.html\" title=\"trait ext::chain_complex::AugmentedChainComplex\">AugmentedChainComplex</a>&gt;::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.AugmentedChainComplex.html#associatedtype.TargetComplex\" title=\"type ext::chain_complex::AugmentedChainComplex::TargetComplex\">TargetComplex</a> as <a class=\"trait\" href=\"ext/chain_complex/trait.ChainComplex.html\" title=\"trait ext::chain_complex::ChainComplex\">ChainComplex</a>&gt;::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Module\" title=\"type ext::chain_complex::ChainComplex::Module\">Module</a>&gt;\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Construct a chain map that lifts a given module homomorphism.</p>\n</div></details></div></details>",0,"ext::resolution_homomorphism::ResolutionHomomorphism","ext::resolution_homomorphism::UnstableResolutionHomomorphism"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MuResolutionHomomorphism%3CU,+CC1,+CC2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ext/resolution_homomorphism.rs.html#455-482\">source</a><a href=\"#impl-MuResolutionHomomorphism%3CU,+CC1,+CC2%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;const U: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>, CC1, CC2&gt; <a class=\"struct\" href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html\" title=\"struct ext::resolution_homomorphism::MuResolutionHomomorphism\">MuResolutionHomomorphism</a>&lt;U, CC1, CC2&gt;<span class=\"where fmt-newline\">where\n    CC1: <a class=\"trait\" href=\"ext/chain_complex/trait.FreeChainComplex.html\" title=\"trait ext::chain_complex::FreeChainComplex\">FreeChainComplex</a>&lt;U&gt;,\n    CC1::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Algebra\" title=\"type ext::chain_complex::ChainComplex::Algebra\">Algebra</a>: <a class=\"trait\" href=\"algebra/algebra/algebra_trait/trait.MuAlgebra.html\" title=\"trait algebra::algebra::algebra_trait::MuAlgebra\">MuAlgebra</a>&lt;U&gt;,\n    CC2: <a class=\"trait\" href=\"ext/chain_complex/trait.FreeChainComplex.html\" title=\"trait ext::chain_complex::FreeChainComplex\">FreeChainComplex</a>&lt;U, Algebra = CC1::<a class=\"associatedtype\" href=\"ext/chain_complex/trait.ChainComplex.html#associatedtype.Algebra\" title=\"type ext::chain_complex::ChainComplex::Algebra\">Algebra</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.act\" class=\"method\"><a class=\"src rightside\" href=\"src/ext/resolution_homomorphism.rs.html#464-481\">source</a><h4 class=\"code-header\">pub fn <a href=\"ext/resolution_homomorphism/struct.MuResolutionHomomorphism.html#tymethod.act\" class=\"fn\">act</a>(&amp;self, result: <a class=\"enum\" href=\"fp/vector/vector_generic/enum.SliceMut.html\" title=\"enum fp::vector::vector_generic::SliceMut\">SliceMut</a>&lt;'_&gt;, coef: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>, gen: <a class=\"struct\" href=\"sseq/coordinates/generator/struct.BidegreeGenerator.html\" title=\"struct sseq::coordinates::generator::BidegreeGenerator\">BidegreeGenerator</a>)</h4></section></summary><div class=\"docblock\"><p>Given a chain map $f: C \\to Cโ$ between free chain complexes, apply\n$$ \\Hom(f, k): \\Hom(Cโ, k) \\to \\Hom(C, k) $$\nto the specified generator of $\\Hom(Cโ, k)$.</p>\n</div></details></div></details>",0,"ext::resolution_homomorphism::ResolutionHomomorphism","ext::resolution_homomorphism::UnstableResolutionHomomorphism"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()
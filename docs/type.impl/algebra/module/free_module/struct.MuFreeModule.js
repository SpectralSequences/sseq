(function() {var type_impls = {
"algebra":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MuFreeModule%3CU,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/algebra/module/free_module.rs.html#45-60\">source</a><a href=\"#impl-MuFreeModule%3CU,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;const U: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>, A: <a class=\"trait\" href=\"algebra/algebra/algebra_trait/trait.MuAlgebra.html\" title=\"trait algebra::algebra::algebra_trait::MuAlgebra\">MuAlgebra</a>&lt;U&gt;&gt; <a class=\"struct\" href=\"algebra/module/free_module/struct.MuFreeModule.html\" title=\"struct algebra::module::free_module::MuFreeModule\">MuFreeModule</a>&lt;U, A&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/free_module.rs.html#46-59\">source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/free_module/struct.MuFreeModule.html#tymethod.new\" class=\"fn\">new</a>(algebra: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;A&gt;, name: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, min_degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>) -&gt; Self</h4></section></div></details>",0,"algebra::module::free_module::FreeModule","algebra::module::free_module::UnstableFreeModule"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MuFreeModule%3CU,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/algebra/module/free_module.rs.html#234-386\">source</a><a href=\"#impl-MuFreeModule%3CU,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;const U: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>, A: <a class=\"trait\" href=\"algebra/algebra/algebra_trait/trait.MuAlgebra.html\" title=\"trait algebra::algebra::algebra_trait::MuAlgebra\">MuAlgebra</a>&lt;U&gt;&gt; <a class=\"struct\" href=\"algebra/module/free_module/struct.MuFreeModule.html\" title=\"struct algebra::module::free_module::MuFreeModule\">MuFreeModule</a>&lt;U, A&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.gen_names\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/free_module.rs.html#235-237\">source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/free_module/struct.MuFreeModule.html#tymethod.gen_names\" class=\"fn\">gen_names</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"once/struct.OnceBiVec.html\" title=\"struct once::OnceBiVec\">OnceBiVec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;&gt;</h4></section><section id=\"method.number_of_gens_in_degree\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/free_module.rs.html#239-244\">source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/free_module/struct.MuFreeModule.html#tymethod.number_of_gens_in_degree\" class=\"fn\">number_of_gens_in_degree</a>(&amp;self, degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.add_generators\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/free_module.rs.html#246-288\">source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/free_module/struct.MuFreeModule.html#tymethod.add_generators\" class=\"fn\">add_generators</a>(\n    &amp;self,\n    degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>,\n    num_gens: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>,\n    names: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;&gt;\n)</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.internal_generator_offset\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/free_module.rs.html#292-294\">source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/free_module/struct.MuFreeModule.html#tymethod.internal_generator_offset\" class=\"fn\">internal_generator_offset</a>(\n    &amp;self,\n    degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>,\n    internal_gen_idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Given a generator <code>(gen_deg, gen_idx)</code>, find the first index in degree <code>degree</code> with\nelements from the generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_gens\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/free_module.rs.html#297-302\">source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/free_module/struct.MuFreeModule.html#tymethod.iter_gens\" class=\"fn\">iter_gens</a>(&amp;self, degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>)&gt; + '_</h4></section></summary><div class=\"docblock\"><p>Iterate the degrees and indices of each generator up to degree <code>degree</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_gen_offsets\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/free_module.rs.html#305-317\">source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/free_module/struct.MuFreeModule.html#tymethod.iter_gen_offsets\" class=\"fn\">iter_gen_offsets</a>&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>&gt;(\n    &amp;self,\n    degree: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">N</a>]\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"struct\" href=\"algebra/module/free_module/struct.GeneratorData.html\" title=\"struct algebra::module::free_module::GeneratorData\">GeneratorData</a>&lt;N&gt;&gt; + '_</h4></section></summary><div class=\"docblock\"><p>Iterate the degrees and offsets of each generator up to degree <code>degree</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.generator_offset\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/free_module.rs.html#321-325\">source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/free_module/struct.MuFreeModule.html#tymethod.generator_offset\" class=\"fn\">generator_offset</a>(\n    &amp;self,\n    degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>,\n    gen_deg: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>,\n    gen_idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Given a generator <code>(gen_deg, gen_idx)</code>, find the first index in degree <code>degree</code> with\nelements from the generator.</p>\n</div></details><section id=\"method.operation_generator_to_index\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/free_module.rs.html#327-339\">source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/free_module/struct.MuFreeModule.html#tymethod.operation_generator_to_index\" class=\"fn\">operation_generator_to_index</a>(\n    &amp;self,\n    op_deg: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>,\n    op_idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>,\n    gen_deg: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>,\n    gen_idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.index_to_op_gen\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/free_module.rs.html#341-344\">source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/free_module/struct.MuFreeModule.html#tymethod.index_to_op_gen\" class=\"fn\">index_to_op_gen</a>(\n    &amp;self,\n    degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>,\n    index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>\n) -&gt; &amp;<a class=\"struct\" href=\"algebra/module/free_module/struct.OperationGeneratorPair.html\" title=\"struct algebra::module::free_module::OperationGeneratorPair\">OperationGeneratorPair</a></h4></section><section id=\"method.extend_by_zero\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/free_module.rs.html#346-352\">source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/free_module/struct.MuFreeModule.html#tymethod.extend_by_zero\" class=\"fn\">extend_by_zero</a>(&amp;self, degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>)</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_vector\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/free_module.rs.html#356-371\">source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/free_module/struct.MuFreeModule.html#tymethod.slice_vector\" class=\"fn\">slice_vector</a>&lt;'a&gt;(\n    &amp;self,\n    degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>,\n    gen_degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>,\n    gen_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>,\n    v: <a class=\"enum\" href=\"fp/vector/vector_generic/enum.Slice.html\" title=\"enum fp::vector::vector_generic::Slice\">Slice</a>&lt;'a&gt;\n) -&gt; <a class=\"enum\" href=\"fp/vector/vector_generic/enum.Slice.html\" title=\"enum fp::vector::vector_generic::Slice\">Slice</a>&lt;'a&gt;</h4></section></summary><div class=\"docblock\"><p>Given a vector that represents an element in degree <code>degree</code>, slice it to the part that\nrepresents the terms that correspond to the specified generator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_slices\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/free_module.rs.html#376-385\">source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/free_module/struct.MuFreeModule.html#tymethod.iter_slices\" class=\"fn\">iter_slices</a>&lt;'a&gt;(\n    &amp;'a self,\n    degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>,\n    slice: <a class=\"enum\" href=\"fp/vector/vector_generic/enum.Slice.html\" title=\"enum fp::vector::vector_generic::Slice\">Slice</a>&lt;'a&gt;\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>, <a class=\"enum\" href=\"fp/vector/vector_generic/enum.Slice.html\" title=\"enum fp::vector::vector_generic::Slice\">Slice</a>&lt;'a&gt;)&gt; + 'a</h4></section></summary><div class=\"docblock\"><p>Given an element in a degree, iterate through the slices corresponding to each generator.\nEach item of the iterator is <code>(gen_degree, gen_index, op_degree, slice)</code>. This skips slices\nthat are zero length.</p>\n</div></details></div></details>",0,"algebra::module::free_module::FreeModule","algebra::module::free_module::UnstableFreeModule"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-MuFreeModule%3CU,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/algebra/module/free_module.rs.html#39-43\">source</a><a href=\"#impl-Display-for-MuFreeModule%3CU,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;const U: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>, A: <a class=\"trait\" href=\"algebra/algebra/algebra_trait/trait.MuAlgebra.html\" title=\"trait algebra::algebra::algebra_trait::MuAlgebra\">MuAlgebra</a>&lt;U&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"algebra/module/free_module/struct.MuFreeModule.html\" title=\"struct algebra::module::free_module::MuFreeModule\">MuFreeModule</a>&lt;U, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/free_module.rs.html#40-42\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","algebra::module::free_module::FreeModule","algebra::module::free_module::UnstableFreeModule"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ZeroModule-for-MuFreeModule%3CU,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/algebra/module/free_module.rs.html#226-232\">source</a><a href=\"#impl-ZeroModule-for-MuFreeModule%3CU,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;const U: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>, A: <a class=\"trait\" href=\"algebra/algebra/algebra_trait/trait.MuAlgebra.html\" title=\"trait algebra::algebra::algebra_trait::MuAlgebra\">MuAlgebra</a>&lt;U&gt;&gt; <a class=\"trait\" href=\"algebra/module/zero_module/trait.ZeroModule.html\" title=\"trait algebra::module::zero_module::ZeroModule\">ZeroModule</a> for <a class=\"struct\" href=\"algebra/module/free_module/struct.MuFreeModule.html\" title=\"struct algebra::module::free_module::MuFreeModule\">MuFreeModule</a>&lt;U, A&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.zero_module\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/free_module.rs.html#227-231\">source</a><a href=\"#method.zero_module\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"algebra/module/zero_module/trait.ZeroModule.html#tymethod.zero_module\" class=\"fn\">zero_module</a>(algebra: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;A&gt;, min_degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>) -&gt; Self</h4></section></div></details>","ZeroModule","algebra::module::free_module::FreeModule","algebra::module::free_module::UnstableFreeModule"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Module-for-MuFreeModule%3CU,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/algebra/module/free_module.rs.html#62-224\">source</a><a href=\"#impl-Module-for-MuFreeModule%3CU,+A%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;const U: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>, A: <a class=\"trait\" href=\"algebra/algebra/algebra_trait/trait.MuAlgebra.html\" title=\"trait algebra::algebra::algebra_trait::MuAlgebra\">MuAlgebra</a>&lt;U&gt;&gt; <a class=\"trait\" href=\"algebra/module/module_trait/trait.Module.html\" title=\"trait algebra::module::module_trait::Module\">Module</a> for <a class=\"struct\" href=\"algebra/module/free_module/struct.MuFreeModule.html\" title=\"struct algebra::module::free_module::MuFreeModule\">MuFreeModule</a>&lt;U, A&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Algebra\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Algebra\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"algebra/module/module_trait/trait.Module.html#associatedtype.Algebra\" class=\"associatedtype\">Algebra</a> = A</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.algebra\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/free_module.rs.html#65-67\">source</a><a href=\"#method.algebra\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"algebra/module/module_trait/trait.Module.html#tymethod.algebra\" class=\"fn\">algebra</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;A&gt;</h4></section></summary><div class='docblock'>The algebra the module is over.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_degree\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/free_module.rs.html#69-71\">source</a><a href=\"#method.min_degree\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"algebra/module/module_trait/trait.Module.html#tymethod.min_degree\" class=\"fn\">min_degree</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>The minimum degree of the module, which is required to be bounded below</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_computed_degree\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/free_module.rs.html#73-75\">source</a><a href=\"#method.max_computed_degree\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"algebra/module/module_trait/trait.Module.html#tymethod.max_computed_degree\" class=\"fn\">max_computed_degree</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>The maximum <code>t</code> for which the module is fully defined at <code>t</code>. See <a href=\"algebra/module/module_trait/trait.Module.html\" title=\"trait algebra::module::module_trait::Module\"><code>Module</code></a> documentation\nfor more details.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_generator_degree\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/free_module.rs.html#77-84\">source</a><a href=\"#method.max_generator_degree\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"algebra/module/module_trait/trait.Module.html#method.max_generator_degree\" class=\"fn\">max_generator_degree</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Maximum degree of a generator under the Steenrod action. Every element in higher degree\nmust be obtainable from applying a Steenrod action to a lower degree element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compute_basis\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/free_module.rs.html#86-111\">source</a><a href=\"#method.compute_basis\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"algebra/module/module_trait/trait.Module.html#method.compute_basis\" class=\"fn\">compute_basis</a>(&amp;self, max_degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Compute internal data of the module so that we can query information up to degree <code>degree</code>.\nThis should be run by the user whenever they want to query such information. <a href=\"algebra/module/module_trait/trait.Module.html#method.compute_basis\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dimension\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/free_module.rs.html#113-122\">source</a><a href=\"#method.dimension\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"algebra/module/module_trait/trait.Module.html#tymethod.dimension\" class=\"fn\">dimension</a>(&amp;self, degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The dimension of a module at the given degree</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.basis_element_to_string\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/free_module.rs.html#124-138\">source</a><a href=\"#method.basis_element_to_string\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"algebra/module/module_trait/trait.Module.html#tymethod.basis_element_to_string\" class=\"fn\">basis_element_to_string</a>(&amp;self, degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>, idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>The name of a basis element. This is useful for debugging and printing results.</div></details><section id=\"method.act_on_basis\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/free_module.rs.html#140-178\">source</a><a href=\"#method.act_on_basis\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"algebra/module/module_trait/trait.Module.html#tymethod.act_on_basis\" class=\"fn\">act_on_basis</a>(\n    &amp;self,\n    result: <a class=\"enum\" href=\"fp/vector/vector_generic/enum.SliceMut.html\" title=\"enum fp::vector::vector_generic::SliceMut\">SliceMut</a>&lt;'_&gt;,\n    coeff: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u32.html\">u32</a>,\n    op_degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>,\n    op_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>,\n    mod_degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>,\n    mod_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>\n)</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.act\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/free_module.rs.html#180-209\">source</a><a href=\"#method.act\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"algebra/module/module_trait/trait.Module.html#method.act\" class=\"fn\">act</a>(\n    &amp;self,\n    result: <a class=\"enum\" href=\"fp/vector/vector_generic/enum.SliceMut.html\" title=\"enum fp::vector::vector_generic::SliceMut\">SliceMut</a>&lt;'_&gt;,\n    coeff: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u32.html\">u32</a>,\n    op_degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>,\n    op_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>,\n    input_degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>,\n    input: <a class=\"enum\" href=\"fp/vector/vector_generic/enum.Slice.html\" title=\"enum fp::vector::vector_generic::Slice\">Slice</a>&lt;'_&gt;\n)</h4></section></summary><div class='docblock'>The length of <code>input</code> need not be equal to the dimension of the module in said degree.\nMissing entries are interpreted to be 0, while extra entries must be zero. <a href=\"algebra/module/module_trait/trait.Module.html#method.act\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_unit\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/module_trait.rs.html#65-67\">source</a><a href=\"#method.is_unit\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"algebra/module/module_trait/trait.Module.html#method.is_unit\" class=\"fn\">is_unit</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Whether this is the unit module.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prime\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/module_trait.rs.html#70-72\">source</a><a href=\"#method.prime\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"algebra/module/module_trait/trait.Module.html#method.prime\" class=\"fn\">prime</a>(&amp;self) -&gt; <a class=\"struct\" href=\"fp/prime/primes_generic/struct.ValidPrime.html\" title=\"struct fp::prime::primes_generic::ValidPrime\">ValidPrime</a></h4></section></summary><div class='docblock'>The prime the module is over, which should be equal to the prime of the algebra.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_degree\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/module_trait.rs.html#75-77\">source</a><a href=\"#method.max_degree\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"algebra/module/module_trait/trait.Module.html#method.max_degree\" class=\"fn\">max_degree</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'><code>max_degree</code> is the a degree such that if t &gt; <code>max_degree</code>, then <code>self.dimension(t) = 0</code>.</div></details><section id=\"method.total_dimension\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/module_trait.rs.html#85-93\">source</a><a href=\"#method.total_dimension\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"algebra/module/module_trait/trait.Module.html#method.total_dimension\" class=\"fn\">total_dimension</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.act_by_element\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/module_trait.rs.html#124-146\">source</a><a href=\"#method.act_by_element\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"algebra/module/module_trait/trait.Module.html#method.act_by_element\" class=\"fn\">act_by_element</a>(\n    &amp;self,\n    result: <a class=\"enum\" href=\"fp/vector/vector_generic/enum.SliceMut.html\" title=\"enum fp::vector::vector_generic::SliceMut\">SliceMut</a>&lt;'_&gt;,\n    coeff: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u32.html\">u32</a>,\n    op_degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>,\n    op: <a class=\"enum\" href=\"fp/vector/vector_generic/enum.Slice.html\" title=\"enum fp::vector::vector_generic::Slice\">Slice</a>&lt;'_&gt;,\n    input_degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>,\n    input: <a class=\"enum\" href=\"fp/vector/vector_generic/enum.Slice.html\" title=\"enum fp::vector::vector_generic::Slice\">Slice</a>&lt;'_&gt;\n)</h4></section><section id=\"method.act_by_element_on_basis\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/module_trait.rs.html#148-169\">source</a><a href=\"#method.act_by_element_on_basis\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"algebra/module/module_trait/trait.Module.html#method.act_by_element_on_basis\" class=\"fn\">act_by_element_on_basis</a>(\n    &amp;self,\n    result: <a class=\"enum\" href=\"fp/vector/vector_generic/enum.SliceMut.html\" title=\"enum fp::vector::vector_generic::SliceMut\">SliceMut</a>&lt;'_&gt;,\n    coeff: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u32.html\">u32</a>,\n    op_degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>,\n    op: <a class=\"enum\" href=\"fp/vector/vector_generic/enum.Slice.html\" title=\"enum fp::vector::vector_generic::Slice\">Slice</a>&lt;'_&gt;,\n    input_degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>,\n    input_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>\n)</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.element_to_string\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/module_trait.rs.html#173-191\">source</a><a href=\"#method.element_to_string\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"algebra/module/module_trait/trait.Module.html#method.element_to_string\" class=\"fn\">element_to_string</a>(&amp;self, degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>, element: <a class=\"enum\" href=\"fp/vector/vector_generic/enum.Slice.html\" title=\"enum fp::vector::vector_generic::Slice\">Slice</a>&lt;'_&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>Gives the name of an element. The default implementation is derived from\n<a href=\"algebra/module/module_trait/trait.Module.html#tymethod.basis_element_to_string\" title=\"method algebra::module::module_trait::Module::basis_element_to_string\"><code>Module::basis_element_to_string</code></a> in the obvious way.</div></details></div></details>","Module","algebra::module::free_module::FreeModule","algebra::module::free_module::UnstableFreeModule"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()
(function() {
    var type_impls = Object.fromEntries([["algebra",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ModuleHomomorphism-for-MuFreeModuleHomomorphism%3CU,+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#36-109\">Source</a><a href=\"#impl-ModuleHomomorphism-for-MuFreeModuleHomomorphism%3CU,+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const U: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, M: <a class=\"trait\" href=\"algebra/module/trait.Module.html\" title=\"trait algebra::module::Module\">Module</a>&gt; <a class=\"trait\" href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html\" title=\"trait algebra::module::homomorphism::ModuleHomomorphism\">ModuleHomomorphism</a> for <a class=\"struct\" href=\"algebra/module/homomorphism/struct.MuFreeModuleHomomorphism.html\" title=\"struct algebra::module::homomorphism::MuFreeModuleHomomorphism\">MuFreeModuleHomomorphism</a>&lt;U, M&gt;<div class=\"where\">where\n    M::<a class=\"associatedtype\" href=\"algebra/module/trait.Module.html#associatedtype.Algebra\" title=\"type algebra::module::Module::Algebra\">Algebra</a>: <a class=\"trait\" href=\"algebra/trait.MuAlgebra.html\" title=\"trait algebra::MuAlgebra\">MuAlgebra</a>&lt;U&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Source\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#40\">Source</a><a href=\"#associatedtype.Source\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html#associatedtype.Source\" class=\"associatedtype\">Source</a> = <a class=\"struct\" href=\"algebra/module/struct.MuFreeModule.html\" title=\"struct algebra::module::MuFreeModule\">MuFreeModule</a>&lt;U, &lt;M as <a class=\"trait\" href=\"algebra/module/trait.Module.html\" title=\"trait algebra::module::Module\">Module</a>&gt;::<a class=\"associatedtype\" href=\"algebra/module/trait.Module.html#associatedtype.Algebra\" title=\"type algebra::module::Module::Algebra\">Algebra</a>&gt;</h4></section><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#41\">Source</a><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = M</h4></section><section id=\"method.source\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#43-45\">Source</a><a href=\"#method.source\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html#tymethod.source\" class=\"fn\">source</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;Self::<a class=\"associatedtype\" href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html#associatedtype.Source\" title=\"type algebra::module::homomorphism::ModuleHomomorphism::Source\">Source</a>&gt;</h4></section><section id=\"method.target\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#47-49\">Source</a><a href=\"#method.target\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html#tymethod.target\" class=\"fn\">target</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;Self::<a class=\"associatedtype\" href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html#associatedtype.Target\" title=\"type algebra::module::homomorphism::ModuleHomomorphism::Target\">Target</a>&gt;</h4></section><section id=\"method.degree_shift\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#51-53\">Source</a><a href=\"#method.degree_shift\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html#tymethod.degree_shift\" class=\"fn\">degree_shift</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply_to_basis_element\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#55-87\">Source</a><a href=\"#method.apply_to_basis_element\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html#tymethod.apply_to_basis_element\" class=\"fn\">apply_to_basis_element</a>(\n    &amp;self,\n    result: <a class=\"enum\" href=\"fp/vector/fp_wrapper/enum.FpSliceMut.html\" title=\"enum fp::vector::fp_wrapper::FpSliceMut\">FpSliceMut</a>&lt;'_&gt;,\n    coeff: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>,\n    input_degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>,\n    input_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n)</h4></section></summary><div class='docblock'>Calling this function when <code>input_idx &lt; source().dimension(input_degree)</code> results in\nundefined behaviour. Implementations are encouraged to panic when this happens (this is\nusually the case because of out-of-bounds errors.</div></details><section id=\"method.quasi_inverse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#89-91\">Source</a><a href=\"#method.quasi_inverse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html#method.quasi_inverse\" class=\"fn\">quasi_inverse</a>(&amp;self, degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"fp/matrix/quasi_inverse/struct.QuasiInverse.html\" title=\"struct fp::matrix::quasi_inverse::QuasiInverse\">QuasiInverse</a>&gt;</h4></section><section id=\"method.kernel\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#93-95\">Source</a><a href=\"#method.kernel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html#method.kernel\" class=\"fn\">kernel</a>(&amp;self, degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"fp/matrix/subspace/struct.Subspace.html\" title=\"struct fp::matrix::subspace::Subspace\">Subspace</a>&gt;</h4></section><section id=\"method.image\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#97-99\">Source</a><a href=\"#method.image\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html#method.image\" class=\"fn\">image</a>(&amp;self, degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"fp/matrix/subspace/struct.Subspace.html\" title=\"struct fp::matrix::subspace::Subspace\">Subspace</a>&gt;</h4></section><section id=\"method.compute_auxiliary_data_through_degree\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#101-108\">Source</a><a href=\"#method.compute_auxiliary_data_through_degree\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html#method.compute_auxiliary_data_through_degree\" class=\"fn\">compute_auxiliary_data_through_degree</a>(&amp;self, degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>)</h4></section><section id=\"method.apply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/mod.rs.html#79-84\">Source</a><a href=\"#method.apply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html#method.apply\" class=\"fn\">apply</a>(\n    &amp;self,\n    result: <a class=\"enum\" href=\"fp/vector/fp_wrapper/enum.FpSliceMut.html\" title=\"enum fp::vector::fp_wrapper::FpSliceMut\">FpSliceMut</a>&lt;'_&gt;,\n    coeff: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>,\n    input_degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>,\n    input: <a class=\"enum\" href=\"fp/vector/fp_wrapper/enum.FpSlice.html\" title=\"enum fp::vector::fp_wrapper::FpSlice\">FpSlice</a>&lt;'_&gt;,\n)</h4></section><section id=\"method.prime\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/mod.rs.html#86-88\">Source</a><a href=\"#method.prime\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html#method.prime\" class=\"fn\">prime</a>(&amp;self) -&gt; <a class=\"struct\" href=\"fp/prime/primes_generic/struct.ValidPrime.html\" title=\"struct fp::prime::primes_generic::ValidPrime\">ValidPrime</a></h4></section><section id=\"method.min_degree\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/mod.rs.html#90-92\">Source</a><a href=\"#method.min_degree\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html#method.min_degree\" class=\"fn\">min_degree</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.auxiliary_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/mod.rs.html#96-116\">Source</a><a href=\"#method.auxiliary_data\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html#method.auxiliary_data\" class=\"fn\">auxiliary_data</a>(&amp;self, degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>) -&gt; (<a class=\"struct\" href=\"fp/matrix/subspace/struct.Subspace.html\" title=\"struct fp::matrix::subspace::Subspace\">Subspace</a>, <a class=\"struct\" href=\"fp/matrix/subspace/struct.Subspace.html\" title=\"struct fp::matrix::subspace::Subspace\">Subspace</a>, <a class=\"struct\" href=\"fp/matrix/quasi_inverse/struct.QuasiInverse.html\" title=\"struct fp::matrix::quasi_inverse::QuasiInverse\">QuasiInverse</a>)</h4></section></summary><div class='docblock'>Compute the auxiliary data associated to the homomorphism at input degree <code>degree</code>. Returns\nit in the order image, kernel, quasi_inverse</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_matrix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/mod.rs.html#122-137\">Source</a><a href=\"#method.get_matrix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html#method.get_matrix\" class=\"fn\">get_matrix</a>(&amp;self, matrix: <a class=\"struct\" href=\"fp/matrix/matrix_inner/struct.MatrixSliceMut.html\" title=\"struct fp::matrix::matrix_inner::MatrixSliceMut\">MatrixSliceMut</a>&lt;'_&gt;, degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Write the matrix of the homomorphism at input degree <code>degree</code> to <code>matrix</code>. <a href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html#method.get_matrix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_partial_matrix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/mod.rs.html#140-155\">Source</a><a href=\"#method.get_partial_matrix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html#method.get_partial_matrix\" class=\"fn\">get_partial_matrix</a>(&amp;self, degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>, inputs: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>]) -&gt; <a class=\"struct\" href=\"fp/matrix/matrix_inner/struct.Matrix.html\" title=\"struct fp::matrix::matrix_inner::Matrix\">Matrix</a></h4></section></summary><div class='docblock'>Get the values of the homomorphism on the specified inputs to <code>matrix</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply_quasi_inverse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/mod.rs.html#160-167\">Source</a><a href=\"#method.apply_quasi_inverse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html#method.apply_quasi_inverse\" class=\"fn\">apply_quasi_inverse</a>(\n    &amp;self,\n    result: <a class=\"enum\" href=\"fp/vector/fp_wrapper/enum.FpSliceMut.html\" title=\"enum fp::vector::fp_wrapper::FpSliceMut\">FpSliceMut</a>&lt;'_&gt;,\n    degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>,\n    input: <a class=\"enum\" href=\"fp/vector/fp_wrapper/enum.FpSlice.html\" title=\"enum fp::vector::fp_wrapper::FpSlice\">FpSlice</a>&lt;'_&gt;,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Attempt to apply quasi inverse to the input. Returns whether the operation was\nsuccessful. This is required to either always succeed or always fail for each degree.</div></details></div></details>","ModuleHomomorphism","algebra::module::homomorphism::free_module_homomorphism::FreeModuleHomomorphism","algebra::module::homomorphism::free_module_homomorphism::UnstableFreeModuleHomomorphism"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MuFreeModuleHomomorphism%3CU,+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#111-262\">Source</a><a href=\"#impl-MuFreeModuleHomomorphism%3CU,+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const U: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, M: <a class=\"trait\" href=\"algebra/module/trait.Module.html\" title=\"trait algebra::module::Module\">Module</a>&gt; <a class=\"struct\" href=\"algebra/module/homomorphism/struct.MuFreeModuleHomomorphism.html\" title=\"struct algebra::module::homomorphism::MuFreeModuleHomomorphism\">MuFreeModuleHomomorphism</a>&lt;U, M&gt;<div class=\"where\">where\n    M::<a class=\"associatedtype\" href=\"algebra/module/trait.Module.html#associatedtype.Algebra\" title=\"type algebra::module::Module::Algebra\">Algebra</a>: <a class=\"trait\" href=\"algebra/trait.MuAlgebra.html\" title=\"trait algebra::MuAlgebra\">MuAlgebra</a>&lt;U&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#115-135\">Source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/homomorphism/struct.MuFreeModuleHomomorphism.html#tymethod.new\" class=\"fn\">new</a>(\n    source: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"algebra/module/struct.MuFreeModule.html\" title=\"struct algebra::module::MuFreeModule\">MuFreeModule</a>&lt;U, M::<a class=\"associatedtype\" href=\"algebra/module/trait.Module.html#associatedtype.Algebra\" title=\"type algebra::module::Module::Algebra\">Algebra</a>&gt;&gt;,\n    target: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;M&gt;,\n    degree_shift: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>,\n) -&gt; Self</h4></section><section id=\"method.degree_shift\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#137-139\">Source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/homomorphism/struct.MuFreeModuleHomomorphism.html#tymethod.degree_shift\" class=\"fn\">degree_shift</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a></h4></section><section id=\"method.min_degree\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#141-143\">Source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/homomorphism/struct.MuFreeModuleHomomorphism.html#tymethod.min_degree\" class=\"fn\">min_degree</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a></h4></section><section id=\"method.next_degree\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#145-147\">Source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/homomorphism/struct.MuFreeModuleHomomorphism.html#tymethod.next_degree\" class=\"fn\">next_degree</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a></h4></section><section id=\"method.output\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#149-163\">Source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/homomorphism/struct.MuFreeModuleHomomorphism.html#tymethod.output\" class=\"fn\">output</a>(&amp;self, generator_degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>, generator_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; &amp;<a class=\"enum\" href=\"fp/vector/fp_wrapper/enum.FpVector.html\" title=\"enum fp::vector::fp_wrapper::FpVector\">FpVector</a></h4></section><section id=\"method.differential_density\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#165-172\">Source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/homomorphism/struct.MuFreeModuleHomomorphism.html#tymethod.differential_density\" class=\"fn\">differential_density</a>(&amp;self, degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.extend_by_zero\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#174-185\">Source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/homomorphism/struct.MuFreeModuleHomomorphism.html#tymethod.extend_by_zero\" class=\"fn\">extend_by_zero</a>(&amp;self, degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>)</h4></section><section id=\"method.add_generators_from_big_vector\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#187-205\">Source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/homomorphism/struct.MuFreeModuleHomomorphism.html#tymethod.add_generators_from_big_vector\" class=\"fn\">add_generators_from_big_vector</a>(\n    &amp;self,\n    degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>,\n    outputs_vectors: <a class=\"enum\" href=\"fp/vector/fp_wrapper/enum.FpSlice.html\" title=\"enum fp::vector::fp_wrapper::FpSlice\">FpSlice</a>&lt;'_&gt;,\n)</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_generators_from_matrix_rows\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#208-225\">Source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/homomorphism/struct.MuFreeModuleHomomorphism.html#tymethod.add_generators_from_matrix_rows\" class=\"fn\">add_generators_from_matrix_rows</a>(\n    &amp;self,\n    degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>,\n    matrix: <a class=\"struct\" href=\"fp/matrix/matrix_inner/struct.MatrixSliceMut.html\" title=\"struct fp::matrix::matrix_inner::MatrixSliceMut\">MatrixSliceMut</a>&lt;'_&gt;,\n)</h4></section></summary><div class=\"docblock\"><p>A MatrixSlice will do but there is no application of this struct, so it doesn’t exist yet…</p>\n</div></details><section id=\"method.add_generators_from_rows\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#227-229\">Source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/homomorphism/struct.MuFreeModuleHomomorphism.html#tymethod.add_generators_from_rows\" class=\"fn\">add_generators_from_rows</a>(&amp;self, degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>, rows: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"fp/vector/fp_wrapper/enum.FpVector.html\" title=\"enum fp::vector::fp_wrapper::FpVector\">FpVector</a>&gt;)</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_generators_from_rows_ooo\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#233-239\">Source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/homomorphism/struct.MuFreeModuleHomomorphism.html#tymethod.add_generators_from_rows_ooo\" class=\"fn\">add_generators_from_rows_ooo</a>(\n    &amp;self,\n    degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>,\n    rows: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"fp/vector/fp_wrapper/enum.FpVector.html\" title=\"enum fp::vector::fp_wrapper::FpVector\">FpVector</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Add the image of a bidegree out of order. See\n<a href=\"once/once/struct.OnceVec.html#method.push_ooo\" title=\"method once::once::OnceVec::push_ooo\"><code>OnceVec::push_ooo</code></a> for details on return value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ooo_outputs\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#242-244\">Source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/homomorphism/struct.MuFreeModuleHomomorphism.html#tymethod.ooo_outputs\" class=\"fn\">ooo_outputs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>List of outputs that have been added out of order</p>\n</div></details><section id=\"method.apply_to_generator\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#246-249\">Source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/homomorphism/struct.MuFreeModuleHomomorphism.html#tymethod.apply_to_generator\" class=\"fn\">apply_to_generator</a>(\n    &amp;self,\n    result: &amp;mut <a class=\"enum\" href=\"fp/vector/fp_wrapper/enum.FpVector.html\" title=\"enum fp::vector::fp_wrapper::FpVector\">FpVector</a>,\n    coeff: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>,\n    degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>,\n    idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n)</h4></section><section id=\"method.set_image\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#251-253\">Source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/homomorphism/struct.MuFreeModuleHomomorphism.html#tymethod.set_image\" class=\"fn\">set_image</a>(&amp;self, degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>, image: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fp/matrix/subspace/struct.Subspace.html\" title=\"struct fp::matrix::subspace::Subspace\">Subspace</a>&gt;)</h4></section><section id=\"method.set_kernel\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#255-257\">Source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/homomorphism/struct.MuFreeModuleHomomorphism.html#tymethod.set_kernel\" class=\"fn\">set_kernel</a>(&amp;self, degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>, kernel: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fp/matrix/subspace/struct.Subspace.html\" title=\"struct fp::matrix::subspace::Subspace\">Subspace</a>&gt;)</h4></section><section id=\"method.set_quasi_inverse\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#259-261\">Source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/homomorphism/struct.MuFreeModuleHomomorphism.html#tymethod.set_quasi_inverse\" class=\"fn\">set_quasi_inverse</a>(\n    &amp;self,\n    degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>,\n    quasi_inverse: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fp/matrix/quasi_inverse/struct.QuasiInverse.html\" title=\"struct fp::matrix::quasi_inverse::QuasiInverse\">QuasiInverse</a>&gt;,\n)</h4></section></div></details>",0,"algebra::module::homomorphism::free_module_homomorphism::FreeModuleHomomorphism","algebra::module::homomorphism::free_module_homomorphism::UnstableFreeModuleHomomorphism"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MuFreeModuleHomomorphism%3CU,+MuFreeModule%3CU,+A%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#278-299\">Source</a><a href=\"#impl-MuFreeModuleHomomorphism%3CU,+MuFreeModule%3CU,+A%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const U: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, A: <a class=\"trait\" href=\"algebra/trait.MuAlgebra.html\" title=\"trait algebra::MuAlgebra\">MuAlgebra</a>&lt;U&gt;&gt; <a class=\"struct\" href=\"algebra/module/homomorphism/struct.MuFreeModuleHomomorphism.html\" title=\"struct algebra::module::homomorphism::MuFreeModuleHomomorphism\">MuFreeModuleHomomorphism</a>&lt;U, <a class=\"struct\" href=\"algebra/module/struct.MuFreeModule.html\" title=\"struct algebra::module::MuFreeModule\">MuFreeModule</a>&lt;U, A&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hom_k\" class=\"method\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#280-298\">Source</a><h4 class=\"code-header\">pub fn <a href=\"algebra/module/homomorphism/struct.MuFreeModuleHomomorphism.html#tymethod.hom_k\" class=\"fn\">hom_k</a>(&amp;self, t: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Given f: M -&gt; N, compute the dual f*: Hom(N, k) -&gt; Hom(M, k) in source (N) degree t.</p>\n</div></details></div></details>",0,"algebra::module::homomorphism::free_module_homomorphism::FreeModuleHomomorphism","algebra::module::homomorphism::free_module_homomorphism::UnstableFreeModuleHomomorphism"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ZeroHomomorphism%3CMuFreeModule%3CU,+%3CM+as+Module%3E::Algebra%3E,+M%3E-for-MuFreeModuleHomomorphism%3CU,+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#264-276\">Source</a><a href=\"#impl-ZeroHomomorphism%3CMuFreeModule%3CU,+%3CM+as+Module%3E::Algebra%3E,+M%3E-for-MuFreeModuleHomomorphism%3CU,+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const U: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, M: <a class=\"trait\" href=\"algebra/module/trait.Module.html\" title=\"trait algebra::module::Module\">Module</a>&gt; <a class=\"trait\" href=\"algebra/module/homomorphism/trait.ZeroHomomorphism.html\" title=\"trait algebra::module::homomorphism::ZeroHomomorphism\">ZeroHomomorphism</a>&lt;<a class=\"struct\" href=\"algebra/module/struct.MuFreeModule.html\" title=\"struct algebra::module::MuFreeModule\">MuFreeModule</a>&lt;U, &lt;M as <a class=\"trait\" href=\"algebra/module/trait.Module.html\" title=\"trait algebra::module::Module\">Module</a>&gt;::<a class=\"associatedtype\" href=\"algebra/module/trait.Module.html#associatedtype.Algebra\" title=\"type algebra::module::Module::Algebra\">Algebra</a>&gt;, M&gt; for <a class=\"struct\" href=\"algebra/module/homomorphism/struct.MuFreeModuleHomomorphism.html\" title=\"struct algebra::module::homomorphism::MuFreeModuleHomomorphism\">MuFreeModuleHomomorphism</a>&lt;U, M&gt;<div class=\"where\">where\n    M::<a class=\"associatedtype\" href=\"algebra/module/trait.Module.html#associatedtype.Algebra\" title=\"type algebra::module::Module::Algebra\">Algebra</a>: <a class=\"trait\" href=\"algebra/trait.MuAlgebra.html\" title=\"trait algebra::MuAlgebra\">MuAlgebra</a>&lt;U&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.zero_homomorphism\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/algebra/module/homomorphism/free_module_homomorphism.rs.html#269-275\">Source</a><a href=\"#method.zero_homomorphism\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"algebra/module/homomorphism/trait.ZeroHomomorphism.html#tymethod.zero_homomorphism\" class=\"fn\">zero_homomorphism</a>(\n    source: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"algebra/module/struct.MuFreeModule.html\" title=\"struct algebra::module::MuFreeModule\">MuFreeModule</a>&lt;U, M::<a class=\"associatedtype\" href=\"algebra/module/trait.Module.html#associatedtype.Algebra\" title=\"type algebra::module::Module::Algebra\">Algebra</a>&gt;&gt;,\n    target: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;M&gt;,\n    degree_shift: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>,\n) -&gt; Self</h4></section></div></details>","ZeroHomomorphism<MuFreeModule<U, <M as Module>::Algebra>, M>","algebra::module::homomorphism::free_module_homomorphism::FreeModuleHomomorphism","algebra::module::homomorphism::free_module_homomorphism::UnstableFreeModuleHomomorphism"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[34179]}
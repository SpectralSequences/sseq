(function() {var implementors = {};
implementors["algebra"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/algebra/combinatorics/struct.TruncatedPolynomialMonomialBasis.html\" title=\"struct algebra::algebra::combinatorics::TruncatedPolynomialMonomialBasis\">TruncatedPolynomialMonomialBasis</a>","synthetic":true,"types":["algebra::algebra::combinatorics::TruncatedPolynomialMonomialBasis"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/algebra/combinatorics/struct.PartitionIterator.html\" title=\"struct algebra::algebra::combinatorics::PartitionIterator\">PartitionIterator</a>&lt;'a&gt;","synthetic":true,"types":["algebra::algebra::combinatorics::PartitionIterator"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/algebra/field/struct.Field.html\" title=\"struct algebra::algebra::field::Field\">Field</a>","synthetic":true,"types":["algebra::algebra::field::Field"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/algebra/polynomial_algebra/struct.PolynomialAlgebraMonomial.html\" title=\"struct algebra::algebra::polynomial_algebra::PolynomialAlgebraMonomial\">PolynomialAlgebraMonomial</a>","synthetic":true,"types":["algebra::algebra::polynomial_algebra::PolynomialAlgebraMonomial"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/algebra/polynomial_algebra/struct.PolynomialAlgebraTableEntry.html\" title=\"struct algebra::algebra::polynomial_algebra::PolynomialAlgebraTableEntry\">PolynomialAlgebraTableEntry</a>","synthetic":true,"types":["algebra::algebra::polynomial_algebra::PolynomialAlgebraTableEntry"]},{"text":"impl&lt;'a&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"algebra/algebra/steenrod_algebra/enum.SteenrodAlgebraBorrow.html\" title=\"enum algebra::algebra::steenrod_algebra::SteenrodAlgebraBorrow\">SteenrodAlgebraBorrow</a>&lt;'a&gt;","synthetic":true,"types":["algebra::algebra::steenrod_algebra::SteenrodAlgebraBorrow"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"algebra/algebra/steenrod_algebra/enum.SteenrodAlgebra.html\" title=\"enum algebra::algebra::steenrod_algebra::SteenrodAlgebra\">SteenrodAlgebra</a>","synthetic":true,"types":["algebra::algebra::steenrod_algebra::SteenrodAlgebra"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/algebra/steenrod_algebra/struct.MilnorProfileOption.html\" title=\"struct algebra::algebra::steenrod_algebra::MilnorProfileOption\">MilnorProfileOption</a>","synthetic":true,"types":["algebra::algebra::steenrod_algebra::MilnorProfileOption"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/algebra/steenrod_algebra/struct.AlgebraSpec.html\" title=\"struct algebra::algebra::steenrod_algebra::AlgebraSpec\">AlgebraSpec</a>","synthetic":true,"types":["algebra::algebra::steenrod_algebra::AlgebraSpec"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/algebra/steenrod_algebra/struct.InvalidAlgebraError.html\" title=\"struct algebra::algebra::steenrod_algebra::InvalidAlgebraError\">InvalidAlgebraError</a>","synthetic":true,"types":["algebra::algebra::steenrod_algebra::InvalidAlgebraError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/algebra/adem_algebra/struct.BOCKSTEIN_TABLE.html\" title=\"struct algebra::algebra::adem_algebra::BOCKSTEIN_TABLE\">BOCKSTEIN_TABLE</a>","synthetic":true,"types":["algebra::algebra::adem_algebra::BOCKSTEIN_TABLE"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/algebra/adem_algebra/struct.AdemBasisElement.html\" title=\"struct algebra::algebra::adem_algebra::AdemBasisElement\">AdemBasisElement</a>","synthetic":true,"types":["algebra::algebra::adem_algebra::AdemBasisElement"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"algebra/algebra/adem_algebra/enum.PorBockstein.html\" title=\"enum algebra::algebra::adem_algebra::PorBockstein\">PorBockstein</a>","synthetic":true,"types":["algebra::algebra::adem_algebra::PorBockstein"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/algebra/adem_algebra/struct.AdemAlgebra.html\" title=\"struct algebra::algebra::adem_algebra::AdemAlgebra\">AdemAlgebra</a>","synthetic":true,"types":["algebra::algebra::adem_algebra::AdemAlgebra"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/algebra/milnor_algebra/struct.MilnorProfile.html\" title=\"struct algebra::algebra::milnor_algebra::MilnorProfile\">MilnorProfile</a>","synthetic":true,"types":["algebra::algebra::milnor_algebra::MilnorProfile"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/algebra/milnor_algebra/struct.QPart.html\" title=\"struct algebra::algebra::milnor_algebra::QPart\">QPart</a>","synthetic":true,"types":["algebra::algebra::milnor_algebra::QPart"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/algebra/milnor_algebra/struct.MilnorBasisElement.html\" title=\"struct algebra::algebra::milnor_algebra::MilnorBasisElement\">MilnorBasisElement</a>","synthetic":true,"types":["algebra::algebra::milnor_algebra::MilnorBasisElement"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/algebra/milnor_algebra/struct.MilnorAlgebra.html\" title=\"struct algebra::algebra::milnor_algebra::MilnorAlgebra\">MilnorAlgebra</a>","synthetic":true,"types":["algebra::algebra::milnor_algebra::MilnorAlgebra"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/algebra/milnor_algebra/struct.Matrix2D.html\" title=\"struct algebra::algebra::milnor_algebra::Matrix2D\">Matrix2D</a>","synthetic":true,"types":["algebra::algebra::milnor_algebra::Matrix2D"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/algebra/milnor_algebra/struct.PPartAllocation.html\" title=\"struct algebra::algebra::milnor_algebra::PPartAllocation\">PPartAllocation</a>","synthetic":true,"types":["algebra::algebra::milnor_algebra::PPartAllocation"]},{"text":"impl&lt;'a, const MOD4:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/algebra/milnor_algebra/struct.PPartMultiplier.html\" title=\"struct algebra::algebra::milnor_algebra::PPartMultiplier\">PPartMultiplier</a>&lt;'a, MOD4&gt;","synthetic":true,"types":["algebra::algebra::milnor_algebra::PPartMultiplier"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"algebra/steenrod_parser/enum.AlgebraBasisElt.html\" title=\"enum algebra::steenrod_parser::AlgebraBasisElt\">AlgebraBasisElt</a>","synthetic":true,"types":["algebra::steenrod_parser::AlgebraBasisElt"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"algebra/steenrod_parser/enum.AlgebraParseNode.html\" title=\"enum algebra::steenrod_parser::AlgebraParseNode\">AlgebraParseNode</a>","synthetic":true,"types":["algebra::steenrod_parser::AlgebraParseNode"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"algebra/steenrod_parser/enum.ModuleParseNode.html\" title=\"enum algebra::steenrod_parser::ModuleParseNode\">ModuleParseNode</a>","synthetic":true,"types":["algebra::steenrod_parser::ModuleParseNode"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"algebra/steenrod_parser/enum.BocksteinOrSq.html\" title=\"enum algebra::steenrod_parser::BocksteinOrSq\">BocksteinOrSq</a>","synthetic":true,"types":["algebra::steenrod_parser::BocksteinOrSq"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/steenrod_parser/struct.ParseError.html\" title=\"struct algebra::steenrod_parser::ParseError\">ParseError</a>","synthetic":true,"types":["algebra::steenrod_parser::ParseError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/steenrod_evaluator/struct.SteenrodCalculator.html\" title=\"struct algebra::steenrod_evaluator::SteenrodCalculator\">SteenrodCalculator</a>","synthetic":true,"types":["algebra::steenrod_evaluator::SteenrodCalculator"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/steenrod_evaluator/struct.DegreeError.html\" title=\"struct algebra::steenrod_evaluator::DegreeError\">DegreeError</a>","synthetic":true,"types":["algebra::steenrod_evaluator::DegreeError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/steenrod_evaluator/struct.UnknownBasisElementError.html\" title=\"struct algebra::steenrod_evaluator::UnknownBasisElementError\">UnknownBasisElementError</a>","synthetic":true,"types":["algebra::steenrod_evaluator::UnknownBasisElementError"]},{"text":"impl&lt;A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/finite_dimensional_module/struct.FiniteDimensionalModule.html\" title=\"struct algebra::module::finite_dimensional_module::FiniteDimensionalModule\">FiniteDimensionalModule</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["algebra::module::finite_dimensional_module::FiniteDimensionalModule"]},{"text":"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"algebra/module/finite_module/enum.FiniteModule.html\" title=\"enum algebra::module::finite_module::FiniteModule\">FiniteModule</a>","synthetic":true,"types":["algebra::module::finite_module::FiniteModule"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/finite_module/struct.UnknownModuleTypeError.html\" title=\"struct algebra::module::finite_module::UnknownModuleTypeError\">UnknownModuleTypeError</a>","synthetic":true,"types":["algebra::module::finite_module::UnknownModuleTypeError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/finitely_presented_module/struct.FPMIndexTable.html\" title=\"struct algebra::module::finitely_presented_module::FPMIndexTable\">FPMIndexTable</a>","synthetic":true,"types":["algebra::module::finitely_presented_module::FPMIndexTable"]},{"text":"impl&lt;A&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/finitely_presented_module/struct.FinitelyPresentedModule.html\" title=\"struct algebra::module::finitely_presented_module::FinitelyPresentedModule\">FinitelyPresentedModule</a>&lt;A&gt;","synthetic":true,"types":["algebra::module::finitely_presented_module::FinitelyPresentedModule"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/free_module/struct.OperationGeneratorPair.html\" title=\"struct algebra::module::free_module::OperationGeneratorPair\">OperationGeneratorPair</a>","synthetic":true,"types":["algebra::module::free_module::OperationGeneratorPair"]},{"text":"impl&lt;A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/free_module/struct.FreeModule.html\" title=\"struct algebra::module::free_module::FreeModule\">FreeModule</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["algebra::module::free_module::FreeModule"]},{"text":"impl&lt;A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/rpn/struct.RealProjectiveSpace.html\" title=\"struct algebra::module::rpn::RealProjectiveSpace\">RealProjectiveSpace</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["algebra::module::rpn::RealProjectiveSpace"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/rpn/struct.RPSpec.html\" title=\"struct algebra::module::rpn::RPSpec\">RPSpec</a>","synthetic":true,"types":["algebra::module::rpn::RPSpec"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/module_trait/struct.ModuleFailedRelationError.html\" title=\"struct algebra::module::module_trait::ModuleFailedRelationError\">ModuleFailedRelationError</a>","synthetic":true,"types":["algebra::module::module_trait::ModuleFailedRelationError"]},{"text":"impl&lt;M:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/truncated_module/struct.TruncatedModule.html\" title=\"struct algebra::module::truncated_module::TruncatedModule\">TruncatedModule</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["algebra::module::truncated_module::TruncatedModule"]},{"text":"impl&lt;A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/free_unstable_module/struct.FreeUnstableModule.html\" title=\"struct algebra::module::free_unstable_module::FreeUnstableModule\">FreeUnstableModule</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["algebra::module::free_unstable_module::FreeUnstableModule"]},{"text":"impl&lt;A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/kfpn/struct.KFpn.html\" title=\"struct algebra::module::kfpn::KFpn\">KFpn</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["algebra::module::kfpn::KFpn"]},{"text":"impl&lt;A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/bcp/struct.BCp.html\" title=\"struct algebra::module::bcp::BCp\">BCp</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["algebra::module::bcp::BCp"]},{"text":"impl&lt;A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/dickson2/struct.Dickson2.html\" title=\"struct algebra::module::dickson2::Dickson2\">Dickson2</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["algebra::module::dickson2::Dickson2"]},{"text":"impl&lt;M&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/hom_module/struct.HomModule.html\" title=\"struct algebra::module::hom_module::HomModule\">HomModule</a>&lt;M&gt;","synthetic":true,"types":["algebra::module::hom_module::HomModule"]},{"text":"impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/quotient_module/struct.QuotientModule.html\" title=\"struct algebra::module::quotient_module::QuotientModule\">QuotientModule</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["algebra::module::quotient_module::QuotientModule"]},{"text":"impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/sum_module/struct.SumModule.html\" title=\"struct algebra::module::sum_module::SumModule\">SumModule</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;M as <a class=\"trait\" href=\"algebra/module/module_trait/trait.Module.html\" title=\"trait algebra::module::module_trait::Module\">Module</a>&gt;::<a class=\"type\" href=\"algebra/module/module_trait/trait.Module.html#associatedtype.Algebra\" title=\"type algebra::module::module_trait::Module::Algebra\">Algebra</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["algebra::module::sum_module::SumModule"]},{"text":"impl&lt;M, N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/tensor_module/struct.TensorModule.html\" title=\"struct algebra::module::tensor_module::TensorModule\">TensorModule</a>&lt;M, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["algebra::module::tensor_module::TensorModule"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/block_structure/struct.GeneratorBasisEltPair.html\" title=\"struct algebra::module::block_structure::GeneratorBasisEltPair\">GeneratorBasisEltPair</a>","synthetic":true,"types":["algebra::module::block_structure::GeneratorBasisEltPair"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/block_structure/struct.BlockStructure.html\" title=\"struct algebra::module::block_structure::BlockStructure\">BlockStructure</a>","synthetic":true,"types":["algebra::module::block_structure::BlockStructure"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/block_structure/struct.BlockStart.html\" title=\"struct algebra::module::block_structure::BlockStart\">BlockStart</a>","synthetic":true,"types":["algebra::module::block_structure::BlockStart"]},{"text":"impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/homomorphism/bounded_module_homomorphism/struct.BoundedModuleHomomorphism.html\" title=\"struct algebra::module::homomorphism::bounded_module_homomorphism::BoundedModuleHomomorphism\">BoundedModuleHomomorphism</a>&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["algebra::module::homomorphism::bounded_module_homomorphism::BoundedModuleHomomorphism"]},{"text":"impl&lt;M&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"algebra/module/homomorphism/finite_module_homomorphism/enum.FMHI.html\" title=\"enum algebra::module::homomorphism::finite_module_homomorphism::FMHI\">FMHI</a>&lt;M&gt;","synthetic":true,"types":["algebra::module::homomorphism::finite_module_homomorphism::FMHI"]},{"text":"impl&lt;M&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/homomorphism/finite_module_homomorphism/struct.FiniteModuleHomomorphism.html\" title=\"struct algebra::module::homomorphism::finite_module_homomorphism::FiniteModuleHomomorphism\">FiniteModuleHomomorphism</a>&lt;M&gt;","synthetic":true,"types":["algebra::module::homomorphism::finite_module_homomorphism::FiniteModuleHomomorphism"]},{"text":"impl&lt;N, M&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/homomorphism/fp_module_homomorphism/struct.FPModuleHomomorphism.html\" title=\"struct algebra::module::homomorphism::fp_module_homomorphism::FPModuleHomomorphism\">FPModuleHomomorphism</a>&lt;N, M&gt;","synthetic":true,"types":["algebra::module::homomorphism::fp_module_homomorphism::FPModuleHomomorphism"]},{"text":"impl&lt;M&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/homomorphism/free_module_homomorphism/struct.FreeModuleHomomorphism.html\" title=\"struct algebra::module::homomorphism::free_module_homomorphism::FreeModuleHomomorphism\">FreeModuleHomomorphism</a>&lt;M&gt;","synthetic":true,"types":["algebra::module::homomorphism::free_module_homomorphism::FreeModuleHomomorphism"]},{"text":"impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/homomorphism/generic_zero_homomorphism/struct.GenericZeroHomomorphism.html\" title=\"struct algebra::module::homomorphism::generic_zero_homomorphism::GenericZeroHomomorphism\">GenericZeroHomomorphism</a>&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["algebra::module::homomorphism::generic_zero_homomorphism::GenericZeroHomomorphism"]},{"text":"impl&lt;M&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/homomorphism/hom_pullback/struct.HomPullback.html\" title=\"struct algebra::module::homomorphism::hom_pullback::HomPullback\">HomPullback</a>&lt;M&gt;","synthetic":true,"types":["algebra::module::homomorphism::hom_pullback::HomPullback"]},{"text":"impl&lt;F&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/homomorphism/quotient_homomorphism/struct.QuotientHomomorphism.html\" title=\"struct algebra::module::homomorphism::quotient_homomorphism::QuotientHomomorphism\">QuotientHomomorphism</a>&lt;F&gt;","synthetic":true,"types":["algebra::module::homomorphism::quotient_homomorphism::QuotientHomomorphism"]},{"text":"impl&lt;F&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/homomorphism/quotient_homomorphism/struct.QuotientHomomorphismSource.html\" title=\"struct algebra::module::homomorphism::quotient_homomorphism::QuotientHomomorphismSource\">QuotientHomomorphismSource</a>&lt;F&gt;","synthetic":true,"types":["algebra::module::homomorphism::quotient_homomorphism::QuotientHomomorphismSource"]},{"text":"impl&lt;F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/homomorphism/truncated_homomorphism/struct.TruncatedHomomorphism.html\" title=\"struct algebra::module::homomorphism::truncated_homomorphism::TruncatedHomomorphism\">TruncatedHomomorphism</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as <a class=\"trait\" href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html\" title=\"trait algebra::module::homomorphism::ModuleHomomorphism\">ModuleHomomorphism</a>&gt;::<a class=\"type\" href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html#associatedtype.Source\" title=\"type algebra::module::homomorphism::ModuleHomomorphism::Source\">Source</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as <a class=\"trait\" href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html\" title=\"trait algebra::module::homomorphism::ModuleHomomorphism\">ModuleHomomorphism</a>&gt;::<a class=\"type\" href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html#associatedtype.Target\" title=\"type algebra::module::homomorphism::ModuleHomomorphism::Target\">Target</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["algebra::module::homomorphism::truncated_homomorphism::TruncatedHomomorphism"]},{"text":"impl&lt;F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"algebra/module/homomorphism/truncated_homomorphism/struct.TruncatedHomomorphismSource.html\" title=\"struct algebra::module::homomorphism::truncated_homomorphism::TruncatedHomomorphismSource\">TruncatedHomomorphismSource</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as <a class=\"trait\" href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html\" title=\"trait algebra::module::homomorphism::ModuleHomomorphism\">ModuleHomomorphism</a>&gt;::<a class=\"type\" href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html#associatedtype.Source\" title=\"type algebra::module::homomorphism::ModuleHomomorphism::Source\">Source</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as <a class=\"trait\" href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html\" title=\"trait algebra::module::homomorphism::ModuleHomomorphism\">ModuleHomomorphism</a>&gt;::<a class=\"type\" href=\"algebra/module/homomorphism/trait.ModuleHomomorphism.html#associatedtype.Target\" title=\"type algebra::module::homomorphism::ModuleHomomorphism::Target\">Target</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["algebra::module::homomorphism::truncated_homomorphism::TruncatedHomomorphismSource"]}];
implementors["bivec"] = [{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"bivec/struct.BiVec.html\" title=\"struct bivec::BiVec\">BiVec</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["bivec::BiVec"]}];
implementors["chart"] = [{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"chart/struct.Graph.html\" title=\"struct chart::Graph\">Graph</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["chart::Graph"]}];
implementors["error"] = [{"text":"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"error/struct.Error.html\" title=\"struct error::Error\">Error</a>","synthetic":true,"types":["error::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"error/struct.GenericError.html\" title=\"struct error::GenericError\">GenericError</a>","synthetic":true,"types":["error::GenericError"]}];
implementors["ext"] = [{"text":"impl&lt;M, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"ext/chain_complex/finite_chain_complex/struct.FiniteChainComplex.html\" title=\"struct ext::chain_complex::finite_chain_complex::FiniteChainComplex\">FiniteChainComplex</a>&lt;M, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["ext::chain_complex::finite_chain_complex::FiniteChainComplex"]},{"text":"impl&lt;M, F1, F2, CC&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"ext/chain_complex/finite_chain_complex/struct.FiniteAugmentedChainComplex.html\" title=\"struct ext::chain_complex::finite_chain_complex::FiniteAugmentedChainComplex\">FiniteAugmentedChainComplex</a>&lt;M, F1, F2, CC&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;CC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;F1: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;F2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["ext::chain_complex::finite_chain_complex::FiniteAugmentedChainComplex"]},{"text":"impl&lt;CC1, M, F&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"ext/chain_complex/hom_complex/struct.HomChainComplex.html\" title=\"struct ext::chain_complex::hom_complex::HomChainComplex\">HomChainComplex</a>&lt;CC1, M, F&gt;","synthetic":true,"types":["ext::chain_complex::hom_complex::HomChainComplex"]},{"text":"impl&lt;CC1, M, F&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"ext/chain_complex/hom_complex/struct.HomChainMap.html\" title=\"struct ext::chain_complex::hom_complex::HomChainMap\">HomChainMap</a>&lt;CC1, M, F&gt;","synthetic":true,"types":["ext::chain_complex::hom_complex::HomChainMap"]},{"text":"impl&lt;A, CC1, CC2&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"ext/chain_complex/tensor_product_chain_complex/struct.TensorChainComplex.html\" title=\"struct ext::chain_complex::tensor_product_chain_complex::TensorChainComplex\">TensorChainComplex</a>&lt;A, CC1, CC2&gt;","synthetic":true,"types":["ext::chain_complex::tensor_product_chain_complex::TensorChainComplex"]},{"text":"impl&lt;A, CC1, CC2&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"ext/chain_complex/tensor_product_chain_complex/struct.TensorChainMap.html\" title=\"struct ext::chain_complex::tensor_product_chain_complex::TensorChainMap\">TensorChainMap</a>&lt;A, CC1, CC2&gt;","synthetic":true,"types":["ext::chain_complex::tensor_product_chain_complex::TensorChainMap"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"ext/chain_complex/enum.ChainComplexGrading.html\" title=\"enum ext::chain_complex::ChainComplexGrading\">ChainComplexGrading</a>","synthetic":true,"types":["ext::chain_complex::ChainComplexGrading"]},{"text":"impl&lt;F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"ext/chain_complex/struct.ChainMap.html\" title=\"struct ext::chain_complex::ChainMap\">ChainMap</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["ext::chain_complex::ChainMap"]},{"text":"impl&lt;CC&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"ext/resolution/struct.ResolutionInner.html\" title=\"struct ext::resolution::ResolutionInner\">ResolutionInner</a>&lt;CC&gt;","synthetic":true,"types":["ext::resolution::ResolutionInner"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"ext/resolution/struct.Cocycle.html\" title=\"struct ext::resolution::Cocycle\">Cocycle</a>","synthetic":true,"types":["ext::resolution::Cocycle"]},{"text":"impl&lt;CC&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"ext/resolution/struct.SelfMap.html\" title=\"struct ext::resolution::SelfMap\">SelfMap</a>&lt;CC&gt;","synthetic":true,"types":["ext::resolution::SelfMap"]},{"text":"impl&lt;CC&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"ext/resolution/struct.Resolution.html\" title=\"struct ext::resolution::Resolution\">Resolution</a>&lt;CC&gt;","synthetic":true,"types":["ext::resolution::Resolution"]},{"text":"impl&lt;CC1, CC2&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"ext/resolution_homomorphism/struct.ResolutionHomomorphism.html\" title=\"struct ext::resolution_homomorphism::ResolutionHomomorphism\">ResolutionHomomorphism</a>&lt;CC1, CC2&gt;","synthetic":true,"types":["ext::resolution_homomorphism::ResolutionHomomorphism"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"ext/utils/struct.Config.html\" title=\"struct ext::utils::Config\">Config</a>","synthetic":true,"types":["ext::utils::Config"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"ext/utils/struct.ModuleFileNotFoundError.html\" title=\"struct ext::utils::ModuleFileNotFoundError\">ModuleFileNotFoundError</a>","synthetic":true,"types":["ext::utils::ModuleFileNotFoundError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"ext/secondary/struct.MilnorClass.html\" title=\"struct ext::secondary::MilnorClass\">MilnorClass</a>","synthetic":true,"types":["ext::secondary::MilnorClass"]}];
implementors["fp"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"fp/matrix/matrix_inner/struct.Matrix.html\" title=\"struct fp::matrix::matrix_inner::Matrix\">Matrix</a>","synthetic":true,"types":["fp::matrix::matrix_inner::Matrix"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"fp/matrix/matrix_inner/struct.AugmentedMatrix3.html\" title=\"struct fp::matrix::matrix_inner::AugmentedMatrix3\">AugmentedMatrix3</a>","synthetic":true,"types":["fp::matrix::matrix_inner::AugmentedMatrix3"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"fp/matrix/matrix_inner/struct.AugmentedMatrix2.html\" title=\"struct fp::matrix::matrix_inner::AugmentedMatrix2\">AugmentedMatrix2</a>","synthetic":true,"types":["fp::matrix::matrix_inner::AugmentedMatrix2"]},{"text":"impl&lt;'a&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"fp/matrix/matrix_inner/struct.MatrixSliceMut.html\" title=\"struct fp::matrix::matrix_inner::MatrixSliceMut\">MatrixSliceMut</a>&lt;'a&gt;","synthetic":true,"types":["fp::matrix::matrix_inner::MatrixSliceMut"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"fp/matrix/quasi_inverse/struct.QuasiInverse.html\" title=\"struct fp::matrix::quasi_inverse::QuasiInverse\">QuasiInverse</a>","synthetic":true,"types":["fp::matrix::quasi_inverse::QuasiInverse"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"fp/matrix/subquotient/struct.Subquotient.html\" title=\"struct fp::matrix::subquotient::Subquotient\">Subquotient</a>","synthetic":true,"types":["fp::matrix::subquotient::Subquotient"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"fp/matrix/subspace/struct.Subspace.html\" title=\"struct fp::matrix::subspace::Subspace\">Subspace</a>","synthetic":true,"types":["fp::matrix::subspace::Subspace"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"fp/prime/struct.ValidPrime.html\" title=\"struct fp::prime::ValidPrime\">ValidPrime</a>","synthetic":true,"types":["fp::prime::ValidPrime"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"fp/prime/struct.BitflagIterator.html\" title=\"struct fp::prime::BitflagIterator\">BitflagIterator</a>","synthetic":true,"types":["fp::prime::BitflagIterator"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"fp/vector/enum.FpVector.html\" title=\"enum fp::vector::FpVector\">FpVector</a>","synthetic":true,"types":["fp::vector::FpVector"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"fp/vector/enum.Slice.html\" title=\"enum fp::vector::Slice\">Slice</a>&lt;'a&gt;","synthetic":true,"types":["fp::vector::Slice"]},{"text":"impl&lt;'a&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"fp/vector/enum.SliceMut.html\" title=\"enum fp::vector::SliceMut\">SliceMut</a>&lt;'a&gt;","synthetic":true,"types":["fp::vector::SliceMut"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"fp/vector/enum.FpVectorNonZeroIterator.html\" title=\"enum fp::vector::FpVectorNonZeroIterator\">FpVectorNonZeroIterator</a>&lt;'a&gt;","synthetic":true,"types":["fp::vector::FpVectorNonZeroIterator"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"fp/vector_inner/struct.LimbBitIndexPair.html\" title=\"struct fp::vector_inner::LimbBitIndexPair\">LimbBitIndexPair</a>","synthetic":true,"types":["fp::vector_inner::LimbBitIndexPair"]},{"text":"impl&lt;const P:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"fp/vector_inner/struct.FpVectorP.html\" title=\"struct fp::vector_inner::FpVectorP\">FpVectorP</a>&lt;P&gt;","synthetic":true,"types":["fp::vector_inner::FpVectorP"]},{"text":"impl&lt;'a, const P:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"fp/vector_inner/struct.SliceP.html\" title=\"struct fp::vector_inner::SliceP\">SliceP</a>&lt;'a, P&gt;","synthetic":true,"types":["fp::vector_inner::SliceP"]},{"text":"impl&lt;'a, const P:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"fp/vector_inner/struct.SliceMutP.html\" title=\"struct fp::vector_inner::SliceMutP\">SliceMutP</a>&lt;'a, P&gt;","synthetic":true,"types":["fp::vector_inner::SliceMutP"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"fp/vector_inner/struct.AddShiftNoneData.html\" title=\"struct fp::vector_inner::AddShiftNoneData\">AddShiftNoneData</a>","synthetic":true,"types":["fp::vector_inner::AddShiftNoneData"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"fp/vector_inner/struct.AddShiftLeftData.html\" title=\"struct fp::vector_inner::AddShiftLeftData\">AddShiftLeftData</a>","synthetic":true,"types":["fp::vector_inner::AddShiftLeftData"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"fp/vector_inner/struct.AddShiftRightData.html\" title=\"struct fp::vector_inner::AddShiftRightData\">AddShiftRightData</a>","synthetic":true,"types":["fp::vector_inner::AddShiftRightData"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"fp/vector_inner/struct.FpVectorIterator.html\" title=\"struct fp::vector_inner::FpVectorIterator\">FpVectorIterator</a>&lt;'a&gt;","synthetic":true,"types":["fp::vector_inner::FpVectorIterator"]},{"text":"impl&lt;'a, const P:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"fp/vector_inner/struct.FpVectorNonZeroIteratorP.html\" title=\"struct fp::vector_inner::FpVectorNonZeroIteratorP\">FpVectorNonZeroIteratorP</a>&lt;'a, P&gt;","synthetic":true,"types":["fp::vector_inner::FpVectorNonZeroIteratorP"]}];
implementors["once"] = [{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"once/struct.OnceVec.html\" title=\"struct once::OnceVec\">OnceVec</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["once::OnceVec"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"once/struct.OnceBiVec.html\" title=\"struct once::OnceBiVec\">OnceBiVec</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["once::OnceBiVec"]}];
implementors["thread_token"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"thread_token/struct.TokenBucket.html\" title=\"struct thread_token::TokenBucket\">TokenBucket</a>","synthetic":true,"types":["thread_token::TokenBucket"]},{"text":"impl&lt;'a&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"thread_token/struct.Token.html\" title=\"struct thread_token::Token\">Token</a>&lt;'a&gt;","synthetic":true,"types":["thread_token::Token"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()
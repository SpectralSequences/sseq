(function() {var implementors = {};
implementors["algebra"] = [{"text":"impl&lt;A:&nbsp;<a class=\"trait\" href=\"algebra/algebra/algebra_trait/trait.Algebra.html\" title=\"trait algebra::algebra::algebra_trait::Algebra\">Algebra</a>&gt; <a class=\"trait\" href=\"saveload/trait.Load.html\" title=\"trait saveload::Load\">Load</a> for <a class=\"struct\" href=\"algebra/module/free_module/struct.FreeModule.html\" title=\"struct algebra::module::free_module::FreeModule\">FreeModule</a>&lt;A&gt;","synthetic":false,"types":["algebra::module::free_module::FreeModule"]},{"text":"impl&lt;A:&nbsp;<a class=\"trait\" href=\"algebra/algebra/adem_algebra/trait.AdemAlgebraT.html\" title=\"trait algebra::algebra::adem_algebra::AdemAlgebraT\">AdemAlgebraT</a>&gt; <a class=\"trait\" href=\"saveload/trait.Load.html\" title=\"trait saveload::Load\">Load</a> for <a class=\"struct\" href=\"algebra/module/free_unstable_module/struct.FreeUnstableModule.html\" title=\"struct algebra::module::free_unstable_module::FreeUnstableModule\">FreeUnstableModule</a>&lt;A&gt;","synthetic":false,"types":["algebra::module::free_unstable_module::FreeUnstableModule"]},{"text":"impl&lt;M:&nbsp;<a class=\"trait\" href=\"algebra/module/module_trait/trait.Module.html\" title=\"trait algebra::module::module_trait::Module\">Module</a>&gt; <a class=\"trait\" href=\"saveload/trait.Load.html\" title=\"trait saveload::Load\">Load</a> for <a class=\"struct\" href=\"algebra/module/homomorphism/free_module_homomorphism/struct.FreeModuleHomomorphism.html\" title=\"struct algebra::module::homomorphism::free_module_homomorphism::FreeModuleHomomorphism\">FreeModuleHomomorphism</a>&lt;M&gt;","synthetic":false,"types":["algebra::module::homomorphism::free_module_homomorphism::FreeModuleHomomorphism"]}];
implementors["bivec"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"saveload/trait.Load.html\" title=\"trait saveload::Load\">Load</a>&gt; <a class=\"trait\" href=\"saveload/trait.Load.html\" title=\"trait saveload::Load\">Load</a> for <a class=\"struct\" href=\"bivec/struct.BiVec.html\" title=\"struct bivec::BiVec\">BiVec</a>&lt;T&gt;","synthetic":false,"types":["bivec::BiVec"]}];
implementors["ext"] = [{"text":"impl&lt;CC:&nbsp;<a class=\"trait\" href=\"ext/chain_complex/trait.ChainComplex.html\" title=\"trait ext::chain_complex::ChainComplex\">ChainComplex</a>&gt; <a class=\"trait\" href=\"saveload/trait.Load.html\" title=\"trait saveload::Load\">Load</a> for <a class=\"struct\" href=\"ext/resolution/struct.Resolution.html\" title=\"struct ext::resolution::Resolution\">Resolution</a>&lt;CC&gt;","synthetic":false,"types":["ext::resolution::Resolution"]}];
implementors["fp"] = [{"text":"impl <a class=\"trait\" href=\"saveload/trait.Load.html\" title=\"trait saveload::Load\">Load</a> for <a class=\"struct\" href=\"fp/matrix/matrix_inner/struct.Matrix.html\" title=\"struct fp::matrix::matrix_inner::Matrix\">Matrix</a>","synthetic":false,"types":["fp::matrix::matrix_inner::Matrix"]},{"text":"impl <a class=\"trait\" href=\"saveload/trait.Load.html\" title=\"trait saveload::Load\">Load</a> for <a class=\"struct\" href=\"fp/matrix/subspace/struct.Subspace.html\" title=\"struct fp::matrix::subspace::Subspace\">Subspace</a>","synthetic":false,"types":["fp::matrix::subspace::Subspace"]},{"text":"impl <a class=\"trait\" href=\"saveload/trait.Load.html\" title=\"trait saveload::Load\">Load</a> for <a class=\"struct\" href=\"fp/matrix/quasi_inverse/struct.QuasiInverse.html\" title=\"struct fp::matrix::quasi_inverse::QuasiInverse\">QuasiInverse</a>","synthetic":false,"types":["fp::matrix::quasi_inverse::QuasiInverse"]},{"text":"impl <a class=\"trait\" href=\"saveload/trait.Load.html\" title=\"trait saveload::Load\">Load</a> for <a class=\"enum\" href=\"fp/vector/enum.FpVector.html\" title=\"enum fp::vector::FpVector\">FpVector</a>","synthetic":false,"types":["fp::vector::FpVector"]},{"text":"impl <a class=\"trait\" href=\"saveload/trait.Load.html\" title=\"trait saveload::Load\">Load</a> for <a class=\"type\" href=\"fp/vector_2/type.FpVector.html\" title=\"type fp::vector_2::FpVector\">FpVector</a>","synthetic":false,"types":["fp::vector_2::FpVector"]}];
implementors["once"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"saveload/trait.Load.html\" title=\"trait saveload::Load\">Load</a>&gt; <a class=\"trait\" href=\"saveload/trait.Load.html\" title=\"trait saveload::Load\">Load</a> for <a class=\"struct\" href=\"once/struct.OnceVec.html\" title=\"struct once::OnceVec\">OnceVec</a>&lt;T&gt;","synthetic":false,"types":["once::OnceVec"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"saveload/trait.Load.html\" title=\"trait saveload::Load\">Load</a>&gt; <a class=\"trait\" href=\"saveload/trait.Load.html\" title=\"trait saveload::Load\">Load</a> for <a class=\"struct\" href=\"once/struct.OnceBiVec.html\" title=\"struct once::OnceBiVec\">OnceBiVec</a>&lt;T&gt;","synthetic":false,"types":["once::OnceBiVec"]}];
implementors["saveload"] = [];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()
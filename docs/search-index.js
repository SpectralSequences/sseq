var searchIndex = new Map(JSON.parse('[\
["algebra",{"t":"PFPKKGKPPFKPFPKKKFFGGKKCMCMOOMMOOCMMMMMOMMMQOOOOMMCMMMOOOCMCHOOOMMMMMMOOCOMMOMMOOMMMCCOOOFKFPPGMOOOOOOOOOOOOEEEEEEEEEEEEEEEEECCCCCCCCCFKFPPGNMNNNNONONONNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNNNNNNNNNNNOONNNONHNNNNNNNNNNNNNNNOKKKKMMMMNNMMMNNMNNMNNNNMNNMMMNNMNNNNMNNNNMKMMSFSFSNHNNNNNNNNNNNNNONNOHNNONNNNNNNNOONOOOONHNNNNNNHFNNNNNNNNNNNNNNNNNNNNNNNNNONNNNSOFFKFIFIFIFNONNNONONNNNNNNNNNNNNNNNOONNNNNNNNNNNNNONNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNOONNNNNNNNNNNONMNONNNNNNNNNNNNNNNNNNNNNNNOOOOONNONNNNONOOHONONNNNNNONNNNNNNNNNNNNNNNNNNNONNNNSRIFKMHHNNONNNMMMNNNNNMOMNNMQNNONQOKFFMNNNNNNNNMNONNNNNNNNNNOMMNNNNMNNNNNONNNNNNNNNNONNNNNNNNNNOMMMMMNNNNNNNNNNOPPFGPPPPGGKNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNONNMNNNNNNNNNNNNNNNNNNNSFFHOOHOOOOOOOHHFOOFKFFIFIFOOOOOOOOOOOOMOOOOOOOOOOOOOORFFIFFKFFFFFEFFIKMOMOOOOOOOOOMOCOOOMOCCCOOOOOOOOOOOOOOOCCOOOOOMOMOOOOOCOOOOOOOOOOCOOOCOOOCOCOCOOCMFFNOOONNNNNNNNNNNNNNNOONNNNNNNNNNNNNNFNNNONNNONNNNNNNNNNNNNNNNNNNNNOONNNNNONNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNONNNNONOONNNNONNNOONONNNNNNNNIFFFFINNNNOOOOOONNNNNNNNNNNNONNNNNNNNNNNNNONNNNNNNOOOOONOOOOONOOONNNNNNNNNNNNNNNNNOOOOOOONNOOONOONONONNNNNNNNNNNNNNNFNNONONNNNNNNNNNNNNNNONONNNNIFFFKKFFFRRIKNNMNNMOOOOOOOCCCNNCMNOOOOONOOOOOOONOOOOOONNOOOOOCOOMOOOOOOOMOOOOOOMIFINNNNNNNNNNNOOONNNNNNNNOOONNNOOONOOONNNNOOONOOONNNNOOONOOONNNNFNNNNNNNONNNNNNNNONNNOONNONNNONONNNNNFNNNNONNNNNNNNONONNNNFNNNNNNNNNNONNNOONNNONONONNNFFNNNNNNNNNNNNNNOONNNNNNNNOONNONNNNNNNNRKFNNNNNNMMMNNNNNNMNNNNNNNNNNMNNNNMNNONNNNNNOFNNNNONNNNNNNNNNNNNNONNNNNNNONONNNNFFNNONNNNNOOHHNNNNNNNNNNNNNNNNNNNNNOONNOONNNNNNNNNNNIHCNHFNNNNNNNNNNNNNNNNNONNNNNNNNONNNNNNFNNNNNONNNNNNNNNNNONNNNNONNNNNNKMRFKMOMMMMOMMOOFONNNNNNNNNNNNNNNNNNNONNNNNNNNNPGGPPGPIIPPPPPPPPHHHHNNNNNNHNNNNNNHNNNNNNHNNNNNNHNNNNNNNNNHHHHHHHHNNNNNNNNNNNNN","n":["Adem","AdemAlgebra","AdemAlgebra","AdemAlgebraT","Algebra","AlgebraType","Bialgebra","BorrowAdem","BorrowMilnor","Field","GeneratedAlgebra","Milnor","MilnorAlgebra","MilnorAlgebra","MilnorAlgebraT","MuAlgebra","PolynomialAlgebra","PolynomialAlgebraMonomial","PolynomialAlgebraTableEntry","SteenrodAlgebra","SteenrodAlgebraBorrow","SteenrodAlgebraT","UnstableAlgebra","adem_algebra","adem_algebra","algebra","basis_element_from_string","basis_element_to_index_map","basis_element_to_index_map","basis_element_to_string","basis_table","basis_table","basis_table","combinatorics","compute_basis","compute_generating_set","coproduct","decompose","decompose_basis_element","degree","dimension","dimension_unstable","dimension_unstable","dispatch_algebra","even_basis_table","excess_table","excess_table","ext","exterior_generators_in_degree","exterior_monomials","field","frobenius_on_generator","generating_relations","generators","generic","generic","index_to_monomial","milnor_algebra","milnor_algebra","module","module_gens_from_json","monomial_to_index","multiplication_table","multiplication_table","multiply_basis_element_by_element_unstable","multiply_basis_elements","multiply_basis_elements_unstable","multiply_basis_elements_unstable","multiply_element_by_basis_element_unstable","multiply_element_by_element_unstable","p","p","pair_algebra","poly","polynomial_generators_in_degree","polynomial_monomials","ppart_table","prime","prime","prime","profile","repr_ext_generator","repr_poly_generator","steenrod_algebra","steenrod_evaluator","steenrod_parser","unstable_enabled","unstable_enabled","valid","AdemAlgebra","AdemAlgebraT","AdemBasisElement","Bockstein","P","PorBockstein","adem_algebra","basis_element_to_index_map","basis_table","bocksteins","degree","even_basis_table","excess_table","generic","multiplication_table","p","p_or_sq","ps","unstable_enabled","AdemAlgebra","AdemAlgebraT","Algebra","AlgebraType","Bialgebra","Field","GeneratedAlgebra","MilnorAlgebra","MilnorAlgebraT","MuAlgebra","PolynomialAlgebra","PolynomialAlgebraMonomial","PolynomialAlgebraTableEntry","SteenrodAlgebra","SteenrodAlgebraBorrow","SteenrodAlgebraT","UnstableAlgebra","adem_algebra","algebra_trait","bialgebra_trait","combinatorics","field","milnor_algebra","pair_algebra","polynomial_algebra","steenrod_algebra","AdemAlgebra","AdemAlgebraT","AdemBasisElement","Bockstein","P","PorBockstein","a_multiply","adem_algebra","adem_algebra","basis_element_from_index","basis_element_from_string","basis_element_to_index","basis_element_to_index_map","basis_element_to_string","basis_table","beps_pn","bocksteins","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","compute_basis","coproduct","decompose","decompose_basis_element","decompose_basis_element_2","decompose_basis_element_generic","default_filtration_one_products","degree","deref","deref","deref","deref_mut","deref_mut","deref_mut","dimension","dimension_unstable","dimension_unstable","dimension_unstable","drop","drop","drop","element_from_bytes","element_is_zero","element_to_bytes","eq","equivalent","equivalent","equivalent","even_basis_table","excess","excess_table","finalize_element","fmt","fmt","fmt","fmt","from","from","from","generate_basis2","generate_basis_element_to_index_map","generate_basis_even","generate_basis_generic","generate_excess_table","generate_multiplication_table_2","generate_multiplication_table_2_step","generate_multiplication_table_generic","generate_multiplication_table_generic_step","generating_relations","generator_to_string","generators","generic","generic","hash","init","init","init","into","into","into","iter_filtered","magic","make_mono_admissible","make_mono_admissible_2","make_mono_admissible_generic","multiplication_table","multiply_basis_element_by_element_unstable","multiply_basis_element_by_element_unstable","multiply_basis_elements","multiply_basis_elements_unstable","multiply_basis_elements_unstable","multiply_basis_elements_unstable","multiply_element_by_basis_element_unstable","multiply_element_by_basis_element_unstable","multiply_element_by_element_unstable","multiply_element_by_element_unstable","multiply_inner","new","new_pair_element","p","p_or_sq","p_tilde","prefix","prime","ps","q","shift_vec","sigma_multiply_basis","tail_of_basis_element_to_index","to_owned","to_string","to_string","try_basis_element_to_index","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unstable_enabled","Algebra","GeneratedAlgebra","MuAlgebra","UnstableAlgebra","basis_element_from_string","basis_element_to_string","compute_basis","decompose_basis_element","default_filtration_one_products","default_filtration_one_products","dimension","dimension_unstable","dimension_unstable","element_to_string","element_to_string","generating_relations","generator_to_string","generator_to_string","generators","magic","magic","multiply_basis_element_by_element","multiply_basis_element_by_element","multiply_basis_element_by_element_unstable","multiply_basis_element_by_element_unstable","multiply_basis_element_by_element_unstable","multiply_basis_elements","multiply_basis_elements_unstable","multiply_basis_elements_unstable","multiply_element_by_basis_element","multiply_element_by_basis_element","multiply_element_by_basis_element_unstable","multiply_element_by_basis_element_unstable","multiply_element_by_basis_element_unstable","multiply_element_by_element","multiply_element_by_element","multiply_element_by_element_unstable","multiply_element_by_element_unstable","multiply_element_by_element_unstable","prefix","prefix","prime","Bialgebra","coproduct","decompose","MAX_XI_TAU","PartitionIterator","TAU_DEGREES","TruncatedPolynomialMonomialBasis","XI_DEGREES","add_gens_and_calculate_parts","adem_relation_coefficient","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","gen_deg_idx_to_internal_idx","gen_degrees","generators","generators_up_to_degree","gens","inadmissible_pairs","init","init","initial","internal_idx_to_gen_deg","into","into","into_iter","multiunzip","new","new","next","p","partition","parts","parts","parts","parts_by_max","remaining","search","tau_degrees","try_from","try_from","try_into","try_into","type_id","type_id","xi_degrees","Field","basis_element_from_string","basis_element_to_string","borrow","borrow_mut","compute_basis","coproduct","decompose","default_filtration_one_products","deref","deref_mut","dimension","dimension_unstable","drop","element_to_string","fmt","from","init","into","multiply_basis_element_by_element_unstable","multiply_basis_elements","multiply_basis_elements_unstable","multiply_element_by_basis_element_unstable","multiply_element_by_element_unstable","new","prime","prime","to_string","try_from","try_into","type_id","ALLOCATION","M","Matrix2D","MilnorAlgebra","MilnorAlgebraT","MilnorBasisElement","MilnorHashMap","MilnorProfile","PPart","PPartAllocation","PPartEntry","PPartMultiplier","a_multiply","ans","basis_element_from_index","basis_element_from_string","basis_element_to_index","basis_element_to_index_map","basis_element_to_string","basis_table","beps_pn","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_into","cols","cols","compute_basis","compute_degree","compute_ppart","coproduct","decompose","decompose_basis_element","decompose_basis_element_ppart","decompose_basis_element_qpart","default","default","default","default","default_filtration_one_products","degree","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","diag_num","diagonal","diagonal","dimension","dimension_unstable","dimension_unstable","dimension_unstable","drop","drop","drop","drop","drop","drop","element_from_bytes","element_is_zero","element_to_bytes","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","excess","excess_table","finalize_element","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_p","generate_basis_2","generate_basis_generic","generate_excess_table","generating_relations","generator_to_string","generators","generic","generic","get_p_part","hash","increment_p_part","index","index_mut","init","init","init","init","init","init","init","inner","into","into","into","into","into","into","into_allocation","into_iter","is_an","is_trivial","is_valid","m","magic","milnor_algebra","milnor_algebra","multiplication_table","multiply","multiply_basis_by_element","multiply_basis_by_element_with_allocation","multiply_basis_element_by_element","multiply_basis_element_by_element_unstable","multiply_basis_element_by_element_unstable","multiply_basis_elements","multiply_basis_elements_unstable","multiply_basis_elements_unstable","multiply_basis_elements_unstable","multiply_element_by_basis_element_unstable","multiply_element_by_basis_element_unstable","multiply_element_by_element","multiply_element_by_element_unstable","multiply_element_by_element_unstable","multiply_qpart","multiply_with_allocation","new","new_from_allocation","new_pair_element","new_with_profile","next","next_val","p","p","p_part","p_part","p_part","p_tilde","ppart_table","ppart_table","prefix","prime","prime","profile","profile","q","q_part","q_part","q_part_default","r","reset","rows","serialize","sigma_multiply_basis","to_owned","to_string","to_string","to_string","truncated","try_basis_element_to_index","try_beps_pn","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unstable_enabled","update","with_capacity","with_capacity","with_local","AY_CACHE","Element","HashMap","MilnorPairElement","PairAlgebra","a_multiply","a_y_cached","a_y_inner","borrow","borrow_mut","degree","deref","deref_mut","drop","element_from_bytes","element_is_zero","element_to_bytes","finalize_element","finalize_element","from","init","into","new_pair_element","ones","p_tilde","sigma_multiply","sigma_multiply","sigma_multiply_basis","sub","try_from","try_into","twos","type_id","unsub","ys","PolynomialAlgebra","PolynomialAlgebraMonomial","PolynomialAlgebraTableEntry","basis_table","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compute_basis_step","compute_basis_step","compute_generating_set","default","degree","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","ext","exterior_generators_in_degree","exterior_monomials","fmt","fmt","frobenius_monomial","frobenius_monomial","frobenius_on_generator","from","from","hash","index_to_monomial","index_to_monomial","index_to_monomial","init","init","into","into","max_computed_degree","max_computed_degree","min_degree","min_degree","monomial_to_index","monomial_to_index","monomial_to_index","multiply_monomial_by_polynomial","multiply_monomial_by_polynomial","multiply_monomials","multiply_monomials","multiply_polynomial_by_monomial","multiply_polynomial_by_monomial","multiply_polynomials","multiply_polynomials","new","new","poly","polynomial_generators_in_degree","polynomial_monomials","prime","repr_ext_generator","repr_poly_generator","set_monomial_degree","set_monomial_degree","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","valid","Adem","AdemAlgebra","AlgebraSpec","AlgebraType","BorrowAdem","BorrowMilnor","Milnor","MilnorAlgebra","SteenrodAlgebra","SteenrodAlgebraBorrow","SteenrodAlgebraT","a_multiply","adem_algebra","algebra","basis_element_from_string","basis_element_to_string","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","compute_basis","coproduct","decompose","decompose_basis_element","default_filtration_one_products","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dimension","dimension_unstable","dimension_unstable","dimension_unstable","dispatch_steenrod","drop","drop","drop","drop","element_from_bytes","element_is_zero","element_to_bytes","element_to_string","eq","equivalent","equivalent","equivalent","finalize_element","fmt","fmt","fmt","fmt","from","from","from","from","from_json","from_str","generating_relations","generator_to_string","generators","init","init","init","init","into","into","into","into","magic","milnor_algebra","multiply_basis_element_by_element","multiply_basis_element_by_element_unstable","multiply_basis_element_by_element_unstable","multiply_basis_element_by_element_unstable","multiply_basis_elements","multiply_basis_elements_unstable","multiply_basis_elements_unstable","multiply_basis_elements_unstable","multiply_element_by_basis_element","multiply_element_by_basis_element_unstable","multiply_element_by_basis_element_unstable","multiply_element_by_basis_element_unstable","multiply_element_by_element","multiply_element_by_element_unstable","multiply_element_by_element_unstable","multiply_element_by_element_unstable","new_pair_element","p","p_tilde","prefix","prime","profile","sigma_multiply","sigma_multiply_basis","steenrod_algebra","steenrod_algebra","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","MAX_XI_TAU","PartitionIterator","TruncatedPolynomialMonomialBasis","adem_relation_coefficient","gen_degrees","gens","inadmissible_pairs","initial","p","partition","parts","parts","parts_by_max","remaining","tau_degrees","xi_degrees","Field","prime","M","MilnorAlgebra","MilnorAlgebraT","MilnorBasisElement","MilnorProfile","PPart","PPartAllocation","PPartEntry","PPartMultiplier","ans","basis_element_to_index_map","basis_table","cols","degree","diag_num","diagonal","diagonal","excess_table","generic","init","m","milnor_algebra","multiplication_table","p","p","p_part","p_part","p_part","ppart_table","profile","q_part","q_part","r","rows","truncated","unstable_enabled","Algebra","FDModule","FPModule","FreeModule","GeneratorData","HomModule","Module","ModuleFailedRelationError","MuFreeModule","OperationGeneratorPair","QuotientModule","RealProjectiveSpace","SteenrodModule","SuspensionModule","TensorModule","UnstableFreeModule","ZeroModule","act_on_basis","actions","algebra","algebra","algebra","algebra","algebra","algebra","algebra","basis_element_to_opgen","basis_element_to_opgen","basis_element_to_opgen","basis_element_to_string","basis_list","block_structure","block_structures","block_structures","clear_bottom","dimension","end","finite_dimensional_module","finitely_presented_module","free_module","gen_deg","gen_deg_idx_to_internal_idx","gen_deg_idx_to_internal_idx","gen_deg_idx_to_internal_idx","gen_names","gen_names","gen_names","gen_names","generator_degree","generator_index","generator_to_index","generator_to_index","generator_to_index","generators","graded_dimension","hom_module","homomorphism","index_table","inner","left","map","max","max_computed_degree","min","min_degree","min_degree","min_degree","min_degree","min_degree","module","module_trait","name","name","name","name","name","num_gens","num_gens","num_gens","operation_degree","operation_index","quotient_module","relation","relations","right","rpn","shift","source","start","steenrod_module","subspaces","suspension_module","target","tensor_module","truncation","value","zero_module","zero_module","BlockStructure","GeneratorBasisEltPair","add_block","basis_element_to_block_idx","basis_index","blocks","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","generator_basis_elt_to_index","generator_degree","generator_index","generator_to_block","index_to_generator_basis_elt","init","init","into","into","new","total_dimension","try_from","try_from","try_into","try_into","type_id","type_id","FiniteDimensionalModule","act_on_basis","action","action_mut","actions","actions_to_json","add_generator","algebra","algebra","allocate_actions","basis_element_to_string","borrow","borrow_mut","check_validity","clone","clone_into","compute_basis","deref","deref_mut","dimension","drop","eq","equivalent","equivalent","equivalent","extend_actions","fmt","from","from","from_json","gen_names","graded_dimension","init","into","max_computed_degree","max_degree","min_degree","name","new","parse_action","set_action","set_basis_element_name","string_to_basis_element","test_equal","to_json","to_owned","to_string","try_from","try_into","type_id","zero_module","FPMIndexTable","FinitelyPresentedModule","act_on_basis","add_generators","add_relations","algebra","basis_element_to_string","borrow","borrow","borrow_mut","borrow_mut","compute_basis","deref","deref","deref_mut","deref_mut","dimension","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fp_idx_to_gen_idx","fp_idx_to_gen_idx","from","from","from_json","gen_idx_to_fp_idx","gen_idx_to_fp_idx","generators","generators","index_table","init","init","into","into","map","max_computed_degree","max_generator_degree","min_degree","min_degree","name","new","relations","to_string","try_from","try_from","try_into","try_into","type_id","type_id","zero_module","FreeModule","GeneratorData","MuFreeModule","OffsetIterator","OperationGeneratorPair","UnstableFreeModule","act","act_on_basis","add_generators","algebra","algebra","algebra","algebra","basis_element_to_opgen","basis_element_to_opgen","basis_element_to_opgen","basis_element_to_string","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","compute_basis","degree","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dimension","drop","drop","drop","drop","end","extend_by_zero","fmt","fmt","from","from","from","from","gen_deg","gen_deg","gen_deg_idx_to_internal_idx","gen_deg_idx_to_internal_idx","gen_deg_idx_to_internal_idx","gen_names","gen_names","gen_names","gen_names","generator_degree","generator_index","generator_offset","generator_to_index","generator_to_index","generator_to_index","index_to_op_gen","init","init","init","init","internal_generator_offset","into","into","into","into","into_iter","iter_gen_offsets","iter_gens","iter_slices","max_computed_degree","max_generator_degree","min_degree","min_degree","min_degree","min_degree","module","name","name","name","new","next","num_gens","num_gens","num_gens","number_of_gens_in_degree","offset","operation_degree","operation_generator_to_index","operation_index","slice_vector","start","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zero_module","HomModule","act_on_basis","algebra","algebra","basis_element_to_string","block_structures","borrow","borrow_mut","compute_basis","deref","deref_mut","dimension","drop","fmt","from","init","into","max_computed_degree","min_degree","new","source","source","target","target","to_string","try_from","try_into","type_id","FreeModuleHomomorphism","FullModuleHomomorphism","GenericZeroHomomorphism","HomPullback","IdentityHomomorphism","ModuleHomomorphism","MuFreeModuleHomomorphism","QuotientHomomorphism","QuotientHomomorphismSource","Source","Target","UnstableFreeModuleHomomorphism","ZeroHomomorphism","apply","apply_quasi_inverse","apply_to_basis_element","auxiliary_data","compute_auxiliary_data_through_degree","degree_shift","degree_shift","degree_shift","degree_shift","degree_shift","degree_shift","f","f","free_module_homomorphism","full_module_homomorphism","generic_zero_homomorphism","get_matrix","get_partial_matrix","hom_pullback","identity_homomorphism","image","images","images","images","images","images","kernel","kernels","kernels","kernels","kernels","kernels","map","matrices","min_degree","min_degree","min_degree","min_degree","outputs","outputs","outputs","prime","quasi_inverse","quasi_inverses","quasi_inverses","quasi_inverses","quasi_inverses","quasi_inverses","quotient_homomorphism","s","s","source","source","source","source","source","source","source","t","target","target","target","target","target","target","target","zero_homomorphism","FreeModuleHomomorphism","MuFreeModuleHomomorphism","UnstableFreeModuleHomomorphism","add_generators_from_big_vector","add_generators_from_matrix_rows","add_generators_from_rows","add_generators_from_rows_ooo","apply_to_basis_element","apply_to_generator","borrow","borrow_mut","compute_auxiliary_data_through_degree","degree_shift","degree_shift","degree_shift","degree_shift","degree_shift","deref","deref_mut","differential_density","drop","extend_by_zero","from","hom_k","image","images","images","images","init","into","kernel","kernels","kernels","kernels","min_degree","min_degree","min_degree","min_degree","new","next_degree","ooo_outputs","output","outputs","outputs","outputs","quasi_inverse","quasi_inverses","quasi_inverses","quasi_inverses","set_image","set_kernel","set_quasi_inverse","source","source","source","source","target","target","target","target","try_from","try_into","type_id","zero_homomorphism","FullModuleHomomorphism","apply_to_basis_element","borrow","borrow_mut","clone","clone_into","compute_auxiliary_data_through_degree","degree_shift","degree_shift","deref","deref_mut","drop","from","from","from_matrices","identity_homomorphism","image","images","init","into","kernel","kernels","matrices","new","quasi_inverse","quasi_inverses","replace_source","replace_target","source","source","target","target","to_owned","try_from","try_into","type_id","zero_homomorphism","GenericZeroHomomorphism","apply_to_basis_element","borrow","borrow_mut","degree_shift","degree_shift","deref","deref_mut","drop","from","init","into","new","source","source","target","target","try_from","try_into","type_id","zero_homomorphism","HomPullback","apply_to_basis_element","borrow","borrow_mut","compute_auxiliary_data_through_degree","degree_shift","deref","deref_mut","drop","from","image","images","init","into","kernel","kernels","map","min_degree","new","quasi_inverse","quasi_inverses","source","source","target","target","try_from","try_into","type_id","QuotientHomomorphism","QuotientHomomorphismSource","apply_to_basis_element","apply_to_basis_element","borrow","borrow","borrow_mut","borrow_mut","degree_shift","degree_shift","deref","deref","deref_mut","deref_mut","drop","drop","f","f","from","from","init","init","into","into","new","new","s","s","source","source","t","target","target","try_from","try_from","try_into","try_into","type_id","type_id","Algebra","Module","ModuleFailedRelationError","act","act","act_by_element","act_by_element","act_by_element_on_basis","act_by_element_on_basis","act_on_basis","algebra","basis_element_to_string","borrow","borrow_mut","compute_basis","compute_basis","deref","deref_mut","dimension","drop","element_to_string","element_to_string","fmt","fmt","from","init","into","is_unit","is_unit","max_computed_degree","max_degree","max_degree","max_generator_degree","max_generator_degree","min_degree","prime","prime","relation","to_string","total_dimension","total_dimension","try_from","try_into","type_id","value","QuotientModule","act_on_basis","act_on_original_basis","algebra","basis_element_to_string","basis_list","borrow","borrow_mut","deref","deref_mut","dimension","drop","flush","fmt","from","init","into","max_computed_degree","max_degree","min_degree","module","new","old_basis_to_new","quotient","quotient_all","quotient_basis_elements","quotient_vectors","reduce","subspaces","to_string","truncation","try_from","try_into","type_id","zero_module","RPSpec","RealProjectiveSpace","act_on_basis","algebra","algebra","basis_element_to_string","borrow","borrow","borrow_mut","borrow_mut","clear_bottom","clear_bottom","coef_adem","coef_milnor","deref","deref","deref_mut","deref_mut","deserialize","dimension","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_json","init","init","into","into","max","max","max_computed_degree","max_degree","min","min","min_degree","new","to_json","to_string","try_from","try_from","try_into","try_into","type_id","type_id","zero_module","SteenrodModule","from_json","json","zero_module","from_json","SuspensionModule","act","act_by_element","act_by_element_on_basis","act_on_basis","algebra","basis_element_to_string","borrow","borrow_mut","compute_basis","deref","deref_mut","dimension","drop","element_to_string","fmt","from","init","inner","into","is_unit","max_computed_degree","max_degree","max_generator_degree","min_degree","new","prime","shift","to_string","total_dimension","try_from","try_into","type_id","zero_module","TensorModule","act","act_helper","act_on_basis","algebra","basis_element_to_string","block_structures","borrow","borrow_mut","compute_basis","deref","deref_mut","dimension","drop","fmt","from","init","into","left","max_computed_degree","max_degree","min_degree","new","offset","right","seek_module_num","to_string","try_from","try_into","type_id","zero_module","ZeroModule","zero_module","Element","MilnorPairElement","PairAlgebra","a_multiply","degree","element_from_bytes","element_is_zero","element_to_bytes","new_pair_element","ones","p_tilde","sigma_multiply_basis","twos","ys","SteenrodEvaluator","adem","adem_q","adem_to_milnor","adem_to_milnor_on_basis","borrow","borrow_mut","compute_basis","deref","deref_mut","dimension","drop","evaluate_algebra_adem","evaluate_algebra_milnor","evaluate_algebra_node","evaluate_basis_element","evaluate_module_adem","evaluate_p_or_b_list","from","init","into","milnor","milnor_to_adem","milnor_to_adem_on_basis","milnor_to_adem_on_basis_2","milnor_to_adem_on_basis_generic","new","prime","try_from","try_into","type_id","AList","AlgebraBasisElt","AlgebraNode","BasisElt","Bockstein","BocksteinOrSq","Err","IResult","ModuleNode","Ok","P","PList","Product","Q","Scalar","Sq","Sum","algebra_expr","algebra_factor","algebra_generator","algebra_term","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","brackets","clone","clone","clone","clone_into","clone_into","clone_into","convert_error","deref","deref","deref","deref_mut","deref_mut","deref_mut","digits","drop","drop","drop","fmt","fmt","fmt","fold_separated","from","from","from","init","init","init","into","into","into","module_expr","module_generator","module_term","p_or_sq","parse_algebra","parse_module","scalar","space","to_adem_basis_elt","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"algebra"],[89,"algebra::adem_algebra"],[108,"algebra::algebra"],[134,"algebra::algebra::adem_algebra"],[262,"algebra::algebra::algebra_trait"],[304,"algebra::algebra::bialgebra_trait"],[307,"algebra::algebra::combinatorics"],[359,"algebra::algebra::field"],[390,"algebra::algebra::milnor_algebra"],[607,"algebra::algebra::pair_algebra"],[642,"algebra::algebra::polynomial_algebra"],[719,"algebra::algebra::steenrod_algebra"],[844,"algebra::combinatorics"],[860,"algebra::field"],[862,"algebra::milnor_algebra"],[898,"algebra::module"],[996,"algebra::module::block_structure"],[1033,"algebra::module::finite_dimensional_module"],[1084,"algebra::module::finitely_presented_module"],[1138,"algebra::module::free_module"],[1254,"algebra::module::hom_module"],[1282,"algebra::module::homomorphism"],[1362,"algebra::module::homomorphism::free_module_homomorphism"],[1426,"algebra::module::homomorphism::full_module_homomorphism"],[1463,"algebra::module::homomorphism::generic_zero_homomorphism"],[1484,"algebra::module::homomorphism::hom_pullback"],[1512,"algebra::module::homomorphism::quotient_homomorphism"],[1551,"algebra::module::module_trait"],[1596,"algebra::module::quotient_module"],[1631,"algebra::module::rpn"],[1683,"algebra::module::steenrod_module"],[1687,"algebra::module::steenrod_module::json"],[1688,"algebra::module::suspension_module"],[1722,"algebra::module::tensor_module"],[1753,"algebra::module::zero_module"],[1755,"algebra::pair_algebra"],[1769,"algebra::steenrod_evaluator"],[1800,"algebra::steenrod_parser"],[1879,"core::option"],[1880,"alloc::string"],[1881,"once"],[1882,"alloc::vec"],[1883,"serde_json::value"],[1884,"bivec"],[1885,"anyhow"],[1886,"core::ops::function"],[1887,"fp::vector::vector_generic"],[1888,"fp::prime::primes_generic"],[1889,"std::io::error"],[1890,"std::io"],[1891,"core::fmt"],[1892,"core::hash"],[1893,"core::iter::traits::iterator"],[1894,"core::result"],[1895,"core::any"],[1896,"serde::de"],[1897,"serde::ser"],[1898,"core::marker"],[1899,"alloc::sync"],[1900,"core::ops::range"],[1901,"fp::matrix::subspace"],[1902,"fp::matrix::quasi_inverse"],[1903,"fp::matrix::matrix_inner"],[1904,"alloc::collections::btree::map"],[1905,"nom::error"],[1906,"nom::internal"],[1907,"core::str::traits"],[1908,"core::clone"]],"i":[69,0,68,0,0,0,0,33,33,0,0,69,0,68,0,0,0,0,0,0,0,0,0,0,1,0,4,3,23,4,11,3,23,0,4,11,15,15,17,67,4,19,20,0,3,3,23,67,11,11,0,11,17,17,3,23,12,0,22,0,0,12,3,23,20,4,19,20,20,20,3,23,0,67,11,11,23,4,11,52,23,11,11,32,0,0,3,23,67,0,0,0,42,42,0,1,3,3,34,34,3,3,3,3,3,34,34,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,42,0,3,1,3,3,3,3,3,3,3,3,34,3,34,42,3,34,42,34,34,3,3,3,3,3,3,3,34,3,34,42,3,34,42,3,3,3,3,3,34,42,3,3,3,34,34,34,34,3,34,3,3,3,34,34,42,3,34,42,3,3,3,3,3,3,3,3,3,3,3,3,3,3,34,3,34,42,3,34,42,34,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,34,3,3,3,34,3,0,3,3,34,3,34,3,3,34,42,3,34,42,3,34,42,3,0,0,0,0,4,4,4,17,4,4,4,19,20,4,4,17,17,17,17,4,4,4,4,20,19,19,4,19,20,4,4,20,19,19,4,4,20,19,19,4,4,4,0,15,15,0,0,0,0,0,21,0,21,51,21,51,21,51,21,51,21,51,21,51,21,21,21,21,21,0,21,51,51,21,21,51,51,51,21,51,51,21,51,21,21,51,21,51,51,0,21,51,21,51,21,51,0,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,60,0,0,0,0,0,0,0,0,0,0,23,60,23,23,23,23,23,23,23,23,60,55,53,56,57,23,60,55,53,56,57,53,53,53,60,56,23,53,23,23,23,23,23,23,55,53,56,57,23,53,23,60,55,53,56,57,23,60,55,53,56,57,55,60,60,57,23,23,23,23,23,60,55,53,56,57,23,23,23,55,53,55,55,55,53,53,53,53,23,23,23,55,53,53,56,56,23,60,55,53,56,57,53,23,23,23,23,23,23,23,23,55,53,23,56,56,23,60,55,53,56,57,60,56,23,60,55,53,56,57,60,60,55,55,55,57,23,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,60,23,23,60,60,23,60,55,53,57,23,23,23,23,23,60,23,23,23,55,53,0,60,56,60,55,23,53,23,53,56,55,23,23,23,60,55,53,56,57,23,60,55,53,56,57,23,60,55,53,56,57,23,60,56,57,57,0,64,0,0,0,64,0,0,127,127,127,127,127,127,64,64,64,64,64,127,127,127,64,127,64,64,64,64,0,127,127,127,127,0,127,0,0,0,11,67,12,67,12,67,67,11,11,11,12,67,67,12,67,12,67,12,67,67,67,67,67,11,11,67,67,11,11,11,67,12,67,11,11,12,67,12,67,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,67,12,67,11,11,11,11,11,11,11,67,67,67,12,67,12,67,12,67,69,68,0,0,33,33,69,68,0,0,0,68,68,70,68,68,33,68,69,70,33,68,69,70,69,69,68,68,68,68,68,33,68,69,70,33,68,69,70,70,68,68,68,68,0,33,68,69,70,68,68,68,68,69,69,69,69,68,68,69,69,70,33,68,69,70,68,69,68,68,68,33,68,69,70,33,68,69,70,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,70,68,68,68,70,68,68,32,68,69,68,69,33,68,69,69,70,33,68,68,68,69,70,33,68,69,70,0,0,0,0,21,21,0,51,21,51,21,51,21,51,0,0,0,52,60,0,0,0,0,0,0,0,0,60,23,23,60,53,60,60,57,23,23,60,57,22,23,23,60,55,53,57,23,23,55,53,60,60,55,23,72,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,78,72,78,81,128,82,108,88,81,128,82,72,106,0,88,112,108,72,86,0,0,0,86,81,128,82,78,81,128,82,83,83,81,128,82,80,78,0,0,80,111,112,80,108,72,108,72,80,81,128,82,106,0,78,80,81,128,82,81,128,82,83,83,0,79,80,112,0,111,88,86,0,106,0,88,0,106,79,0,74,0,0,75,75,76,75,76,75,76,75,76,75,76,75,76,75,76,75,76,75,75,76,76,75,75,76,75,76,75,75,75,76,75,76,75,76,75,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,0,0,80,80,80,80,80,129,80,129,80,80,129,80,129,80,80,129,80,80,80,80,80,80,80,129,129,80,80,80,129,80,80,80,129,80,129,80,80,80,80,80,80,80,80,80,80,129,80,129,80,129,80,80,0,0,0,0,0,0,82,82,82,82,81,128,82,81,128,82,82,82,86,87,83,82,86,87,83,83,83,82,87,82,86,87,83,82,86,87,83,82,82,86,87,83,86,82,82,83,82,86,87,83,86,87,81,128,82,82,81,128,82,83,83,82,81,128,82,82,82,86,87,83,82,82,86,87,83,87,82,82,82,82,82,82,81,128,82,87,81,128,82,82,87,81,128,82,82,87,83,82,83,82,86,83,82,82,86,87,83,82,86,87,83,82,86,87,83,82,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,0,0,0,0,0,0,0,0,0,91,91,0,0,91,91,91,91,91,91,103,130,98,100,101,104,105,0,0,0,91,91,0,96,91,103,130,98,100,102,91,103,130,98,100,102,102,100,91,103,130,98,103,130,98,91,91,103,130,98,100,102,0,104,105,91,103,130,98,100,101,102,104,91,103,130,98,100,101,102,97,0,0,0,98,98,98,98,98,98,98,98,98,98,98,103,130,98,98,98,98,98,98,98,98,98,103,130,98,98,98,98,103,130,98,98,103,130,98,98,98,98,98,103,130,98,98,103,130,98,98,98,98,98,103,130,98,98,103,130,98,98,98,98,98,0,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,0,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,0,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,0,0,104,105,104,105,104,105,104,105,104,105,104,105,104,105,104,105,104,105,104,105,104,105,104,105,104,105,104,105,104,104,105,104,105,104,105,104,105,72,0,0,72,72,72,72,72,72,72,72,72,79,79,72,72,79,79,72,79,72,72,79,79,79,79,79,72,72,72,72,72,72,72,72,72,72,79,79,72,72,79,79,79,79,0,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,0,0,108,108,108,108,108,109,108,109,108,109,0,0,108,109,108,109,109,108,108,109,108,108,108,108,108,109,108,109,108,108,109,108,109,108,109,108,108,108,109,108,108,108,108,108,109,108,109,108,109,108,0,0,0,110,0,0,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,0,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,0,74,64,0,0,64,127,64,64,64,64,127,64,64,127,127,0,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,115,0,0,114,117,0,131,0,0,131,115,115,114,115,114,117,114,0,0,0,0,115,114,117,115,114,117,0,115,114,117,115,114,117,0,115,114,117,115,114,117,0,115,114,117,115,114,117,0,115,114,117,115,114,117,115,114,117,0,0,0,0,0,0,0,0,117,115,114,117,115,114,117,115,114,117,115,114,117],"f":"````````````````````````{{{d{b}}}{{d{f}}}}`{{{d{h}}{d{j}}}{{Ab{{A`{ln}}}}}}``{{{d{h}}ln}Ad}{{{d{Af}}}{{d{{Aj{Ah}}}}}}```{{{d{h}}l}Al}{{{d{Af}}l}Al}{{{d{An}}ln}{{B`{{A`{lnln}}}}}}{{{d{An}}ln}{{B`{{A`{ln}}}}}}{{{d{Bb}}ln}{{B`{{A`{Bd{A`{ln}}{A`{ln}}}}}}}}`{{{d{h}}l}n}{{{d{Bf}}ll}n}{{{d{Bh}}ll}n}`````{{{d{Af}}l}n}{{{d{Af}}}{{d{Bj}}}}`{{{d{Af}}ln}{{Ab{n}}}}{{{d{Bb}}l}{{B`{{B`{{A`{Bd{A`{ln}}{A`{ln}}}}}}}}}}{{{d{Bb}}l}{{B`{n}}}}````{{{d{Bl}}}{{d{Bn}}}}`{{{d{C`}}}{{A`{{Cb{n}}{Cb{{B`{Ad}}}}{`{{Ch{{d{j}}}{{Cd{{Cf{{A`{ln}}}}}}}}}}}}}}```{{{d{Bh}}CjBdlnlCll}Al}{{{d{h}}CjBdlnln}Al}{{{d{Bf}}CjBdlnlnl}Al}{{{d{Bh}}CjBdlnlnl}Al}{{{d{Bh}}CjBdlCllnl}Al}{{{d{Bh}}CjBdlCllCll}Al}````<;`{{{d{h}}}Cn}{{{d{Af}}}Cn}``{{{d{Af}}ln}Ad}{{{d{Af}}ln}{{A`{AdBd}}}}{{{d{D`}}}Db}```````````{{{d{b}}}{{d{f}}}}````````````````````````````````````````````{{{d{f}}CjBdlCll{d{c}}}Al{}}1{{{d{f}}}{{d{f}}}}{{{d{f}}ln}{{d{Dd}}}}{{{d{f}}{d{j}}}{{Ab{{A`{ln}}}}}}{{{d{f}}{d{Dd}}}n}`{{{d{f}}ln}Ad}`{{{d{f}}BdBd}{{A`{ln}}}}`{{{d{c}}}{{d{e}}}{}{}}00{{{d{Dfc}}}{{d{Dfe}}}{}{}}00{{{d{Dd}}}Dd}{{{d{c}}{d{Dfe}}}Al{}{}}{{{d{f}}l}Al}{{{d{f}}ln}{{B`{{A`{lnln}}}}}}{{{d{f}}ln}{{B`{{A`{ln}}}}}}{{{d{f}}ln}{{B`{{A`{Bd{A`{ln}}{A`{ln}}}}}}}}00{{{d{f}}}{{B`{{A`{Adln}}}}}}`{n{{d{c}}}{}}00{n{{d{Dfc}}}{}}00{{{d{f}}l}n}{{{d{f}}ll}n}{{{d{c}}ll}n{}}0{nAl}00{{{d{f}}l{d{Dfc}}}{{Dh{e}}}Dj{}}{{{d{c}}}Dl{}}{{{d{f}}{d{c}}{d{Dfe}}}{{Dh{Al}}}{}Dn}{{{d{Dd}}{d{Dd}}}Dl}{{{d{c}}{d{e}}}Dl{}{}}00`{{{d{Dd}}Cn}Bd}`{{{d{Dfc}}}Al{}}{{{d{f}}{d{DfE`}}}Eb}{{{d{Dd}}{d{DfE`}}}Eb}0{{{d{Ed}}{d{DfE`}}}Eb}{cc{}}00{{{d{f}}l}Al}00000{{{d{f}}{d{{Eh{{B`{Ef}}}}}}lln}Ef}10{{{d{f}}l}{{B`{{B`{{A`{Bd{A`{ln}}{A`{ln}}}}}}}}}}{{{d{f}}ln}Ad}{{{d{f}}l}{{B`{n}}}}{{{d{f}}}Dl}`{{{d{Dd}}{d{Dfc}}}AlEj}{{}n}00{ce{}{}}00{{{d{Dd}}}{{`{{En{}{{El{Ed}}}}}}}}{{{d{f}}}Bd}{{{d{f}}CjBd{d{DfDd}}l}Al}{{{d{f}}Cj{d{DfDd}}lllDl}Al}{{{d{f}}CjBd{d{DfDd}}lllDl}Al}`{{{d{c}}CjBdlnlCll}Al{}}0{{{d{f}}CjBdlnln}Al}{{{d{c}}CjBdlnlnl}Al{}}{{{d{f}}CjBdlnlnl}Al}1{{{d{c}}CjBdlCllnl}Al{}}0{{{d{c}}CjBdlCllCll}Al{}}02{{CnDl}f}{{{d{f}}l}c{}}``{{{d{f}}}n}{{{d{f}}}{{d{j}}}}{{{d{f}}}Cn}`{{{d{f}}}l}{{{d{Df{B`{c}}}}F`}Al{}}{{{d{f}}{d{Dfc}}Bdlnln}Al{}}{{{d{f}}{d{DfDd}}BdBd}n}{{{d{c}}}e{}{}}{{{d{c}}}Ad{}}0{{{d{f}}{d{Dd}}}{{Ab{n}}}}{c{{Fb{e}}}{}{}}00000{{{d{c}}}Fd{}}00`````{{{d{h}}{d{j}}}{{Ab{{A`{ln}}}}}}{{{d{h}}ln}Ad}{{{d{h}}l}Al}{{{d{Bb}}ln}{{B`{{A`{Bd{A`{ln}}{A`{ln}}}}}}}}{{{d{h}}}{{B`{{A`{Adln}}}}}}0{{{d{h}}l}n}{{{d{Bf}}ll}n}{{{d{Bh}}ll}n}{{{d{h}}lCl}Ad}0{{{d{Bb}}l}{{B`{{B`{{A`{Bd{A`{ln}}{A`{ln}}}}}}}}}}{{{d{Bb}}ln}Ad}0{{{d{Bb}}l}{{B`{n}}}}{{{d{h}}}Bd}0{{{d{h}}CjBdlnlCl}Al}0{{{d{Bh}}CjBdlnlCll}Al}{{{d{Bf}}CjBdlnlCll}Al}0{{{d{h}}CjBdlnln}Al}{{{d{Bf}}CjBdlnlnl}Al}{{{d{Bh}}CjBdlnlnl}Al}{{{d{h}}CjBdlClln}Al}0{{{d{Bh}}CjBdlCllnl}Al}{{{d{Bf}}CjBdlCllnl}Al}0{{{d{h}}CjBdlCllCl}Al}0{{{d{Bh}}CjBdlCllCll}Al}{{{d{Bf}}CjBdlCllCll}Al}0{{{d{h}}}{{d{j}}}}0{{{d{h}}}Cn}`{{{d{An}}ln}{{B`{{A`{lnln}}}}}}{{{d{An}}ln}{{B`{{A`{ln}}}}}}`````{{{d{Bj}}ln}Al}{{CnBdBdBdBdBd}Bd}{{{d{c}}}{{d{e}}}{}{}}0{{{d{Dfc}}}{{d{Dfe}}}{}{}}0{n{{d{c}}}{}}0{n{{d{Dfc}}}{}}0{nAl}0{cc{}}0{{{d{Bj}}ln}n}`{{{d{Bj}}l}n}0`{{CnDll}{{B`{{A`{BdBdBd}}}}}}{{}n}0`{{{d{Bj}}n}{{A`{ln}}}}{ce{}{}}00{c{{A`{eg}}}{}{}{}}{CnBj}{{lBd{d{{Eh{l}}}}}Ff}{{{d{DfFf}}}{{Ab{c}}}{}}``{{{d{Bj}}l}{{d{{B`{Ef}}}}}}````{{{d{DfFf}}}Dl}{Cn{{d{{Eh{l}}}}}}{c{{Fb{e}}}{}{}}000{{{d{c}}}Fd{}}02`{{{d{Fh}}{d{j}}}{{Ab{{A`{ln}}}}}}{{{d{Fh}}ln}Ad}{{{d{c}}}{{d{e}}}{}{}}{{{d{Dfc}}}{{d{Dfe}}}{}{}}{{{d{Fh}}l}Al}{{{d{Fh}}ln}{{B`{{A`{lnln}}}}}}{{{d{Fh}}ln}{{B`{{A`{ln}}}}}}{{{d{Fh}}}{{B`{{A`{Adln}}}}}}{n{{d{c}}}{}}{n{{d{Dfc}}}{}}{{{d{Fh}}l}n}{{{d{c}}ll}n{}}{nAl}{{{d{Fh}}lCl}Ad}{{{d{Fh}}{d{DfE`}}}Eb}{cc{}}{{}n}{ce{}{}}{{{d{c}}CjBdlnlCll}Al{}}{{{d{Fh}}CjBdlnln}Al}{{{d{c}}CjBdlnlnl}Al{}}{{{d{c}}CjBdlCllnl}Al{}}{{{d{c}}CjBdlCllCll}Al{}}{CnFh}{{{d{Fh}}}Cn}`{{{d{c}}}Ad{}}{c{{Fb{e}}}{}{}}0{{{d{c}}}Fd{}}````````````{{{d{Bn}}CjBdlCll{d{c}}}Al{}}`{{{d{Bn}}ln}{{d{Fj}}}}{{{d{Bn}}{d{j}}}{{Ab{{A`{ln}}}}}}{{{d{Bn}}{d{Fj}}}n}`{{{d{Bn}}ln}Ad}`{{{d{Bn}}BdFl}{{A`{ln}}}}{{{d{c}}}{{d{e}}}{}{}}00000{{{d{Dfc}}}{{d{Dfe}}}{}{}}00000{{{d{Fj}}}Fj}{{{d{Fj}}{d{DfFj}}}Al}{{{d{c}}{d{Dfe}}}Al{}{}}``{{{d{Bn}}l}Al}{{{d{DfFj}}Cn}Al}1{{{d{Bn}}ln}{{B`{{A`{lnln}}}}}}{{{d{Bn}}ln}{{B`{{A`{ln}}}}}}{{{d{Bn}}ln}{{B`{{A`{Bd{A`{ln}}{A`{ln}}}}}}}}00{{}Fn}{{}Fj}{{}G`}{{}Gb}{{{d{Bn}}}{{B`{{A`{Adln}}}}}}`{n{{d{c}}}{}}00000{n{{d{Dfc}}}{}}00000{c{{Fb{Fn}}}Gd}```{{{d{Bn}}l}n}{{{d{c}}ll}n{}}0{{{d{Bn}}ll}n}{nAl}00000{{{d{Bn}}l{d{Dfc}}}{{Dh{e}}}Dj{}}{{{d{c}}}Dl{}}{{{d{Bn}}{d{c}}{d{Dfe}}}{{Dh{Al}}}{}Dn}{{{d{Fn}}{d{Fn}}}Dl}{{{d{Fj}}{d{Fj}}}Dl}{{{d{c}}{d{e}}}Dl{}{}}00000{{{d{Fj}}Cn}Bd}`{{{d{Dfc}}}Al{}}{{{d{Bn}}{d{DfE`}}}Eb}{{{d{Fn}}{d{DfE`}}}Eb}{{{d{Fj}}{d{DfE`}}}Eb}0{{{d{G`}}{d{DfE`}}}Eb}0{cc{}}00000{{Gfl}Fj}{{{d{Bn}}l}Al}00{{{d{Bn}}l}{{B`{{B`{{A`{Bd{A`{ln}}{A`{ln}}}}}}}}}}{{{d{Bn}}ln}Ad}{{{d{Bn}}l}{{B`{n}}}}{{{d{Bn}}}Dl}`{{{d{Fn}}n}Fl}{{{d{Fj}}{d{Dfc}}}AlEj}{{{d{DfGf}}{d{{Eh{Fl}}}}}Dl}{{{d{G`}}n}{{d{c}}}{}}{{{d{DfG`}}n}{{d{Dfc}}}{}}{{}n}00000``{ce{}{}}00000{GhGb}1{{{d{Fn}}Dl}Dl}{{{d{Fn}}}Dl}0`{{{d{Bn}}}Bd}{{{d{Bl}}}{{d{Bn}}}}{{{d{Bn}}}{{d{Bn}}}}`{{{d{Bn}}CjBd{d{Fj}}{d{Fj}}}Al}{{{d{Bn}}CjBd{d{Fj}}lCl}Al}{{{d{Bn}}CjBd{d{Fj}}lClGb}Gb}{{{d{Bn}}CjBdlnlCl}Al}{{{d{c}}CjBdlnlCll}Al{}}0{{{d{Bn}}CjBdlnln}Al}{{{d{c}}CjBdlnlnl}Al{}}{{{d{Bn}}CjBdlnlnl}Al}1{{{d{c}}CjBdlCllnl}Al{}}0{{{d{Bn}}CjBdlCllCl}Al}{{{d{c}}CjBdlCllCll}Al{}}0{{{d{Bn}}{d{Fj}}Bd}{{B`{{A`{BdFj}}}}}}{{{d{Bn}}CjBd{d{Fj}}{d{Fj}}lGb}Gb}{{CnDl}Bn}{{Cn{d{Gf}}{d{Gf}}GbBdl}Gh}{{{d{Bn}}l}c{}}{{CnFnDl}Bn}{{{d{DfGh}}}{{Ab{Bd}}}}{{{d{Gh}}FlFlFl}Fl}`````{{{d{Bn}}}n}{{{d{Bn}}l}{{d{{Eh{Gf}}}}}}`{{{d{Bn}}}{{d{j}}}}{{{d{Bn}}}Cn}{{{d{Gh}}}Cn}{{{d{Bn}}}{{d{Fn}}}}`{{{d{Bn}}}l}``{{}Bd}`{{{d{DfG`}}nn}Al}`{{{d{Fn}}c}FbGj}{{{d{Bn}}{d{Dfc}}Bdlnln}Al{}}{{{d{c}}}e{}{}}{{{d{c}}}Ad{}}00`{{{d{Bn}}{d{Fj}}}{{Ab{n}}}}{{{d{Bn}}BdFl}{{Ab{{A`{ln}}}}}}{c{{Fb{e}}}{}{}}00000000000{{{d{c}}}Fd{}}00000`{{{d{DfGh}}}Dl}{{nn}G`}{nGb}{cAl{{Gl{Gb}{{Cd{Gb}}}}}}`````{{{d{{H`{}{{Gn{c}}}}}}CjBdlCll{d{c}}}Al{HbHd}}{{{d{Bn}}{d{Fj}}nnc}Al{{Gl{{d{Ef}}}}}}{{{d{Bn}}{d{Fj}}nn}Ef}{{{d{c}}}{{d{e}}}{}{}}{{{d{Dfc}}}{{d{Dfe}}}{}{}}`{n{{d{c}}}{}}{n{{d{Dfc}}}{}}{nAl}{{{d{{H`{}{{Gn{c}}}}}}l{d{Dfe}}}{{Dh{c}}}{HbHd}Dj}{{{d{c}}}Dl{}}{{{d{{H`{}{{Gn{c}}}}}}{d{c}}{d{Dfe}}}{{Dh{Al}}}{HbHd}Dn}{{{d{Dfc}}}Al{}}0{cc{}}{{}n}{ce{}{}}{{{d{{H`{}{{Gn{c}}}}}}l}c{HbHd}}`{{{d{{H`{}{{Gn{c}}}}}}}n{HbHd}}{{{d{{H`{}{{Gn{c}}}}}}{d{Dfc}}BdlCllCl}Al{HbHd}}0{{{d{{H`{}{{Gn{c}}}}}}{d{Dfc}}Bdlnln}Al{HbHd}}`{c{{Fb{e}}}{}{}}0`{{{d{c}}}Fd{}}`````{{{d{Af}}}{{d{{Aj{Ah}}}}}}{{{d{c}}}{{d{e}}}{}{}}0{{{d{Dfc}}}{{d{Dfe}}}{}{}}0{{{d{Hf}}}Hf}{{{d{c}}{d{Dfe}}}Al{}{}}{{{d{Af}}l}Al}00{{}Ah}`{n{{d{c}}}{}}0{n{{d{Dfc}}}{}}0{nAl}0{{{d{Hf}}{d{Hf}}}Dl}{{{d{c}}{d{e}}}Dl{}{}}00`{{{d{Af}}l}n}{{{d{Af}}}{{d{Bj}}}}{{{d{Hf}}{d{DfE`}}}Eb}0{{{d{Af}}{d{DfEf}}{d{Ef}}}Al}0{{{d{Af}}ln}{{Ab{n}}}}{cc{}}0{{{d{Hf}}{d{Dfc}}}AlEj}{{{d{Af}}ln}{{d{Hf}}}}0`{{}n}0{ce{}{}}0{{{d{Af}}}l}000{{{d{Af}}{d{Hf}}}n}0`{{{d{Af}}{d{DfEf}}Bd{d{Hf}}l{d{Ef}}}Al}0{{{d{Af}}{d{DfHf}}{d{Hf}}}{{Ab{Bd}}}}0{{{d{Af}}{d{DfEf}}Bdl{d{Ef}}{d{Hf}}}Al}0{{{d{Af}}{d{DfEf}}Bdl{d{Ef}}l{d{Ef}}}Al}0{CnHf}{{}Ah}`{{{d{Af}}l}n}{{{d{Af}}}{{d{Bj}}}}{{{d{Af}}}Cn}{{{d{Af}}ln}Ad}{{{d{Af}}ln}{{A`{AdBd}}}}{{{d{Af}}{d{DfHf}}l}Al}0{{{d{c}}}e{}{}}{{{d{c}}}Ad{}}{c{{Fb{e}}}{}{}}000{{{d{c}}}Fd{}}0````````````{{{d{Hh}}CjBdlCll{d{c}}}Al{}}{{{d{c}}}{{d{f}}}{}}`{{{d{Hh}}{d{j}}}{{Ab{{A`{ln}}}}}}{{{d{Hh}}ln}Ad}{{{d{c}}}{{d{e}}}{}{}}000{{{d{Dfc}}}{{d{Dfe}}}{}{}}000{{{d{Hj}}}Hj}{{{d{c}}{d{Dfe}}}Al{}{}}{{{d{Hh}}l}Al}{{{d{Hh}}ln}{{B`{{A`{lnln}}}}}}{{{d{Hh}}ln}{{B`{{A`{ln}}}}}}{{{d{Hh}}ln}{{B`{{A`{Bd{A`{ln}}{A`{ln}}}}}}}}{{{d{Hh}}}{{B`{{A`{Adln}}}}}}{n{{d{c}}}{}}000{n{{d{Dfc}}}{}}000{c{{Fb{Hl}}}Gd}{{{d{Hh}}l}n}{{{d{c}}ll}n{}}0{{{d{Hh}}ll}n}`{nAl}000{{{d{Hh}}l{d{Dfc}}}{{Dh{e}}}Dj{}}{{{d{c}}}Dl{}}{{{d{Hh}}{d{c}}{d{Dfe}}}{{Dh{Al}}}{}Dn}{{{d{Hh}}lCl}Ad}{{{d{Hj}}{d{Hj}}}Dl}{{{d{c}}{d{e}}}Dl{}{}}00{{{d{Dfc}}}Al{}}{{{d{Hh}}{d{DfE`}}}Eb}{{{d{Hj}}{d{DfE`}}}Eb}0{{{d{Hl}}{d{DfE`}}}Eb}{cc{}}000{{{d{C`}}HjDl}{{Cf{Hh}}}}{{{d{j}}}{{Fb{Hjc}}}{}}{{{d{Hh}}l}{{B`{{B`{{A`{Bd{A`{ln}}{A`{ln}}}}}}}}}}{{{d{Hh}}ln}Ad}{{{d{Hh}}l}{{B`{n}}}}{{}n}000{ce{}{}}000{{{d{Hh}}}Bd}{{{d{c}}}{{d{Bn}}}{}}{{{d{Hh}}CjBdlnlCl}Al}{{{d{c}}CjBdlnlCll}Al{}}{{{d{Hh}}CjBdlnlCll}Al}1{{{d{Hh}}CjBdlnln}Al}{{{d{c}}CjBdlnlnl}Al{}}{{{d{Hh}}CjBdlnlnl}Al}1{{{d{Hh}}CjBdlClln}Al}{{{d{c}}CjBdlCllnl}Al{}}{{{d{Hh}}CjBdlCllnl}Al}1{{{d{Hh}}CjBdlCllCl}Al}{{{d{Hh}}CjBdlCllCll}Al}{{{d{c}}CjBdlCllCll}Al{}}0{{{d{Hh}}l}c{}}`{{{d{Hh}}}n}{{{d{Hh}}}{{d{j}}}}{{{d{Hh}}}Cn}`{{{d{Hh}}{d{Dfc}}BdlCllCl}Al{}}{{{d{Hh}}{d{Dfc}}Bdlnln}Al{}}{{{d{D`}}}Db}{{{d{Hh}}}Db}{{{d{c}}}e{}{}}{{{d{c}}}Ad{}}0{c{{Fb{e}}}{}{}}0{{{d{j}}}{{Fb{Hjc}}}{}}1111{{{d{Hh}}}{{Fb{{d{f}}c}}}{}}{{{d{Hh}}}{{Fb{{d{Bn}}c}}}{}}33{{{d{c}}}Fd{}}000```{{CnBdBdBdBdBd}Bd}``{{CnDll}{{B`{{A`{BdBdBd}}}}}}```````{Cn{{d{{Eh{l}}}}}}0```````````````````````{{{d{Bl}}}{{d{Bn}}}}```````````````````````````````{{{d{{I`{}{{Hn{c}}}}}}CjBdlnln}Alh}`{{{d{{I`{}{{Hn{c}}}}}}}{{Ib{c}}}h}`````````{{{d{{I`{}{{Hn{c}}}}}}ln}Adh}`````{{{d{{I`{}{{Hn{c}}}}}}l}nh}``````````````````````````{{{d{{I`{}{{Hn{c}}}}}}}lh}`0````````````````````````````````{{{Ib{c}}l}Id{}}``{{{d{If}}CjBdlnCl}Al}```{{{d{c}}}{{d{e}}}{}{}}0{{{d{Dfc}}}{{d{Dfe}}}{}{}}0{n{{d{c}}}{}}0{n{{d{Dfc}}}{}}0{nAl}0{{{d{Ih}}{d{DfE`}}}Eb}{{{d{If}}{d{DfE`}}}Eb}{cc{}}0{{{d{If}}lnn}n}``{{{d{If}}ln}{{Ij{n}}}}{{{d{If}}n}{{d{Ih}}}}{{}n}0{ce{}{}}0{{{d{{Cb{{B`{n}}}}}}}If}{{{d{If}}}n}{c{{Fb{e}}}{}{}}000{{{d{c}}}Fd{}}0`{{{d{{Il{c}}}}CjBdlnln}Alh}{{{d{{Il{c}}}}lnln}{{d{Ef}}}h}{{{d{Df{Il{c}}}}lnln}{{d{DfEf}}}h}`{{{d{{Il{c}}}}}C`Bb}{{{d{Df{Il{c}}}}lAd}Alh}{{{d{{Il{c}}}}}{{Ib{e}}}h{}}`{{{d{{Ib{c}}}}{d{{Cb{n}}}}}{{Cb{{Cb{{B`{{B`{Ef}}}}}}}}}h}{{{d{{Il{c}}}}ln}Adh}{{{d{c}}}{{d{e}}}{}{}}{{{d{Dfc}}}{{d{Dfe}}}{}{}}{{{d{{Il{c}}}}ll}{{Fb{AlIn}}}Bb}{{{d{{Il{c}}}}}{{Il{c}}}h}{{{d{c}}{d{Dfe}}}Al{}{}}{{{d{{Il{c}}}}l}Alh}{n{{d{c}}}{}}{n{{d{Dfc}}}{}}{{{d{{Il{c}}}}l}nh}{nAl}{{{d{{Il{c}}}}{d{{Il{c}}}}}Dlh}{{{d{c}}{d{e}}}Dl{}{}}00{{{d{Df{Il{c}}}}ll}AlBb}{{{d{{Il{c}}}}{d{DfE`}}}Ebh}{cc{}}{{{d{c}}}IlI`}{{{Ib{c}}{d{C`}}}{{Cf{{Il{c}}}}}Bb}``{{}n}{ce{}{}}{{{d{{Il{c}}}}}lh}{{{d{{Il{c}}}}}{{Ab{l}}}h}1`{{{Ib{c}}Ad{Cb{n}}}{{Il{c}}}h}{{{d{Df{Il{c}}}}e{d{j}}Dl}{{Cf{Al}}}Bb{{Ch{{d{j}}}{{Cd{{Cf{{A`{ln}}}}}}}}}}{{{d{Df{Il{c}}}}lnln{d{{Eh{Bd}}}}}Alh}{{{d{Df{Il{c}}}}lnAd}Alh}{{{d{{Il{c}}}}{d{j}}}{{Ab{{A`{ln}}}}}h}{{{d{{Il{c}}}}{d{{Il{c}}}}}{{Fb{AlAd}}}h}{{{d{{Il{c}}}}{d{DfC`}}}AlBb}{{{d{c}}}e{}{}}{{{d{c}}}Ad{}}{c{{Fb{e}}}{}{}}0{{{d{c}}}Fd{}}{{{Ib{c}}l}{{Il{c}}}h}``{{{d{{J`{c}}}}CjBdlnln}Alh}{{{d{Df{J`{c}}}}l{B`{Ad}}}Alh}{{{d{Df{J`{c}}}}l{B`{Ef}}}Alh}{{{d{{J`{c}}}}}{{Ib{c}}}h}{{{d{{J`{c}}}}ln}Adh}{{{d{c}}}{{d{e}}}{}{}}0{{{d{Dfc}}}{{d{Dfe}}}{}{}}0{{{d{{J`{c}}}}l}Alh}{n{{d{c}}}{}}0{n{{d{Dfc}}}{}}0{{{d{{J`{c}}}}l}nh}{nAl}0{{{d{{J`{c}}}}{d{{J`{c}}}}}Dlh}{{{d{c}}{d{e}}}Dl{}{}}00{{{d{{J`{c}}}}{d{DfE`}}}Ebh}{{{d{{J`{c}}}}ln}nh}`{cc{}}0{{{Ib{c}}{d{C`}}}{{Cf{{J`{c}}}}}h}{{{d{{J`{c}}}}ln}F`h}`{{{d{{J`{c}}}}}{{Ib{{Jb{c}}}}}h}``{{}n}0{ce{}{}}0`{{{d{{J`{c}}}}}lh}{{{d{{J`{c}}}}}{{Ab{l}}}h}1``{{{Ib{c}}Adl}{{J`{c}}}h}`{{{d{c}}}Ad{}}{c{{Fb{e}}}{}{}}000{{{d{c}}}Fd{}}0{{{Ib{c}}l}{{J`{c}}}h}``````{{{d{{Jd{c}}}}CjBdlnlCl}AlBh}{{{d{{Jd{c}}}}CjBdlnln}AlBh}{{{d{{Jd{c}}}}ln{Ab{{B`{Ad}}}}}AlBh}{{{d{{Jd{c}}}}}{{Ib{c}}}Bh}``````{{{d{{Jd{c}}}}ln}AdBh}{{{d{c}}}{{d{e}}}{}{}}000{{{d{Dfc}}}{{d{Dfe}}}{}{}}000{{{d{Jf}}}Jf}{{{d{c}}{d{Dfe}}}Al{}{}}{{{d{{Jd{c}}}}l}AlBh}`{n{{d{c}}}{}}000{n{{d{Dfc}}}{}}000{{{d{{Jd{c}}}}l}nBh}{nAl}000`4{{{d{{Jd{c}}}}{d{DfE`}}}EbBh}{{{d{Jf}}{d{DfE`}}}Eb}{cc{}}000`````{{{d{{Jd{c}}}}}{{d{{Jh{{B`{Ad}}}}}}}Bh}`````{{{d{{Jd{c}}}}lln}nBh}```{{{d{{Jd{c}}}}ln}{{d{Jf}}}Bh}{{}n}000{{{d{{Jd{c}}}}ln}nBh}{ce{}{}}0000{{{d{{Jd{c}}}}{Jj{l}}}{{`{{En{}{{El{Jl}}}}}}}Bh}{{{d{{Jd{c}}}}l}{{`{{En{}{{El{{A`{ln}}}}}}}}}Bh}{{{d{{Jd{c}}}}lCl}{{`{{En{}{{El{{A`{lnlCl}}}}}}}}}Bh}{{{d{{Jd{c}}}}}lBh}{{{d{{Jd{c}}}}}{{Ab{l}}}Bh}1```````{{{Ib{c}}Adl}{{Jd{c}}}Bh}{{{d{Df{Jn{ce}}}}}{{Ab{g}}}Bh{{En{}{{El{l}}}}}{}}```{{{d{{Jd{c}}}}l}nBh}``{{{d{{Jd{c}}}}lnln}nBh}`{{{d{{Jd{c}}}}llnCl}ClBh}`{{{d{c}}}e{}{}}{{{d{c}}}Ad{}}{c{{Fb{e}}}{}{}}0000000{{{d{c}}}Fd{}}000{{{Ib{c}}l}{{Jd{c}}}Bh}`{{{d{{K`{c}}}}CjBdlnln}AlI`}{{{d{{K`{c}}}}}{{Ib{e}}}I`{}}`{{{d{{K`{c}}}}ln}AdI`}`{{{d{c}}}{{d{e}}}{}{}}{{{d{Dfc}}}{{d{Dfe}}}{}{}}{{{d{{K`{c}}}}l}AlI`}{n{{d{c}}}{}}{n{{d{Dfc}}}{}}{{{d{{K`{c}}}}l}nI`}{nAl}{{{d{{K`{c}}}}{d{DfE`}}}EbI`}{cc{}}{{}n}{ce{}{}}{{{d{{K`{c}}}}}lI`}0{{{Ib{Jb}}{Ib{c}}}{{K`{c}}}I`}{{{d{{K`{c}}}}}{{Ib{Jb}}}I`}`{{{d{{K`{c}}}}}{{Ib{c}}}I`}`{{{d{c}}}Ad{}}{c{{Fb{e}}}{}{}}0{{{d{c}}}Fd{}}`````````````{{{d{{Kf{}{{Kb{c}}{Kd{e}}}}}}CjBdlCl}AlI`{{I`{}{{Hn{}}}}}}{{{d{{Kf{}{{Kb{c}}{Kd{e}}}}}}CjlCl}DlI`{{I`{}{{Hn{}}}}}}{{{d{{Kf{}{{Kb{c}}{Kd{e}}}}}}CjBdln}AlI`{{I`{}{{Hn{}}}}}}{{{d{{Kf{}{{Kb{c}}{Kd{e}}}}}}l}{{A`{KhKhKj}}}I`{{I`{}{{Hn{}}}}}}{{{d{{Kf{}{{Kb{c}}{Kd{e}}}}}}l}AlI`{{I`{}{{Hn{}}}}}}{{{d{{Kf{}{{Kb{c}}{Kd{e}}}}}}}lI`{{I`{}{{Hn{}}}}}}``````````{{{d{{Kf{}{{Kb{c}}{Kd{e}}}}}}Kll}AlI`{{I`{}{{Hn{}}}}}}{{{d{{Kf{}{{Kb{c}}{Kd{e}}}}}}l{d{{Eh{n}}}}}KnI`{{I`{}{{Hn{}}}}}}`{{{Ib{c}}}L`I`}{{{d{{Kf{}{{Kb{c}}{Kd{e}}}}}}l}{{Ab{{d{Kh}}}}}I`{{I`{}{{Hn{}}}}}}`````0```````4``````{{{d{{Kf{}{{Kb{c}}{Kd{e}}}}}}}CnI`{{I`{}{{Hn{}}}}}}{{{d{{Kf{}{{Kb{c}}{Kd{e}}}}}}l}{{Ab{{d{Kj}}}}}I`{{I`{}{{Hn{}}}}}}````````{{{d{{Kf{}{{Kb{c}}{Kd{e}}}}}}}{{Ib{c}}}I`{{I`{}{{Hn{}}}}}}```````{{{d{{Kf{}{{Kb{c}}{Kd{e}}}}}}}{{Ib{e}}}I`{{I`{}{{Hn{}}}}}}``````{{{Ib{c}}{Ib{e}}l}LbI`{{I`{}{{Hn{}}}}}}```{{{d{{Ld{c}}}}lCl}AlI`}{{{d{{Ld{c}}}}lKl}AlI`}{{{d{{Ld{c}}}}l{B`{Ef}}}AlI`}{{{d{{Ld{c}}}}l{B`{Ef}}}{{Ij{l}}}I`}{{{d{{Ld{c}}}}CjBdln}AlI`}{{{d{{Ld{c}}}}{d{DfEf}}Bdln}AlI`}{{{d{c}}}{{d{e}}}{}{}}{{{d{Dfc}}}{{d{Dfe}}}{}{}}{{{d{{Ld{c}}}}l}AlI`}{{{d{{Ld{c}}}}}lI`}0```{n{{d{c}}}{}}{n{{d{Dfc}}}{}}{{{d{{Ld{c}}}}l}LfI`}{nAl}5{cc{}}{{{d{{Ld{{Jd{c}}}}}}l}{{B`{{B`{Bd}}}}}Bh}{{{d{{Ld{c}}}}l}{{Ab{{d{Kh}}}}}I`}```{{}n}{ce{}{}}2```9```{{{Ib{Jd}}{Ib{c}}l}{{Ld{c}}}I`}:{{{d{{Ld{c}}}}}{{B`{l}}}I`}{{{d{{Ld{c}}}}ln}{{d{Ef}}}I`}```{{{d{{Ld{c}}}}l}{{Ab{{d{Kj}}}}}I`}```{{{d{{Ld{c}}}}l{Ab{Kh}}}AlI`}0{{{d{{Ld{c}}}}l{Ab{Kj}}}AlI`}{{{d{{Ld{c}}}}}{{Ib{e}}}I`{}}```0```{c{{Fb{e}}}{}{}}0{{{d{c}}}Fd{}}8`{{{d{{Lh{ce}}}}CjBdln}AlI`{{I`{}{{Hn{}}}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Dfc}}}{{d{Dfe}}}{}{}}{{{d{{Lh{ce}}}}}{{Lh{ce}}}I`{{I`{}{{Hn{}}}}}}{{{d{c}}{d{Dfe}}}Al{}{}}{{{d{{Lh{ce}}}}l}AlI`{{I`{}{{Hn{}}}}}}{{{d{{Lh{ce}}}}}lI`{{I`{}{{Hn{}}}}}}`{n{{d{c}}}{}}{n{{d{Dfc}}}{}}{nAl}{cc{}}{{{d{i}}}{{Lh{eg}}}h{{I`{}{{Hn{c}}}}}{{I`{}{{Hn{c}}}}}{{Kf{}{{Kb{e}}{Kd{g}}}}}}{{{Ib{e}}{Ib{g}}l{Cb{Kn}}}{{Lh{eg}}}h{{I`{}{{Hn{c}}}}}{{I`{}{{Hn{c}}}}}}{{{Ib{c}}}{{Lh{cc}}}I`}{{{d{{Lh{ce}}}}l}{{Ab{{d{Kh}}}}}I`{{I`{}{{Hn{}}}}}}`{{}n}{ce{}{}}2``{{{Ib{e}}{Ib{g}}l}{{Lh{eg}}}h{{I`{}{{Hn{c}}}}}{{I`{}{{Hn{c}}}}}}{{{d{{Lh{ce}}}}l}{{Ab{{d{Kj}}}}}I`{{I`{}{{Hn{}}}}}}`{{{Lh{eg}}{Ib{i}}}{{Lh{ig}}}h{{I`{}{{Hn{c}}}}}{{I`{}{{Hn{c}}}}}{{I`{}{{Hn{c}}}}}}{{{Lh{eg}}{Ib{i}}}{{Lh{ei}}}h{{I`{}{{Hn{c}}}}}{{I`{}{{Hn{c}}}}}{{I`{}{{Hn{c}}}}}}{{{d{{Lh{ce}}}}}{{Ib{g}}}I`{{I`{}{{Hn{}}}}}{}}`0`{{{d{c}}}e{}{}}{c{{Fb{e}}}{}{}}0{{{d{c}}}Fd{}}{{{Ib{c}}{Ib{e}}l}{{Lh{ce}}}I`{{I`{}{{Hn{}}}}}}`{{{d{{Lj{ce}}}}CjBdln}AlI`{{I`{}{{Hn{}}}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Dfc}}}{{d{Dfe}}}{}{}}{{{d{{Lj{ce}}}}}lI`{{I`{}{{Hn{}}}}}}`{n{{d{c}}}{}}{n{{d{Dfc}}}{}}{nAl}{cc{}}{{}n}{ce{}{}}{{{Ib{c}}{Ib{e}}l}{{Lj{ce}}}I`{{I`{}{{Hn{}}}}}}{{{d{{Lj{ce}}}}}{{Ib{g}}}I`{{I`{}{{Hn{}}}}}{}}`0`>>=1`{{{d{{Ll{c}}}}CjBdln}AlI`};:{{{d{{Ll{c}}}}l}AlI`}{{{d{{Ll{c}}}}}lI`}:987{{{d{{Ll{c}}}}l}{{Ab{{d{Kh}}}}}I`}`760``1{{{Ib{{K`{c}}}}{Ib{{K`{c}}}}{Ib{{Ln{Jb}}}}}{{Ll{c}}}I`}{{{d{{Ll{c}}}}l}{{Ab{{d{Kj}}}}}I`}`{{{d{{Ll{c}}}}}{{Ib{e}}}I`{}}`0`{c{{Fb{e}}}{}{}}0{{{d{c}}}Fd{}}``{{{d{{M`{c}}}}CjBdln}AlKf}{{{d{{Mb{c}}}}CjBdln}AlKf}{{{d{c}}}{{d{e}}}{}{}}0{{{d{Dfc}}}{{d{Dfe}}}{}{}}0{{{d{{M`{c}}}}}lKf}{{{d{{Mb{c}}}}}lKf}{n{{d{c}}}{}}0{n{{d{Dfc}}}{}}0{nAl}0``{cc{}}0{{}n}0{ce{}{}}0{{{Ib{c}}{Ib{Md}}{Ib{Md}}}{{M`{c}}}Kf}{{{Ib{c}}{Ib{Md}}}{{Mb{c}}}Kf}``{{{d{{M`{c}}}}}{{Ib{e}}}Kf{}}{{{d{{Mb{c}}}}}{{Ib{e}}}Kf{}}`10{c{{Fb{e}}}{}{}}000{{{d{c}}}Fd{}}0```{{{d{{I`{}{{Hn{c}}}}}}CjBdlnlCl}Alh}0{{{d{{I`{}{{Hn{c}}}}}}CjBdlCllCl}Alh}0{{{d{{I`{}{{Hn{c}}}}}}CjBdlClln}Alh}0{{{d{{I`{}{{Hn{c}}}}}}CjBdlnln}Alh}{{{d{{I`{}{{Hn{c}}}}}}}{{Ib{c}}}h}{{{d{{I`{}{{Hn{c}}}}}}ln}Adh}{{{d{c}}}{{d{e}}}{}{}}{{{d{Dfc}}}{{d{Dfe}}}{}{}}{{{d{{I`{}{{Hn{c}}}}}}l}Alh}0{n{{d{c}}}{}}{n{{d{Dfc}}}{}}{{{d{{I`{}{{Hn{c}}}}}}l}nh}{nAl}{{{d{{I`{}{{Hn{c}}}}}}lCl}Adh}0{{{d{In}}{d{DfE`}}}Eb}0{cc{}}{{}n}{ce{}{}}{{{d{{I`{}{{Hn{c}}}}}}}Dlh}0{{{d{{I`{}{{Hn{c}}}}}}}lh}{{{d{{I`{}{{Hn{c}}}}}}}{{Ab{l}}}h}0001{{{d{{I`{}{{Hn{c}}}}}}}Cnh}0`{{{d{c}}}Ad{}}{{{d{{I`{}{{Hn{c}}}}}}}nh}0{c{{Fb{e}}}{}{}}0{{{d{c}}}Fd{}}``{{{d{{Md{c}}}}CjBdlnln}AlI`}0{{{d{{Md{c}}}}}{{Ib{e}}}I`{}}{{{d{{Md{c}}}}ln}AdI`}`{{{d{c}}}{{d{e}}}{}{}}{{{d{Dfc}}}{{d{Dfe}}}{}{}}{n{{d{c}}}{}}{n{{d{Dfc}}}{}}{{{d{{Md{c}}}}l}nI`}{nAl}{{{d{Df{Md{c}}}}l}AlI`}{{{d{{Md{c}}}}{d{DfE`}}}EbI`}{cc{}}{{}n}{ce{}{}}{{{d{{Md{c}}}}}lI`}{{{d{{Md{c}}}}}{{Ab{l}}}I`}1`{{{Ib{c}}l}{{Md{c}}}I`}{{{d{{Md{c}}}}lCjCl}AlI`}{{{d{Df{Md{c}}}}lCl}AlI`}9{{{d{Df{Md{c}}}}le}AlI`{{En{}{{El{n}}}}}}{{{d{Df{Md{c}}}}le}AlI`{{Mf{Cj}{{Cd{{Ab{Al}}}}}}}}{{{d{{Md{c}}}}lCj}AlI`}`{{{d{c}}}Ad{}}`{c{{Fb{e}}}{}{}}0{{{d{c}}}Fd{}}{{Ibl}{{Md{c}}}Id}``{{{d{{Mh{c}}}}CjBdlnln}Alh}{{{d{{Mh{c}}}}}{{Ib{c}}}h}`{{{d{{Mh{c}}}}ln}Adh}{{{d{c}}}{{d{e}}}{}{}}0{{{d{Dfc}}}{{d{Dfe}}}{}{}}0``{{{d{f}}lnl}Dl}{{{d{Bn}}lnl}Dl}{n{{d{c}}}{}}0{n{{d{Dfc}}}{}}0{c{{Fb{Mj}}}Gd}{{{d{{Mh{c}}}}l}nh}{nAl}0{{{d{{Mh{c}}}}{d{{Mh{c}}}}}Dlh}{{{d{c}}{d{e}}}Dl{}{}}00{{{d{{Mh{c}}}}{d{DfE`}}}Ebh}{{{d{Mj}}{d{DfE`}}}Eb}{cc{}}0{{{Ib{c}}{d{C`}}}{{Cf{{Mh{c}}}}}h}{{}n}0{ce{}{}}0``{{{d{{Mh{c}}}}}lh}{{{d{{Mh{c}}}}}{{Ab{l}}}h}``1{{{Ib{c}}l{Ab{l}}Dl}{{Mh{c}}}h}{{{d{{Mh{c}}}}{d{DfC`}}}Alh}{{{d{c}}}Ad{}}{c{{Fb{e}}}{}{}}000{{{d{c}}}Fd{}}0{{{Ib{c}}l}{{Mh{c}}}h}`{{{Ib{Hh}}{d{C`}}}{{Cf{Ml}}}}`{{{Ib{Hh}}l}Ml}1`{{{d{{Mn{c}}}}CjBdlnlCl}AlI`}{{{d{{Mn{c}}}}CjBdlCllCl}AlI`}{{{d{{Mn{c}}}}CjBdlClln}AlI`}{{{d{{Mn{c}}}}CjBdlnln}AlI`}{{{d{{Mn{c}}}}}{{Ib{e}}}I`{}}{{{d{{Mn{c}}}}ln}AdI`}{{{d{c}}}{{d{e}}}{}{}}{{{d{Dfc}}}{{d{Dfe}}}{}{}}{{{d{{Mn{c}}}}l}AlI`}{n{{d{c}}}{}}{n{{d{Dfc}}}{}}{{{d{{Mn{c}}}}l}nI`}{nAl}{{{d{{Mn{c}}}}lCl}AdI`}{{{d{{Mn{c}}}}{d{DfE`}}}EbI`}{cc{}}{{}n}`{ce{}{}}{{{d{{Mn{c}}}}}DlI`}{{{d{{Mn{c}}}}}lI`}{{{d{{Mn{c}}}}}{{Ab{l}}}I`}01{{{Ib{c}}l}{{Mn{c}}}I`}{{{d{{Mn{c}}}}}CnI`}`{{{d{c}}}Ad{}}{{{d{{Mn{c}}}}}nI`}{c{{Fb{e}}}{}{}}0{{{d{c}}}Fd{}}{{{Ib{c}}l}{{Mn{e}}}{}Id}`{{{d{{N`{eg}}}}CjBdlnlCl}Al{hAn}{{I`{}{{Hn{c}}}}}{{I`{}{{Hn{c}}}}}}0{{{d{{N`{eg}}}}CjBdlnln}Al{hAn}{{I`{}{{Hn{c}}}}}{{I`{}{{Hn{c}}}}}}{{{d{{N`{eg}}}}}{{Ib{c}}}{hAn}{{I`{}{{Hn{c}}}}}{{I`{}{{Hn{c}}}}}}{{{d{{N`{eg}}}}ln}Ad{hAn}{{I`{}{{Hn{c}}}}}{{I`{}{{Hn{c}}}}}}`{{{d{c}}}{{d{e}}}{}{}}{{{d{Dfc}}}{{d{Dfe}}}{}{}}{{{d{{N`{eg}}}}l}Al{hAn}{{I`{}{{Hn{c}}}}}{{I`{}{{Hn{c}}}}}}{n{{d{c}}}{}}{n{{d{Dfc}}}{}}{{{d{{N`{eg}}}}l}n{hAn}{{I`{}{{Hn{c}}}}}{{I`{}{{Hn{c}}}}}}{nAl}{{{d{{N`{ce}}}}{d{DfE`}}}EbI`{{I`{}{{Hn{}}}}}}{cc{}}{{}n}{ce{}{}}`{{{d{{N`{eg}}}}}l{hAn}{{I`{}{{Hn{c}}}}}{{I`{}{{Hn{c}}}}}}{{{d{{N`{eg}}}}}{{Ab{l}}}{hAn}{{I`{}{{Hn{c}}}}}{{I`{}{{Hn{c}}}}}}1{{{Ib{e}}{Ib{g}}}{{N`{eg}}}{hAn}{{I`{}{{Hn{c}}}}}{{I`{}{{Hn{c}}}}}}{{{d{{N`{eg}}}}ll}n{hAn}{{I`{}{{Hn{c}}}}}{{I`{}{{Hn{c}}}}}}`{{{d{{N`{eg}}}}ln}l{hAn}{{I`{}{{Hn{c}}}}}{{I`{}{{Hn{c}}}}}}{{{d{c}}}Ad{}}{c{{Fb{e}}}{}{}}0{{{d{c}}}Fd{}}{{{Ib{c}}l}{{N`{eg}}}{hAn}{{I`{}{{Hn{c}}}}Id}{{I`{}{{Hn{c}}}}Id}}`{{{Ib{c}}l}Id{}}```{{{d{{H`{}{{Gn{c}}}}}}CjBdlCll{d{c}}}Al{HbHd}}`{{{d{{H`{}{{Gn{c}}}}}}l{d{Dfe}}}{{Dh{c}}}{HbHd}Dj}{{{d{c}}}Dl{}}{{{d{{H`{}{{Gn{c}}}}}}{d{c}}{d{Dfe}}}{{Dh{Al}}}{HbHd}Dn}{{{d{{H`{}{{Gn{c}}}}}}l}c{HbHd}}`{{{d{{H`{}{{Gn{c}}}}}}}n{HbHd}}{{{d{{H`{}{{Gn{c}}}}}}{d{Dfc}}Bdlnln}Al{HbHd}}````{{{d{Nb}}{d{DfEf}}BdBd}Al}{{{d{Nb}}{d{DfEf}}Bdl{d{Ef}}}Al}{{{d{Nb}}{d{DfEf}}Bdln}Al}{{{d{c}}}{{d{e}}}{}{}}{{{d{Dfc}}}{{d{Dfe}}}{}{}}{{{d{Nb}}l}Al}{n{{d{c}}}{}}{n{{d{Dfc}}}{}}{{{d{Nb}}l}n}{nAl}{{{d{Nb}}{d{j}}}{{Cf{{A`{lEf}}}}}}0{{{d{Nb}}{Ab{l}}Nd}{{Cf{{A`{lEf}}}}}}{{{d{Nb}}{Ab{l}}Nf}{{Cf{{A`{lEf}}}}}}{{{d{Nb}}{d{j}}}{{Cf{{Nh{Ad{A`{lEf}}}}}}}}{{{d{Nb}}{d{{Eh{Nj}}}}}{{A`{lEf}}}}{cc{}}{{}n}{ce{}{}}`{{{d{Nb}}{d{DfEf}}Bdl{d{Ef}}}Al}{{{d{Nb}}{d{DfEf}}Bdln}Al}00{CnNb}{{{d{Nb}}}Cn}{c{{Fb{e}}}{}{}}0{{{d{c}}}Fd{}}`````````````````{{{d{j}}}{{Nn{{d{j}}Nd{Nl{{d{j}}}}}}}}0{{{d{j}}}{{Nn{{d{j}}Nf{Nl{{d{j}}}}}}}}1{{{d{c}}}{{d{e}}}{}{}}00{{{d{Dfc}}}{{d{Dfe}}}{}{}}00{g{{`{{Mf{{d{j}}}{{Cd{{Nn{{d{j}}ce}}}}}}}}}{}{{O`{{d{j}}}}}{{Ob{{d{j}}ce}}}}{{{d{Nf}}}Nf}{{{d{Nd}}}Nd}{{{d{Nj}}}Nj}{{{d{c}}{d{Dfe}}}Al{}{}}00{{{d{j}}}{{`{{Gl{{Od{{Nl{{d{j}}}}}}}{{Cd{Of}}}}}}}}{n{{d{c}}}{}}00{n{{d{Dfc}}}{}}00{{{d{j}}}{{Nn{{d{j}}c{Nl{{d{j}}}}}}}{OhOj}}{nAl}00{{{d{Nf}}{d{DfE`}}}Eb}{{{d{Nd}}{d{DfE`}}}Eb}{{{d{Nj}}{d{DfE`}}}Eb}{{imo}{{`{{Mf{c}{{Cd{{Nn{ckg}}}}}}}}}Ol{}{}{{Ob{ceg}}}{}{{Ob{ckg}}}{{Mf{kk}{{Cd{k}}}}}}{cc{}}00{{}n}00{ce{}{}}00{{{d{j}}}{{Nn{{d{j}}{B`{{A`{NdAd}}}}{Nl{{d{j}}}}}}}}{{{d{j}}}{{Nn{{d{j}}Ad{Nl{{d{j}}}}}}}}1{{{d{j}}}{{Nn{{d{j}}{d{j}}{Nl{{d{j}}}}}}}}{{{d{j}}}{{Cf{Nd}}}}{{{d{j}}}{{Cf{{B`{{A`{NdAd}}}}}}}}{{{d{j}}}{{Nn{{d{j}}l{Nl{{d{j}}}}}}}}{g{{`{{Mf{{d{j}}}{{Cd{{Nn{{d{j}}ce}}}}}}}}}{}{{O`{{d{j}}}}}{{Ob{{d{j}}ce}}}}{{Njl}Dd}{{{d{c}}}e{}{}}00{c{{Fb{e}}}{}{}}00000{{{d{c}}}Fd{}}00","D":"BKj","p":[[10,"AdemAlgebraT",134],[1,"reference"],[5,"AdemAlgebra",134],[10,"Algebra",262],[1,"str"],[1,"i32"],[1,"usize"],[1,"tuple"],[6,"Option",1879],[5,"String",1880],[10,"PolynomialAlgebra",642],[5,"PolynomialAlgebraTableEntry",642],[5,"OnceVec",1881],[1,"unit"],[10,"Bialgebra",304],[5,"Vec",1882],[10,"GeneratedAlgebra",262],[1,"u32"],[10,"UnstableAlgebra",262],[10,"MuAlgebra",262],[5,"TruncatedPolynomialMonomialBasis",307],[10,"MilnorAlgebraT",390],[5,"MilnorAlgebra",390],[6,"Value",1883],[5,"BiVec",1884],[17,"Output"],[8,"Result",1885],[10,"Fn",1886],[6,"SliceMut",1887],[6,"Slice",1887],[5,"ValidPrime",1888],[10,"SteenrodAlgebraT",719],[6,"SteenrodAlgebraBorrow",719],[5,"AdemBasisElement",134],[0,"mut"],[8,"Result",1889],[10,"Read",1890],[1,"bool"],[10,"Write",1890],[5,"Formatter",1891],[8,"Result",1891],[6,"PorBockstein",134],[6,"FpVector",1887],[1,"slice"],[10,"Hasher",1892],[17,"Item"],[10,"Iterator",1893],[1,"isize"],[6,"Result",1894],[5,"TypeId",1895],[5,"PartitionIterator",307],[5,"Field",359],[5,"MilnorBasisElement",390],[8,"PPartEntry",390],[5,"MilnorProfile",390],[5,"Matrix2D",390],[5,"PPartAllocation",390],[10,"Deserializer",1896],[8,"PPart",390],[5,"PPartMultiplier",390],[10,"Serializer",1897],[10,"FnOnce",1886],[17,"Element"],[10,"PairAlgebra",607],[10,"Send",1898],[10,"Sync",1898],[5,"PolynomialAlgebraMonomial",642],[6,"SteenrodAlgebra",719],[6,"AlgebraType",719],[5,"AlgebraSpec",719],[17,"Algebra"],[10,"Module",1551],[5,"Arc",1899],[10,"ZeroModule",1753],[5,"BlockStructure",996],[5,"GeneratorBasisEltPair",996],[5,"Range",1900],[5,"FiniteDimensionalModule",1033],[5,"ModuleFailedRelationError",1551],[5,"FinitelyPresentedModule",1084],[8,"FreeModule",1138],[5,"MuFreeModule",1138],[5,"OperationGeneratorPair",1138],[5,"OnceBiVec",1881],[1,"array"],[5,"GeneratorData",1138],[5,"OffsetIterator",1138],[5,"HomModule",1254],[17,"Source"],[17,"Target"],[10,"ModuleHomomorphism",1282],[5,"Subspace",1901],[5,"QuasiInverse",1902],[5,"MatrixSliceMut",1903],[5,"Matrix",1903],[10,"IdentityHomomorphism",1282],[10,"ZeroHomomorphism",1282],[5,"MuFreeModuleHomomorphism",1362],[1,"f32"],[5,"FullModuleHomomorphism",1426],[5,"GenericZeroHomomorphism",1463],[5,"HomPullback",1484],[8,"FreeModuleHomomorphism",1362],[5,"QuotientHomomorphism",1512],[5,"QuotientHomomorphismSource",1512],[5,"QuotientModule",1596],[10,"FnMut",1886],[5,"RealProjectiveSpace",1631],[5,"RPSpec",1631],[8,"SteenrodModule",1683],[5,"SuspensionModule",1688],[5,"TensorModule",1722],[5,"SteenrodEvaluator",1769],[6,"AlgebraNode",1800],[6,"AlgebraBasisElt",1800],[5,"BTreeMap",1904],[6,"BocksteinOrSq",1800],[5,"VerboseError",1905],[8,"IResult",1906],[10,"ParseError",1905],[10,"Parser",1906],[6,"Err",1906],[5,"Error",1885],[10,"FromStr",1907],[10,"Copy",1898],[10,"Clone",1908],[5,"MilnorPairElement",607],[8,"UnstableFreeModule",1138],[5,"FPMIndexTable",1084],[8,"UnstableFreeModuleHomomorphism",1362],[8,"IResult",1800]],"r":[[1,134],[3,134],[4,262],[5,719],[6,304],[9,359],[10,262],[12,390],[14,390],[15,262],[16,642],[17,642],[18,642],[19,719],[20,719],[21,719],[22,262],[23,108],[33,108],[50,108],[57,108],[72,108],[89,134],[90,134],[91,134],[94,134],[108,134],[109,134],[110,262],[111,719],[112,304],[113,359],[114,262],[115,390],[116,390],[117,262],[118,642],[119,642],[120,642],[121,719],[122,719],[123,719],[124,262],[844,307],[845,307],[846,307],[847,307],[850,307],[858,307],[859,307],[860,359],[863,390],[864,390],[865,390],[866,390],[867,390],[868,390],[869,390],[870,390],[901,1138],[902,1138],[903,1254],[904,1551],[905,1551],[906,1138],[907,1138],[908,1596],[909,1631],[910,1683],[911,1688],[912,1722],[913,1138],[914,1753],[1282,1362],[1283,1426],[1284,1463],[1285,1484],[1288,1362],[1289,1512],[1290,1512],[1293,1362],[1684,1687],[1756,607],[1757,607]],"b":[[192,"impl-Display-for-AdemBasisElement"],[193,"impl-Debug-for-AdemBasisElement"],[484,"impl-Debug-for-MilnorBasisElement"],[485,"impl-Display-for-MilnorBasisElement"],[486,"impl-Display-for-Matrix2D"],[487,"impl-Debug-for-Matrix2D"],[670,"impl-Debug-for-PolynomialAlgebraMonomial"],[671,"impl-Display-for-PolynomialAlgebraMonomial"],[778,"impl-Display-for-AlgebraType"],[779,"impl-Debug-for-AlgebraType"],[836,"impl-TryInto%3C%26AdemAlgebra%3E-for-%26SteenrodAlgebra"],[837,"impl-TryInto%3C%26MilnorAlgebra%3E-for-%26SteenrodAlgebra"],[1374,"impl-MuFreeModuleHomomorphism%3CU,+M%3E"],[1375,"impl-ModuleHomomorphism-for-MuFreeModuleHomomorphism%3CU,+M%3E"],[1573,"impl-Display-for-ModuleFailedRelationError"],[1574,"impl-Debug-for-ModuleFailedRelationError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPoFwQABAAAAAwAAAAYAAAAIAAEADAADABEABgAZAAAAHwAAACIAAAAkAAAAKAAAACoACAA0AAAANwAHAEEAAABDAAEARwABAEoAAgBPAAYAVwACAF0AAQBgAAAAZQACAGkAAABsABEAfwACAIMAAACFAAEAigABAI0ABQCUAAAAlgAAAJgADgCoABsAxwAHANEABwDdAAEA4AAAAOIACgDuAAEA8QACAPUAAAD3AA8ACgEAABIBAQAeAQAAIgEBADQBAQA3AQAAOQELAEcBAABJAQEATAEEAFMBCQBeAQkAaQEOAHkBAAB7AQQAgQELAI4BAQCRAQYAmQEAAJwBEQCvATIA4wEFAO8BCgD7AQkACwIBAA4CAAAQAgMAFQIVACwCAQAvAgIANAIFADsCCgBHAhQAXQIAAF8CAQBiAgEAaAIIAHQCAAB3AgAAfAInAKYCBQCuAl8AEgMIAB8DMQBTAwUAWgMCAF4DBgBmAwIAawMJAHYDAQB5AwEAfAMAAH4DAgCCAwUAigMAAIwDAACPAwYAlwMIAKIDAwCnAwQArwMFALgDCADCAwAAxAMDAMkDEwDeAwIA4gMCAOYDAADoAw4A+gMBAP4DAQACBAkADgQWACcEAwAsBCoAWQQHAGMEEQB2BCoApQQBAKoEBQC0BAQAvgQAAMIEEwDXBA8A6AQMAPYEAAD4BAsABQUAAAcFAAAJBQcAFAUBABkFBgAiBQ4AMgUkAFgFAABaBQYAZAUEAGsFBABxBQkAfAUWAJQFCgCgBQUApwUBAKoFAgCvBREAwgUAAMQFCADOBQcA1wUCANsFHwD9BQEAAQYPABIGAAAVBgQAHAYBACAGAQAjBgAAJgYBACkGAAA1BgcAPgYDAEMGBwBMBgAATgYCAFIGBABYBgAAWgYAAFwGBABiBhkAfgYCAIMGJQCqBgEArQYcAMsGAADNBg4A3QYAAOAGAwDlBgAA6AYDAO0GAADvBgoA+wYAAP0GAAD/Bg8AEAcBABMHEAAlBxQAPQcCAEMHBgBLBwwA"}],\
["algebra_dim",{"t":"","n":[],"q":[],"i":[],"f":"","D":"`","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA"}],\
["bivec",{"t":"FNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNN","n":["BiVec","borrow","borrow_mut","clone","clone_into","data","default","deserialize","eq","extend","extend_negative","extend_with","fmt","from","from_vec","get","get_max","index","index_mut","into","into_iter","into_iter","into_iter","into_iter_enum","into_vec","is_empty","iter","iter_enum","iter_mut","iter_mut_enum","last","len","max_degree","min_degree","min_degree","new","push","range","reserve","serialize","split_borrow_mut","to_owned","try_from","try_into","type_id","with_capacity"],"q":[[0,"bivec"],[46,"core::clone"],[47,"core::result"],[48,"serde::de"],[49,"core::cmp"],[50,"core::iter::traits::collect"],[51,"core::ops::function"],[52,"core::fmt"],[53,"alloc::vec"],[54,"core::option"],[55,"core::iter::traits::double_ended"],[56,"core::slice::iter"],[57,"core::ops::range"],[58,"serde::ser"],[59,"core::any"]],"i":[0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],"f":"`{{{b{c}}}{{b{e}}}{}{}}{{{b{dc}}}{{b{de}}}{}{}}{{{b{{f{c}}}}}{{f{c}}}h}{{{b{c}}{b{de}}}j{}{}}`{{}{{f{c}}}{}}{c{{l{{f{e}}}}}nA`}{{{b{{f{c}}}}{b{{f{c}}}}}AbAd}{{{b{d{f{c}}}}e}j{}{{Ah{}{{Af{c}}}}}}{{{b{d{f{c}}}}Ajc}jh}{{{b{d{f{c}}}}Aje}j{}{{An{Aj}{{Al{c}}}}}}{{{b{{f{c}}}}{b{dB`}}}BbBd}{cc{}}{{Aj{Bf{c}}}{{f{c}}}{}}{{{b{{f{c}}}}Aj}{{Bh{{b{c}}}}}{}}{{{b{{f{c}}}}Aj}{{b{c}}}{}}0{{{b{d{f{c}}}}Aj}{{b{dc}}}{}}{ce{}{}}{{{b{d{f{c}}}}}e{}{}}{{{f{c}}}e{}{}}{{{b{{f{c}}}}}e{}{}}{{{f{c}}}{{`{{Bl{}{{Af{{Bj{Ajc}}}}}}}}}{}}{{{f{c}}}{{Bf{c}}}{}}{{{b{{f{c}}}}}Ab{}}{{{b{{f{c}}}}}{{Bn{c}}}{}}{{{b{{f{c}}}}}{{`{{Bl{}{{Af{{Bj{Aj{b{c}}}}}}}}}}}{}}{{{b{d{f{c}}}}}{{C`{c}}}{}}{{{b{d{f{c}}}}}{{`{{Bl{}{{Af{{Bj{Aj{b{dc}}}}}}}}}}}{}}{{{b{{f{c}}}}}{{Bh{{b{c}}}}}{}}{{{b{{f{c}}}}}Aj{}}00`{Aj{{f{c}}}{}}{{{b{d{f{c}}}}c}j{}}{{{b{{f{c}}}}}{{Cb{Aj}}}{}}{{{b{d{f{c}}}}Cd}j{}}{{{b{{f{c}}}}e}lCfCh}{{{b{d{f{c}}}}AjAj}{{Bj{{b{dc}}{b{dc}}}}}{}}{{{b{c}}}e{}{}}{c{{l{e}}}{}{}}0{{{b{c}}}Cj{}}{{AjAj}{{f{c}}}{}}","D":"Ab","p":[[1,"reference"],[0,"mut"],[5,"BiVec",0],[10,"Clone",46],[1,"unit"],[6,"Result",47],[10,"Deserializer",48],[10,"Deserialize",48],[1,"bool"],[10,"PartialEq",49],[17,"Item"],[10,"IntoIterator",50],[1,"i32"],[17,"Output"],[10,"FnMut",51],[5,"Formatter",52],[8,"Result",52],[10,"Debug",52],[5,"Vec",53],[6,"Option",54],[1,"tuple"],[10,"DoubleEndedIterator",55],[5,"Iter",56],[5,"IterMut",56],[5,"Range",57],[1,"usize"],[10,"Serialize",58],[10,"Serializer",58],[5,"TypeId",59]],"r":[],"b":[[20,"impl-IntoIterator-for-%26mut+BiVec%3CT%3E"],[21,"impl-IntoIterator-for-BiVec%3CT%3E"],[22,"impl-IntoIterator-for-%26BiVec%3CT%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACUACAAAAAAAAgAIAA0AAAAPAAEAEgABABUACgAiAAYAKgAEAA=="}],\
["bruner",{"t":"","n":[],"q":[],"i":[],"f":"","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["chart",{"t":"PKPTRTTPTGSPTFFNNNNNNNNNNNNNMNNNNNNNMNNOOOONNMNNOOOOMNNNMNNNNNNNNNNN","n":["Above","Backend","Below","EXT","Error","GRID_WIDTH","HEADER","Left","MARGIN","Orientation","PATTERNS","Right","STYLES","SvgBackend","TikzBackend","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","drop","drop","from","from","from","get_coords","get_coords","header","header","header","init","into","into","into","legend","line","line","line","max_x","max_x","max_y","max_y","new","new","node","node","node","num_nodes","num_nodes","out","out","structline","structline","structline","structline_matrix","text","text","text","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"chart"],[68,"std::io"],[69,"core::result"],[70,"std::io::error"],[71,"core::option"],[72,"alloc::vec"],[73,"core::fmt"],[74,"core::any"]],"i":[19,0,19,12,12,3,6,19,3,0,0,19,3,0,0,19,3,6,19,3,6,3,6,19,3,6,3,6,12,3,6,12,19,3,6,3,12,3,6,3,6,3,6,3,6,12,3,6,3,6,3,6,12,3,6,12,12,3,6,19,3,6,19,3,6,19,3,6],"f":"```````````````{{{b{c}}}{{b{e}}}{}{}}00{{{b{dc}}}{{b{de}}}{}{}}00{{{b{d{f{c}}}}}hj}{{{b{d{l{c}}}}}hj}{cc{}}00{{{b{{f{c}}}}nnA`}{{Ad{AbAbAb}}}j}{{{b{{l{c}}}}nnA`}{{Ad{AbAbAb}}}j}{{{b{d{Ah{}{{Af{c}}}}}}nn}{{Aj{hc}}}{}}{{{b{d{f{c}}}}nn}{{Aj{he}}}j{}}{{{b{d{l{c}}}}nn}{{Aj{he}}}j{}}2{ce{}{}}00{c{{Al{h}}}j}{{{b{d{Ah{}{{Af{c}}}}}}nnnn{b{An}}}{{Aj{hc}}}{}}{{{b{d{f{c}}}}nnnn{b{An}}}{{Aj{he}}}j{}}{{{b{d{l{c}}}}nnnn{b{An}}}{{Aj{he}}}j{}}````{c{{f{c}}}j}{c{{l{c}}}j}{{{b{d{Ah{}{{Af{c}}}}}}nnA`}{{Aj{hc}}}{}}{{{b{d{f{c}}}}nnA`}{{Aj{he}}}j{}}{{{b{d{l{c}}}}nnA`}{{Aj{he}}}j{}}````{{{b{d{Ah{}{{Af{c}}}}}}{Ad{nnA`}}{Ad{nnA`}}{B`{{b{An}}}}}{{Aj{hc}}}{}}{{{b{d{f{c}}}}{Ad{nnA`}}{Ad{nnA`}}{B`{{b{An}}}}}{{Aj{he}}}j{}}{{{b{d{l{c}}}}{Ad{nnA`}}{Ad{nnA`}}{B`{{b{An}}}}}{{Aj{he}}}j{}}{{{b{d{Ah{}{{Af{c}}}}}}{Ad{nn}}{Ad{nn}}{Bd{{Bd{Bb}}}}{B`{{b{An}}}}}{{Aj{hc}}}{}}{{{b{d{Ah{}{{Af{c}}}}}}nneBf}{{Aj{hc}}}{}Bh}{{{b{d{f{c}}}}nneBf}{{Aj{hg}}}jBh{}}{{{b{d{l{c}}}}nneBf}{{Aj{hg}}}jBh{}}{c{{Aj{e}}}{}{}}00000{{{b{c}}}Bj{}}00","D":"Ad","p":[[1,"reference"],[0,"mut"],[5,"SvgBackend",0],[1,"unit"],[10,"Write",68],[5,"TikzBackend",0],[1,"i32"],[1,"usize"],[1,"f32"],[1,"tuple"],[17,"Error"],[10,"Backend",0],[6,"Result",69],[8,"Result",70],[1,"str"],[6,"Option",71],[1,"u32"],[5,"Vec",72],[6,"Orientation",0],[10,"Display",73],[5,"TypeId",74]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADoABAAAAAMABQASAB0AAwAlAB8A"}],\
["d2_charts",{"t":"","n":[],"q":[],"i":[],"f":"","D":"`","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA"}],\
["define_module",{"t":"HHHH","n":["gens_to_json","get_gens","interactive_module_define_fdmodule","interactive_module_define_fpmodule"],"q":[[0,"define_module"],[4,"alloc::string"],[5,"alloc::vec"],[6,"bivec"],[7,"serde_json::value"],[8,"anyhow"],[9,"fp::prime::primes_generic"]],"i":[0,0,0,0],"f":"{{{h{{f{{d{b}}}}}}}j}{{}{{l{{f{{d{b}}}}}}}}{{{h{nj}}A`}{{l{Ab}}}}0","D":"`","p":[[5,"String",4],[5,"Vec",5],[5,"BiVec",6],[1,"reference"],[6,"Value",7],[8,"Result",8],[0,"mut"],[5,"ValidPrime",9],[1,"unit"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAQAEAAAAAAAAQACAAMABAA="}],\
["differentials",{"t":"","n":[],"q":[],"i":[],"f":"","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["ext",{"t":"ICOOCCCCCCCORKKKGEFRPFFKPRRFRMNNNNNNNNOOCMOOMONNNNNNMONNNNNNCNNNNMNNNNNNNNMOMMONMNNONNMONNNNNNNNNNMOFFNNNNNNNONNONNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNONNNNNNNNOPPTSGFFFPFFNNONNNNNNNNNNNNNONNNNOOONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNONONNNNNNNNNNNONONONONNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNONSFIFINNONNNNNOOOOOONNNNNNNNNOOONNNNNNNNNNNOOOOOOOOONNOOONOOONONNNOOONONOOONNNNNNNNNOOOFIINNNNNNNNNNNNNNNNNNNNOOONOOONNNOOOOOOOOOOOONNNPPPFFPPPPPPPGFGPPPPOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNNNHNHONNNNONNNNNNNNNNNNNNNNNNNNNNNNOOORITFFKFRJRRNNNNMNNNNNNNNMNNOONNNMNNNONNNNNNNNNNNNNNNNNOMNOONNNNNMNONNNMNNNNNMNMNOMNOMNOONNNNNNNNNNMNOFFISONNOONNHHHNNONNNNNHNNHNHNHOCOOOOHHHHHOHOONNNNNNNHOOFFNNNNONNNNNNHNNNNNNHNNNNONNNNNNNNOSIOOHHHHHOHHH","n":["CCC","chain_complex","differentials","modules","nassau","resolution","resolution_homomorphism","save","secondary","utils","yoneda","zero_module","Algebra","AugmentedChainComplex","BoundedChainComplex","ChainComplex","ChainComplexGrading","ChainHomotopy","ChainMap","ChainMap","Cohomological","FiniteAugmentedChainComplex","FiniteChainComplex","FreeChainComplex","Homological","Homomorphism","Module","StemIterator","TargetComplex","algebra","apply_quasi_inverse","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","boundary_string","cc","cc","chain_homotopy","chain_map","chain_maps","chain_maps","compute_through_bidegree","current","deref","deref","deref","deref_mut","deref_mut","deref_mut","differential","differentials","drop","drop","drop","euler_characteristic","filtration_one_product","filtration_one_products","finite_chain_complex","from","from","from","graded_dimension_string","has_computed_bidegree","init","init","init","into","into","into","into_iter","iter_stem","max_s","max_s","min_degree","module","modules","next","next_homological_degree","number_of_gens_in_bidegree","prime","s_shift","save_dir","save_file","target","target_cc","to_sseq","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zero_module","zero_module","FiniteAugmentedChainComplex","FiniteChainComplex","algebra","algebra","augment","borrow","borrow","borrow_mut","borrow_mut","cc","ccdz","chain_map","chain_maps","compute_through_bidegree","compute_through_bidegree","deref","deref","deref_mut","deref_mut","differential","differential","differentials","drop","drop","from","from","from","has_computed_bidegree","has_computed_bidegree","init","init","into","into","map","map","max_s","max_s","min_degree","min_degree","module","module","modules","new","next_homological_degree","next_homological_degree","pop","target","target_cc","try_from","try_from","try_into","try_into","type_id","type_id","zero_module","zero_module","zero_module","End","Fix","INFINITY","MAX_NEW_GENS","Magic","MilnorSubalgebra","Resolution","SenderData","Signature","SignatureIterator","SubalgebraIterator","algebra","apply_quasi_inverse","b","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_map","chain_maps","clone","clone_into","compute_through_bidegree","compute_through_stem","current","current","degree","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","differential","differentials","drop","drop","drop","drop","drop","drop","extend_through_degree","fmt","from","from","from","from","from","from","from_bytes","has_computed_bidegree","has_signature","init","init","init","init","init","init","into","into","into","into","into","into","into_iter","into_iter","iter_signatures","lock","max_degree","min_degree","module","modules","name","name","new","new","new","new","new_with_save","next","next","next_homological_degree","optimal_for","par_bridge","prime","profile","save_dir","save_dir","send","sender","set_name","signature_degree","signature_from_bytes","signature_mask","signature_matrix","signature_to_bytes","step0","step1","step_resolution","step_resolution_with_result","step_resolution_with_subalgebra","subalgebra","target","target","to_bytes","to_owned","to_string","top_degree","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","write_differential","write_qi","zero_algebra","zero_module","zero_module","zero_signature","MAX_NEW_GENS","MuResolution","Resolution","SenderData","UnstableResolution","algebra","apply_quasi_inverse","b","borrow","borrow","borrow_mut","borrow_mut","chain_map","chain_maps","chain_maps","chain_maps","complex","complex","complex","compute_through_bidegree","compute_through_bidegree_with_callback","compute_through_stem","compute_through_stem_with_callback","deref","deref","deref_mut","deref_mut","differential","differentials","differentials","differentials","drop","drop","extend_through_degree","from","from","get_kernel","has_computed_bidegree","init","init","into","into","kernels","kernels","kernels","load_quasi_inverse","load_quasi_inverse","load_quasi_inverse","lock","lock","lock","min_degree","module","modules","modules","modules","name","name","name","name","new","new","new_with_save","next_homological_degree","save_dir","save_dir","save_dir","save_dir","send","sender","set_name","should_save","should_save","should_save","step_resolution","target","try_from","try_from","try_into","try_into","type_id","type_id","zero_module","zero_module","zero_module","zero_module","MuResolutionHomomorphism","ResolutionHomomorphism","UnstableResolutionHomomorphism","act","algebra","borrow","borrow_mut","deref","deref_mut","drop","extend","extend_all","extend_profile","extend_step","extend_step_raw","extend_through_stem","from","from_class","from_module_homomorphism","get_map","get_map_ensure_length","init","into","maps","maps","maps","name","name","name","name","new","next_homological_degree","save_dir","save_dir","save_dir","save_dir","shift","shift","shift","source","source","source","target","target","target","try_from","try_into","type_id","AugmentationQi","ChainHomotopy","ChainMap","ChecksumReader","ChecksumWriter","Combined","Differential","Kernel","NassauDifferential","NassauQi","None","ResQi","SaveDirectory","SaveFile","SaveKind","SecondaryComposite","SecondaryHomotopy","SecondaryIntermediate","Split","adler","adler","algebra","b","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create_dir","create_file","delete_file","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exists","flush","fmt","fmt","from","from","from","from","from","from","get_save_path","idx","init","init","init","init","init","into","into","into","into","into","is_none","is_some","kind","magic","name","nassau_data","new","new","open_file","open_file","open_files","path","push","read","read","read_exact","reader","resolution_data","secondary_data","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","validate_header","write","write","write_all","write_header","writer","read","write","Algebra","CompositeData","HIT_GENERATOR","SecondaryComposite","SecondaryHomotopy","SecondaryLift","SecondaryResolution","Source","TAU_BIDEGREE","Target","Underlying","act","act","add_composite","add_composite","algebra","algebra","algebra","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","composite","composite","composite","composite","composites","compute_composites","compute_homotopies","compute_homotopy_step","compute_intermediate","compute_intermediate","compute_intermediates","compute_partial","degree","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","e3_page","extend_all","finalize","from","from","from","from_bytes","get_intermediate","hit_generator","homotopies","homotopies","homotopies","homotopies","homotopy","init","init","init","initialize_homotopies","intermediates","intermediates","intermediates","into","into","into","max","max","new","new","new","prime","save_dir","save_dir","shift","shift","shift_t","source","source","source","target","target","target","target","to_bytes","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","underlying","underlying","underlying","Config","LogWriter","QueryModuleResolution","STATIC_MODULES_PATH","algebra","borrow","borrow_mut","bytes","chain_maps","clone","clone_into","construct","construct_nassau","construct_standard","deref","deref_mut","differentials","drop","eq","equivalent","equivalent","equivalent","ext_tracing_subscriber","fmt","from","get_unit","init","init_logging","into","load_module_json","lock","logging","max_degree","module","modules","name","parse_module_name","query_module","query_module_only","query_unstable_module","query_unstable_module_only","save_dir","secondary_job","start","target","to_owned","try_from","try_from","try_from","try_from","try_into","type_id","unicode_num","writer","zero_module","LogWriter","Throughput","borrow","borrow","borrow_mut","borrow_mut","bytes","deref","deref","deref_mut","deref_mut","drop","drop","ext_tracing_subscriber","flush","fmt","from","from","init","init","init_logging","into","into","into_throughput","new","start","to_string","try_from","try_from","try_into","try_into","type_id","type_id","write","writer","PENALTY_UNIT","Yoneda","cc","chain_maps","compute_kernel_image","rate_adem_operation","rate_milnor_operation","rate_operation","split_mut_borrow","target_cc","yoneda_representative","yoneda_representative_element","yoneda_representative_with_strategy"],"q":[[0,"ext"],[12,"ext::chain_complex"],[100,"ext::chain_complex::finite_chain_complex"],[157,"ext::nassau"],[303,"ext::resolution"],[389,"ext::resolution_homomorphism"],[437,"ext::save"],[566,"ext::save::SaveDirectory"],[568,"ext::secondary"],[669,"ext::utils"],[724,"ext::utils::logging"],[759,"ext::yoneda"],[772,"alloc::sync"],[773,"algebra::algebra::algebra_trait"],[774,"algebra::module::module_trait"],[775,"algebra::module::homomorphism"],[776,"sseq::coordinates::bidegree"],[777,"sseq::coordinates::generator"],[778,"alloc::string"],[779,"alloc::vec"],[780,"core::option"],[781,"sseq::sseq"],[782,"core::marker"],[783,"fp::prime::primes_generic"],[784,"core::result"],[785,"core::any"],[786,"algebra::module::zero_module"],[787,"algebra::module::homomorphism::full_module_homomorphism"],[788,"core::ops::function"],[789,"algebra::algebra::milnor_algebra"],[790,"core::fmt"],[791,"std::io::error"],[792,"std::io"],[793,"core::iter::traits::iterator"],[794,"anyhow"],[795,"core::convert"],[796,"rayon::iter::par_bridge"],[797,"std::sync::mpsc"],[798,"algebra::module::free_module"],[799,"algebra::module::homomorphism::free_module_homomorphism"],[800,"fp::matrix::matrix_inner"],[801,"fp::vector::vector_generic"],[802,"fp::matrix::subspace"],[803,"sseq::coordinates::range"],[804,"core::ops::range"],[805,"std::path"],[806,"alloc::boxed"],[807,"std::collections::hash::set"],[808,"std::sync::mutex"],[809,"algebra::algebra::pair_algebra"],[810,"once"],[811,"dashmap"],[812,"algebra::module::finite_dimensional_module"],[813,"tracing_core::subscriber"],[814,"serde_json::value"],[815,"algebra::algebra::steenrod_algebra"],[816,"algebra::module::steenrod_module"],[817,"algebra::module::quotient_module"],[818,"algebra::algebra::adem_algebra"],[819,"ext::chain_complex::chain_homotopy"]],"i":[0,0,107,107,0,0,0,0,0,0,0,107,4,0,0,0,0,0,0,21,122,0,0,0,122,4,4,0,21,4,4,122,31,119,122,31,119,16,42,31,0,21,42,119,4,31,122,31,119,122,31,119,4,41,122,31,119,25,16,16,0,122,31,119,16,4,122,31,119,122,31,119,31,4,25,31,4,4,41,31,4,16,4,119,4,4,21,42,16,122,31,119,122,31,119,122,31,119,4,41,0,0,41,42,41,41,42,41,42,42,41,42,42,41,42,41,42,41,42,41,42,41,41,42,41,41,42,41,42,41,42,41,42,41,42,41,42,41,42,41,42,41,41,41,42,41,42,42,41,42,41,42,41,42,41,42,41,123,123,50,0,0,0,0,0,123,0,0,48,48,65,65,59,60,123,48,50,65,59,60,123,48,50,48,48,50,50,48,48,59,60,60,65,59,60,123,48,50,65,59,60,123,48,50,48,48,65,59,60,123,48,50,48,50,65,59,60,123,48,50,50,48,50,65,59,60,123,48,50,65,59,60,123,48,50,59,60,50,48,48,48,48,48,48,48,59,60,48,50,48,59,60,48,50,59,48,50,48,48,65,65,48,60,50,50,50,50,48,48,48,48,48,60,48,48,50,50,50,50,65,59,60,123,48,50,65,59,60,123,48,50,65,59,60,123,48,50,48,48,50,48,48,50,0,0,0,0,0,73,73,75,75,73,75,73,73,124,112,73,124,112,73,73,73,73,73,75,73,75,73,73,124,112,73,75,73,73,75,73,73,73,75,73,75,73,124,112,73,124,112,73,124,112,73,73,73,124,112,73,73,124,112,73,73,75,73,73,73,124,112,73,75,75,73,124,112,73,73,73,75,73,75,73,75,73,73,124,112,73,0,0,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,125,126,76,76,125,126,76,76,76,76,125,126,76,125,126,76,125,126,76,125,126,76,76,76,76,35,35,35,0,0,34,35,35,35,35,34,35,0,0,0,35,35,35,34,84,85,36,36,84,85,36,34,35,84,85,36,34,35,34,35,34,35,35,36,36,84,85,36,34,35,84,85,36,34,35,84,84,85,85,36,34,35,34,35,34,34,34,35,35,35,36,84,34,35,84,85,36,34,34,35,36,36,84,85,36,34,35,84,85,36,34,35,34,34,36,35,35,35,84,85,0,36,0,84,34,85,34,85,85,35,35,34,35,84,85,36,34,35,84,85,36,34,35,84,85,36,34,35,36,84,34,84,36,84,127,127,98,0,98,0,0,0,0,98,0,98,98,91,94,91,94,98,91,99,91,94,99,91,94,99,98,94,99,91,94,98,98,98,98,99,98,98,91,91,94,99,91,94,99,91,94,99,99,98,91,91,94,99,91,98,94,98,99,94,99,99,91,94,99,98,98,99,99,91,94,99,98,99,91,94,99,98,98,99,98,99,94,98,99,94,98,99,91,94,91,91,94,99,91,94,99,91,94,99,98,99,99,0,0,0,0,102,102,102,115,103,102,102,0,0,0,102,102,103,102,102,102,102,102,0,102,102,0,102,0,102,0,103,0,103,102,103,103,0,0,0,0,0,103,0,115,103,102,102,102,102,102,102,102,0,115,103,0,0,115,116,115,116,115,115,116,115,116,115,116,0,115,116,115,116,115,116,0,115,116,115,115,115,116,115,116,115,116,115,116,115,115,0,0,120,120,0,0,0,0,0,120,0,0,0],"f":"`````````````````````````````{{{j{{h{}{{b{c}}{d{e}}{f{g}}}}}}}{{l{c}}}n{{A`{}{{b{c}}}}}{{Af{}{{Ab{e}}{Ad{e}}}}}}{{{j{{h{}{{b{c}}{d{e}}{f{g}}}}}}{j{Ah{Aj{i}}}}Al{j{{Aj{k}}}}}Ann{{A`{}{{b{c}}}}}{{Af{}{{Ab{e}}{Ad{e}}}}}{}{}}{{{j{c}}}{{j{e}}}{}{}}00{{{j{Ahc}}}{{j{Ahe}}}{}{}}00{{{j{B`}}BbAn}Bd}```{{{j{{Bj{}{{Bf{c}}{Bh{g}}}}}}Bl}{{l{g}}}{{h{}{{b{e}}}}}{}{{Af{}{{Ab{i}}{Ad{}}}}}{}}``{{{j{{h{}{{b{c}}{d{e}}{f{g}}}}}}Al}Bnn{{A`{}{{b{c}}}}}{{Af{}{{Ab{e}}{Ad{e}}}}}}`{C`{{j{c}}}{}}00{C`{{j{Ahc}}}{}}00{{{j{{h{}{{b{c}}{d{e}}{f{g}}}}}}Bl}{{l{g}}}n{{A`{}{{b{c}}}}}{{Af{}{{Ab{e}}{Ad{e}}}}}}`{C`Bn}00{{{j{Cb}}Cd}Cf}{{{j{B`}}CdC`Al}{{Cj{{Ch{{Ch{Bl}}}}}}}}{{{j{B`}}CdC`}Cl}`{cc{}}00{{{j{B`}}}Bd}{{{j{{h{}{{b{c}}{d{e}}{f{g}}}}}}Al}Ann{{A`{}{{b{c}}}}}{{Af{}{{Ab{e}}{Ad{e}}}}}}{{}C`}00{ce{}{}}000{{{j{{h{}{{b{c}}{d{e}}{f{g}}}}}}}{{Cn{{h{}{{b{c}}{d{e}}{f{g}}}}}}}n{{A`{}{{b{c}}}}}{{Af{}{{Ab{e}}{Ad{e}}}}}}{{{j{Cb}}}Bl}`{{{j{{h{}{{b{c}}{d{e}}{f{g}}}}}}}Cdn{{A`{}{{b{c}}}}}{{Af{}{{Ab{e}}{Ad{e}}}}}}{{{j{{h{}{{b{c}}{d{e}}{f{g}}}}}}Bl}{{l{e}}}n{{A`{}{{b{c}}}}}{{Af{}{{Ab{e}}{Ad{e}}}}}}`{{{j{Ah{Cn{c}}}}}{{Cj{e}}}{hD`}{}}{{{j{{h{}{{b{c}}{d{e}}{f{g}}}}}}}Bln{{A`{}{{b{c}}}}}{{Af{}{{Ab{e}}{Ad{e}}}}}}{{{j{B`}}Al}C`}{{{j{{h{}{{b{c}}{d{e}}{f{g}}}}}}}Dbn{{A`{}{{b{c}}}}}{{Af{}{{Ab{e}}{Ad{e}}}}}}`{{{j{{h{}{{b{c}}{d{e}}{f{g}}}}}}}{{j{Dd}}}n{{A`{}{{b{c}}}}}{{Af{}{{Ab{e}}{Ad{e}}}}}}{{{j{{h{}{{b{c}}{d{e}}{f{g}}}}}}DfAl}{{Dh{c}}}n{{A`{}{{b{c}}}}}{{Af{}{{Ab{e}}{Ad{e}}}}}}{{{j{{Bj{}{{Bf{c}}{Bh{g}}}}}}}{{l{c}}}{{h{}{{b{e}}}}}{}{{Af{}{{Ab{i}}{Ad{}}}}}{}}`{{{j{B`}}}{{Dl{Dj}}}}{c{{Dn{e}}}{}{}}00000{{{j{c}}}E`{}}00{{{j{{h{}{{b{c}}{d{e}}{f{g}}}}}}}{{l{e}}}n{{A`{}{{b{c}}}}}{{Af{}{{Ab{e}}{Ad{e}}}}}}```{{{j{{Eb{ce}}}}}{{l{g}}}A`{{Af{}{{Ab{c}}{Ad{c}}}}}{}}{{{j{{Ed{cegi}}}}}lA`{{Af{}{{Ab{c}}{Ad{c}}}}}{{Af{}{{Ab{c}}{Ad{}}}}}{{h{}{{b{}}}}}}{{{Eb{ce}}{l{g}}{Ch{{l{i}}}}}{{Ed{ceig}}}A`{{Af{}{{Ab{c}}{Ad{c}}}}}{{h{}{{b{}}}}}{{Af{}{{Ab{c}}{Ad{}}}}}}{{{j{c}}}{{j{e}}}{}{}}0{{{j{Ahc}}}{{j{Ahe}}}{}{}}0`{{{l{c}}}{{Eb{ce}}}{A`Ef}{{Af{}{{Ab{c}}{Ad{c}}}}{Eh{cc}}}}{{{j{{Ed{cegi}}}}Bl}{{l{k}}}A`{{Af{}{{Ab{c}}{Ad{c}}}}}{{Af{}{{Ab{c}}{Ad{}}}}}{{h{}{{b{}}}}}{}}`{{{j{{Eb{ce}}}}Al}BnA`{{Af{}{{Ab{c}}{Ad{c}}}}}}{{{j{{Ed{cegi}}}}Al}BnA`{{Af{}{{Ab{c}}{Ad{c}}}}}{{Af{}{{Ab{c}}{Ad{}}}}}{{h{}{{b{}}}}}}{C`{{j{c}}}{}}0{C`{{j{Ahc}}}{}}0{{{j{{Eb{ce}}}}Bl}{{l{g}}}A`{{Af{}{{Ab{c}}{Ad{c}}}}}{}}5`{C`Bn}0{{{Ed{cegi}}}{{Eb{ce}}}A`{{Af{}{{Ab{c}}{Ad{c}}}}}{{Af{}{{Ab{c}}{Ad{}}}}}{{h{}{{b{}}}}}}{cc{}}0{{{j{{Eb{ce}}}}Al}AnA`{{Af{}{{Ab{c}}{Ad{c}}}}}}{{{j{{Ed{cegi}}}}Al}AnA`{{Af{}{{Ab{c}}{Ad{c}}}}}{{Af{}{{Ab{c}}{Ad{}}}}}{{h{}{{b{}}}}}}{{}C`}0{ce{}{}}0{{{j{{Eb{c{Ej{c}}}}}}g}{{Eb{e{Ej{e}}}}}A`{{A`{}{{b{}}}}}{{En{{j{c}}}{{El{e}}}}}}{{{j{{Ed{c{Ej{c}}{Ej{c}}e}}}}i}{{Ed{g{Ej{g}}{Ej{g}}e}}}A`{{h{}{{b{}}}}}{{A`{}{{b{}}}}}{{En{{j{c}}}{{El{g}}}}}}{{{j{{Eb{ce}}}}}BlA`{{Af{}{{Ab{c}}{Ad{c}}}}}}{{{j{{Ed{cegi}}}}}BlA`{{Af{}{{Ab{c}}{Ad{c}}}}}{{Af{}{{Ab{c}}{Ad{}}}}}{{h{}{{b{}}}}}}{{{j{{Eb{ce}}}}}CdA`{{Af{}{{Ab{c}}{Ad{c}}}}}}{{{j{{Ed{cegi}}}}}CdA`{{Af{}{{Ab{c}}{Ad{c}}}}}{{Af{}{{Ab{c}}{Ad{}}}}}{{h{}{{b{}}}}}}={{{j{{Ed{cegi}}}}Bl}{{l{k}}}A`{{Af{}{{Ab{c}}{Ad{c}}}}}{{Af{}{{Ab{c}}{Ad{}}}}}{{h{}{{b{}}}}}{}}`{{{Ch{{l{c}}}}{Ch{{l{e}}}}}{{Eb{ce}}}{A`Ef}{{Af{}{{Ab{c}}{Ad{c}}}}{Eh{cc}}}}54{{{j{Ah{Eb{ce}}}}}BnA`{{Af{}{{Ab{c}}{Ad{c}}}}{Eh{cc}}}}{{{j{{Ed{cegi}}}}}{{l{k}}}A`{{Af{}{{Ab{c}}{Ad{c}}}}}{{Af{}{{Ab{c}}{Ad{}}}}}{{h{}{{b{}}}}}{}}`{c{{Dn{e}}}{}{}}000{{{j{c}}}E`{}}0{{{j{{Eb{ce}}}}}{{l{g}}}A`{{Af{}{{Ab{c}}{Ad{c}}}}}{}}3````````````{{{j{{F`{c}}}}}{{l{e}}}{{Ef{}{{b{Fb}}}}}{}}{{{j{{F`{c}}}}{j{Ah{Aj{e}}}}Al{j{{Aj{g}}}}}An{{Ef{}{{b{Fb}}}}}{}{}}`{{{j{c}}}{{j{e}}}{}{}}00000{{{j{Ahc}}}{{j{Ahe}}}{}{}}00000{{{j{{F`{c}}}}Bl}{{l{e}}}{{Ef{}{{b{Fb}}}}}{}}`{{{j{Fd}}}Fd}{{{j{c}}{j{Ahe}}}Bn{}{}}{{{j{{F`{c}}}}Al}Bn{{Ef{}{{b{Fb}}}}}}0```{C`{{j{c}}}{}}00000{C`{{j{Ahc}}}{}}000005`{C`Bn}00000{{{j{{F`{c}}}}Bl}Bn{{Ef{}{{b{Fb}}}}}}{{{j{Fd}}{j{AhFf}}}{{Dn{BnFh}}}}{cc{}}00000{{{j{Ahc}}}{{Fj{Fd}}}Fl}{{{j{{F`{c}}}}Al}An{{Ef{}{{b{Fb}}}}}}{{{j{Fd}}{j{{Aj{Fn}}}}{j{{Aj{Fn}}}}}An}{{}C`}00000{ce{}{}}0000000{{{j{Fd}}Cd}{{`{{Gb{}{{G`{{Ch{Fn}}}}}}}}}}``{{{j{{F`{c}}}}}Cd{{Ef{}{{b{Fb}}}}}}{{{j{{F`{c}}}}Bl}{{l{e}}}{{Ef{}{{b{Fb}}}}}{}}`{{{j{{F`{c}}}}}{{j{Gd}}}{{Ef{}{{b{Fb}}}}}}`{{}Gf}{{{j{Fd}}Cd}Gh}{{{l{c}}}{{F`{c}}}{{Ef{}{{b{Fb}}}}}}{{{Ch{Gj}}}Fd}{{{l{c}}e}{{Gl{{F`{c}}}}}{{Ef{}{{b{Fb}}}}}{{Gn{Dd}}}}{{{j{AhGf}}}{{Cj{c}}}{}}{{{j{AhGh}}}{{Cj{c}}}{}}{{{j{{F`{c}}}}}Bl{{Ef{}{{b{Fb}}}}}}{AlFd}{c{{H`{e}}}{}{}}{{{j{{F`{c}}}}}Db{{Ef{}{{b{Fb}}}}}}`{{{j{{F`{c}}}}}{{j{Dd}}}{{Ef{}{{b{Fb}}}}}}`{{Al{Hd{Hb}}}Bn}`{{{j{Ah{F`{c}}}}Bd}Bn{{Ef{}{{b{Fb}}}}}}`{{{j{Fd}}{j{Ahc}}}{{Fj{{Ch{Fn}}}}}Fl}{{{j{Fd}}{j{Fb}}{j{{Hf{Fb}}}}Cd{j{{Aj{Fn}}}}}{{`{{Gb{}{{G`{C`}}}}}}}}{{{j{Fd}}{j{{Hh{{Hf{Fb}}}}}}Cd{j{{Aj{Fn}}}}}Hj}{{{j{{Aj{Fn}}}}{j{Ahc}}}{{Fj{Bn}}}Hl}{{{j{{F`{c}}}}Cd}Bn{{Ef{}{{b{Fb}}}}}}{{{j{{F`{c}}}}Cd}{{Gl{Bn}}}{{Ef{}{{b{Fb}}}}}}{{{j{{F`{c}}}}Al}Bn{{Ef{}{{b{Fb}}}}}}{{{j{{F`{c}}}}Al}{{Gl{Bn}}}{{Ef{}{{b{Fb}}}}}}{{{j{{F`{c}}}}AlFd}{{Gl{Bn}}}{{Ef{}{{b{Fb}}}}}}`{{{j{{F`{c}}}}}{{l{e}}}{{Ef{}{{b{Fb}}}}}{}}`{{{j{Fd}}{j{Ahc}}}{{Fj{Bn}}}Hl}{{{j{c}}}e{}{}}{{{j{c}}}Bd{}}{{{j{Fd}}}Cd}{c{{Dn{e}}}{}{}}00000000000{{{j{c}}}E`{}}00000{{{j{{F`{c}}}}AlC`C`}{{Gl{Bn}}}{{Ef{}{{b{Fb}}}}}}{{{j{Ah{Cj{c}}}}{j{AhHn}}{j{{Aj{Fn}}}}{j{{Aj{C`}}}}{j{Hj}}{j{I`}}}{{Fj{Bn}}}Hl}{{}Fd}9`{{{j{Fd}}}{{Ch{Fn}}}}`````{{{j{{Ib{c}}}}}{{l{e}}}h{}}{{{j{{Ib{c}}}}{j{Ah{Aj{e}}}}Al{j{{Aj{g}}}}}Anh{}{}}`{{{j{c}}}{{j{e}}}{}{}}0{{{j{Ahc}}}{{j{Ahe}}}{}{}}0{{{j{{Ib{c}}}}Bl}{{l{e}}}h{}}``````{{{j{{Ib{c}}}}Al}Bnh}{{{j{{Ib{c}}}}Ale}Bnh{{En{Al}}}}10{C`{{j{c}}}{}}0{C`{{j{Ahc}}}{}}04```{C`Bn}0{{{j{{Ib{c}}}}Bl}Bnh}{cc{}}0{{{j{{Ib{c}}}}Al}Idh}{{{j{{Ib{c}}}}Al}Anh}{{}C`}0{ce{}{}}0`````````{{{j{{Ib{c}}}}}Cdh}<```{{{j{{Ib{c}}}}}{{j{Gd}}}h}```{{{l{c}}}{{Ib{c}}}h}`{{{l{c}}e}{{Gl{{Ib{c}}}}}h{{Gn{Dd}}}}{{{j{{Ib{c}}}}}Blh}{{{j{{Ib{c}}}}}{{j{Dd}}}h}```{{AlAn{Hd{If}}}Bn}`{{{j{Ah{Ib{c}}}}Bd}Bnh}```{{{j{{Ib{c}}}}Al}Bnh}{{{j{{Ib{c}}}}}{{l{e}}}h{}}{c{{Dn{e}}}{}{}}000{{{j{c}}}E`{}}02``````{{{j{{Ih{ce}}}}IjBlBb}BnB`{{B`{}{{b{}}}}}}{{{j{{Ih{ce}}}}}lB`{{h{}{{b{}}}}}}{{{j{c}}}{{j{e}}}{}{}}{{{j{Ahc}}}{{j{Ahe}}}{}{}}{C`{{j{c}}}{}}{C`{{j{Ahc}}}{}}{C`Bn}{{{j{{Ih{ce}}}}Al}BnB`{{h{}{{b{}}}}}}{{{j{{Ih{ce}}}}}BnB`{{h{}{{b{}}}}}}{{{j{{Ih{ce}}}}{Il{g}}}BnB`{{h{}{{b{}}}}}In}{{{j{{Ih{ce}}}}Al{Cj{{j{Hj}}}}}{{J`{Cd}}}B`{{Bj{}{{b{}}}}}}{{{j{{Ih{ce}}}}Al{Cj{{Ch{Hn}}}}}{{J`{Cd}}}B`{{h{}{{b{}}}}}}4{cc{}}{{Bd{l{c}}{l{e}}Al{j{{Aj{Bl}}}}}{{Ih{ce}}}B`{{Bj{}{{b{}}}}}}{{Bd{l{c}}{l{e}}{j{g}}}{{Ih{ce}}}{BjB`}{{Bj{}{{b{}}}}}{{Af{}{{Ab{}}{Ad{}}}}}}{{{j{{Ih{ce}}}}Bl}{{l{Jb}}}B`{{h{}{{b{}}}}}}{{{j{{Ih{ce}}}}Bl}{{j{Jb}}}B`{{h{}{{b{}}}}}}{{}C`}{ce{}{}}```{{{j{{Ih{ce}}}}}{{j{Gd}}}B`{{h{}{{b{}}}}}}```{{Bd{l{c}}{l{e}}Al}{{Ih{ce}}}B`{{h{}{{b{}}}}}}{{{j{{Ih{ce}}}}}CdB`{{h{}{{b{}}}}}}{{{j{{Ih{ce}}}}}{{j{Dd}}}B`{{h{}{{b{}}}}}}````````````{c{{Dn{e}}}{}{}}0{{{j{c}}}E`{}}```````````````````````{{{j{c}}}{{j{e}}}{}{}}0000{{{j{Ahc}}}{{j{Ahe}}}{}{}}0000{{{j{Dd}}}Dd}{{{j{Df}}}Df}{{{j{c}}{j{Ahe}}}Bn{}{}}0{{Df{j{Jd}}}{{Gl{Bn}}}}{{{j{{Dh{c}}}}JfAn}{{`{Hl}}}n}{{{j{{Dh{c}}}}Jf}{{Fj{Bn}}}n}{C`{{j{c}}}{}}0000{C`{{j{Ahc}}}{}}0000{{{j{Ah{Jh{c}}}}}BnHl}{C`Bn}0{{{j{Ah{Jj{c}}}}}BnFl}111{{{j{Dd}}{j{Dd}}}An}{{{j{Df}}{j{Df}}}An}{{{j{c}}{j{e}}}An{}{}}00000{{{j{{Dh{c}}}}Jf}Ann}{{{j{Ah{Jh{c}}}}}{{Fj{Bn}}}Hl}{{{j{Dd}}{j{AhFf}}}Jl}{{{j{Df}}{j{AhFf}}}Jl}{cc{}}000{{{Cj{Jf}}}Dd}1{{{j{{Dh{c}}}}Jf}Jfn}`{{}C`}0000{ce{}{}}0000{{{j{Dd}}}An}0`{DfBl}{Df{{j{Gd}}}}{{}{{`{{Gb{}{{G`{Df}}}}}}}}{{Jfc}{{Jh{c}}}Hl}{c{{Jj{c}}}Fl}{Jf{{Cj{{Jn{Fl}}}}}}{{{j{{Dh{c}}}}Jf}{{Cj{{Jn{Fl}}}}}n}{{}{{j{{Kb{{K`{Jf}}}}}}}}`{{{j{AhDd}}c}Bn{{Kd{Jd}}}}{{{j{Ah{Jj{c}}}}{j{Ah{Aj{Gj}}}}}{{Fj{C`}}}Fl}{{{j{Dd}}}{{Cj{{j{Jf}}}}}}{{{j{Ah{Jj{c}}}}{j{Ah{Aj{Gj}}}}}{{Fj{Bn}}}Fl}`99{{{j{c}}}e{}{}}0{c{{Dn{e}}}{}{}}000000000{{{j{c}}}E`{}}0000{{{j{{Dh{c}}}}{j{Ahe}}}{{Fj{Bn}}}nFl}{{{j{Ah{Jh{c}}}}{j{{Aj{Gj}}}}}{{Fj{C`}}}Hl}6{{{j{Ah{Jh{c}}}}{j{{Aj{Gj}}}}}{{Fj{Bn}}}Hl}{{{j{{Dh{c}}}}{j{Ahe}}}{{Fj{Bn}}}nHl}``````````````{{{j{{Kf{c}}}}IjBlCdKh}BnKj}{{{j{{Kl{c}}}}IjBlCdKhAn}Bn{KjKnIn}}{{{j{Ah{Kf{c}}}}BlCdC`{j{{Hh{{Hf{c}}}}}}{j{{Hh{{Hf{c}}}}}}}BnKj}{{{j{{Kl{c}}}}BlCd{L`{c}}{j{Dd}}}Bn{KjKnIn}}{{{j{{Ld{}{{b{c}}{Ab{e}}{Ad{g}}{Lb{i}}}}}}}{{l{c}}}Kj{{B`{}{{b{c}}}}}{{B`{}{{b{c}}}}}{}}{{{j{{Kf{c}}}}}{{l{c}}}Kj}{{{j{{Lf{c}}}}}{{l{e}}}B`{}}{{{j{c}}}{{j{e}}}{}{}}00{{{j{Ahc}}}{{j{Ahe}}}{}{}}00{{{j{{Ld{}{{b{c}}{Ab{e}}{Ad{g}}{Lb{i}}}}}}Bl}{{L`{c}}}Kj{{B`{}{{b{c}}}}}{{B`{}{{b{c}}}}}{}}{{{j{{Kl{c}}}}CdC`}{{j{{Kf{c}}}}}{KjKnIn}}{{{j{{Lf{c}}}}Bl}L`B`}``{{{j{{Ld{}{{b{c}}{Ab{e}}{Ad{g}}{Lb{i}}}}}}}BnKj{{B`{}{{b{c}}}}}{{B`{}{{b{c}}}}}{}}0{{{j{{Ld{}{{b{c}}{Ab{e}}{Ad{g}}{Lb{i}}}}}}Al}{{J`{Cd}}}Kj{{B`{}{{b{c}}}}}{{B`{}{{b{c}}}}}{}}{{{j{{Ld{}{{b{c}}{Ab{e}}{Ad{g}}{Lb{i}}}}}}Bb}HnKj{{B`{}{{b{c}}}}}{{B`{}{{b{c}}}}}{}}{{{j{{Lf{c}}}}Bb}HnB`}3{{{j{{Ld{}{{b{c}}{Ab{e}}{Ad{g}}{Lb{i}}}}}}Bl}BnKj{{B`{}{{b{c}}}}}{{B`{}{{b{c}}}}}{}}`{C`{{j{c}}}{}}00{C`{{j{Ahc}}}{}}00{C`Bn}00{{{j{{Lf{c}}}}}{{Dl{Dj}}}B`}8{{{j{Ah{Kf{c}}}}}BnKj}{cc{}}00{{{l{{Hf{c}}}}CdAn{j{Ahe}}}{{Fj{{Kf{c}}}}}KjFl}9`{{{j{{Ld{}{{b{c}}{Ab{e}}{Ad{g}}{Lb{i}}}}}}}{{j{{Lh{{Kl{c}}}}}}}Kj{{B`{}{{b{c}}}}}{{B`{}{{b{c}}}}}{}}{{{j{{Lf{c}}}}}{{j{{Lh{Kl}}}}}B`}``{{{j{{Lf{c}}}}Bl}{{j{Kl}}}B`}{{}C`}00?{{{j{{Ld{}{{b{c}}{Ab{e}}{Ad{g}}{Lb{i}}}}}}}{{j{{Lj{BbHn}}}}}Kj{{B`{}{{b{c}}}}}{{B`{}{{b{c}}}}}{}}{{{j{{Lf{c}}}}}{{j{{Lj{BbHn}}}}}B`}`{ce{}{}}00{{{j{{Ld{}{{b{c}}{Ab{e}}{Ad{g}}{Lb{i}}}}}}}{{Il{{Ld{}{{b{c}}{Ab{e}}{Ad{g}}{Lb{i}}}}}}}Kj{{B`{}{{b{c}}}}}{{B`{}{{b{c}}}}}{}}{{{j{{Lf{c}}}}}{{Il{{Lf{c}}}}}B`}{{{l{{Hf{c}}}}CdAn}{{Kf{c}}}Kj}{{{l{{Hf{c}}}}{l{{Hf{c}}}}CdAn}{{Kl{c}}}{KjKnIn}}{{{l{c}}}{{Lf{c}}}B`}{{{j{{Ld{}{{b{c}}{Ab{e}}{Ad{g}}{Lb{i}}}}}}}DbKj{{B`{}{{b{c}}}}}{{B`{}{{b{c}}}}}{}}{{{j{{Ld{}{{b{c}}{Ab{e}}{Ad{g}}{Lb{i}}}}}}}{{j{Dd}}}Kj{{B`{}{{b{c}}}}}{{B`{}{{b{c}}}}}{}}{{{j{{Lf{c}}}}}{{j{Dd}}}B`}{{{j{{Ld{}{{b{c}}{Ab{e}}{Ad{g}}{Lb{i}}}}}}}AlKj{{B`{}{{b{c}}}}}{{B`{}{{b{c}}}}}{}}{{{j{{Lf{c}}}}}AlB`}`{{{j{{Ld{}{{b{c}}{Ab{e}}{Ad{g}}{Lb{i}}}}}}}{{l{e}}}Kj{{B`{}{{b{c}}}}}{{B`{}{{b{c}}}}}{}}{{{j{{Lf{c}}}}}{{l{e}}}B`{}}`{{{j{{Ld{}{{b{c}}{Ab{e}}{Ad{g}}{Lb{i}}}}}}}{{l{g}}}Kj{{B`{}{{b{c}}}}}{{B`{}{{b{c}}}}}{}}1``{{{j{{Kf{c}}}}{j{Ahe}}}{{Fj{Bn}}}KjHl}{c{{Dn{e}}}{}{}}00000{{{j{c}}}E`{}}00{{{j{{Ld{}{{b{c}}{Ab{e}}{Ad{g}}{Lb{i}}}}}}}{{l{i}}}Kj{{B`{}{{b{c}}}}}{{B`{}{{b{c}}}}}{}}{{{j{{Lf{c}}}}}{{l{c}}}B`}``````{{{j{c}}}{{j{e}}}{}{}}{{{j{Ahc}}}{{j{Ahe}}}{}{}}``{{{j{Ll}}}Ll}{{{j{c}}{j{Ahe}}}Bn{}{}}{{eg}{{Gl{Ln}}}{}{{Mb{Ll}{{M`{c}}}}}{{Gn{Dd}}}}{{eg}{{Gl{{F`{{Md{Fb}}}}}}}{}{{Mb{Ll}{{M`{c}}}}}{{Gn{Dd}}}}{{eg}{{Gl{{Ib{Mf}}}}}{}{{Mb{Ll}{{M`{c}}}}}{{Gn{Dd}}}}{C`{{j{c}}}{}}{C`{{j{Ahc}}}{}}`{C`Bn}{{{j{Ll}}{j{Ll}}}An}{{{j{c}}{j{e}}}An{}{}}00{{}{{`{Mh}}}}{{{j{Ll}}{j{AhFf}}}Jl}{cc{}}{{{l{Ln}}}{{Gl{{Mj{An{l{Ln}}}}}}}}{{}C`}{{}Bn}{ce{}{}}{{{j{Gd}}}{{Gl{Ml}}}}``````0{{{Cj{Mn}}An}{{Gl{Ln}}}}{{{j{Gd}}{Cj{Mn}}An}{{Gl{Ln}}}}{An{{Gl{{N`{Mf}}}}}}{{}{{Gl{Nb}}}}`{{}{{Cj{Bl}}}}``{{{j{c}}}e{}{}}{{{j{Gd}}}{{Dn{Llc}}}{}}{{{Mj{{j{Gd}}e}}}{{Dn{Llg}}}{}{{Mb{Mn}{{M`{c}}}}}{}}{{{Mj{Mlc}}}{{Dn{Lle}}}{{Mb{Mn}}}{}}{c{{Dn{e}}}{}{}}0{{{j{c}}}E`{}}{C`Nd}````{{{j{c}}}{{j{e}}}{}{}}0{{{j{Ahc}}}{{j{Ahe}}}{}{}}0`{C`{{j{c}}}{}}0{C`{{j{Ahc}}}{}}0{C`Bn}0{{}{{`{Mh}}}}{{{j{Ah{Nf{c}}}}}{{Fj{Bn}}}Hl}{{{j{Nh}}{j{AhFf}}}Jl}{cc{}}0{{}C`}0{{}Bn}{ce{}{}}0{{{Nf{c}}}NhHl}{c{{Nf{c}}}{}}`{{{j{c}}}Bd{}}{c{{Dn{e}}}{}{}}000{{{j{c}}}E`{}}0{{{j{Ah{Nf{c}}}}{j{{Aj{Gj}}}}}{{Fj{C`}}}Hl}`````{{{j{{Nj{c}}}}{Cj{{j{e}}}}{Cj{{j{g}}}}{Cj{{j{Id}}}}Cd}{{Mj{HjHj}}}A`AfAf}{{{j{Nl}}CdC`}Cd}{{{j{Fb}}CdC`}Cd}{{{j{{l{c}}}}CdC`}Cdn}{{{j{Ah{Aj{c}}}}C`C`}{{Mj{{j{Ahc}}{j{Ahc}}}}}{}}`{{{l{c}}{Nn{{Hh{e}}}}}{{O`{c}}}{B`{Bj{}{{Bh{Hh}}}}}{{A`{}{{b{}}}}}}{{{l{c}}Al{j{{Aj{Bl}}}}}{{O`{c}}}{B`{Bj{}{{Bh{Hh}}}}}}{{{l{c}}{Nn{{Hh{e}}}}g}{{O`{c}}}{B`{Bj{}{{Bh{Hh}}}}}{{A`{}{{b{}}}}}{{Ob{j{j{Id}}CdC`}{{El{Cd}}}}}}","D":"ACl","p":[[17,"Algebra"],[17,"Module"],[17,"Homomorphism"],[10,"ChainComplex",12],[1,"reference"],[5,"Arc",772],[10,"Algebra",773],[10,"Module",774],[17,"Source"],[17,"Target"],[10,"ModuleHomomorphism",775],[0,"mut"],[1,"slice"],[5,"Bidegree",776],[1,"bool"],[10,"FreeChainComplex",12],[5,"BidegreeGenerator",777],[5,"String",778],[17,"TargetComplex"],[17,"ChainMap"],[10,"AugmentedChainComplex",12],[1,"u32"],[1,"unit"],[1,"usize"],[10,"BoundedChainComplex",12],[1,"i32"],[1,"isize"],[5,"Vec",779],[6,"Option",780],[5,"Product",781],[5,"StemIterator",12],[10,"Sized",782],[5,"ValidPrime",783],[6,"SaveDirectory",437],[6,"SaveKind",437],[5,"SaveFile",437],[5,"Adams",781],[5,"Sseq",781],[6,"Result",784],[5,"TypeId",785],[5,"FiniteChainComplex",100],[5,"FiniteAugmentedChainComplex",100],[10,"ZeroModule",786],[10,"ZeroHomomorphism",775],[5,"FullModuleHomomorphism",787],[17,"Output"],[10,"FnMut",788],[5,"Resolution",157],[5,"MilnorAlgebra",789],[5,"MilnorSubalgebra",157],[5,"Formatter",790],[5,"Error",790],[8,"Result",791],[10,"Read",792],[8,"PPartEntry",789],[17,"Item"],[10,"Iterator",793],[1,"str"],[5,"SubalgebraIterator",157],[5,"SignatureIterator",157],[1,"u8"],[8,"Result",794],[10,"Into",795],[5,"IterBridge",796],[5,"SenderData",157],[5,"Sender",797],[8,"FreeModule",798],[8,"FreeModuleHomomorphism",799],[5,"Matrix",800],[10,"Write",792],[6,"FpVector",801],[5,"AugmentedMatrix",800],[5,"MuResolution",303],[5,"Subspace",802],[5,"SenderData",303],[5,"MuResolutionHomomorphism",389],[6,"SliceMut",801],[5,"BidegreeRange",803],[10,"Sync",782],[5,"Range",804],[5,"MuFreeModuleHomomorphism",799],[5,"Path",805],[5,"PathBuf",805],[5,"ChecksumWriter",437],[5,"ChecksumReader",437],[8,"Result",790],[5,"Box",806],[5,"HashSet",807],[5,"Mutex",808],[10,"AsRef",795],[5,"SecondaryComposite",568],[6,"Slice",801],[10,"PairAlgebra",809],[5,"SecondaryHomotopy",568],[10,"Send",782],[8,"CompositeData",568],[17,"Underlying"],[10,"SecondaryLift",568],[5,"SecondaryResolution",568],[5,"OnceBiVec",810],[5,"DashMap",811],[5,"Config",669],[8,"QueryModuleResolution",669],[17,"Error"],[10,"TryInto",795],[5,"FiniteDimensionalModule",812],[8,"CCC",0],[10,"Subscriber",813],[1,"tuple"],[6,"Value",814],[6,"AlgebraType",815],[8,"UnstableResolution",303],[8,"SteenrodModule",816],[1,"char"],[5,"LogWriter",724],[5,"Throughput",724],[5,"QuotientModule",817],[5,"AdemAlgebra",818],[5,"ChainMap",12],[8,"Yoneda",759],[10,"Fn",788],[6,"ChainComplexGrading",12],[6,"Magic",157],[8,"Resolution",303],[8,"ResolutionHomomorphism",389],[8,"UnstableResolutionHomomorphism",389],[15,"Split",566]],"r":[[17,819],[21,100],[22,100],[670,724],[691,724],[696,724]],"b":[[715,"impl-TryFrom%3C%26str%3E-for-Config"],[716,"impl-TryFrom%3C(%26str,+T)%3E-for-Config"],[717,"impl-TryFrom%3C(Value,+T)%3E-for-Config"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAGYCTwABAAMACAABAAsAAgARAAEAFAAHAB0AAQAgAAUAJwAFAC4ABgA2AAQAPAABAEEAAABDAAIASQAAAEsABQBSAAIAVwAYAHEADACAAAMAhgAZAKEAAACmAAAAqQATAL4AFgDWAAAA3QABAOAABQDsAAEA7wAZAAsBAAAOAR0ALQECADIBAAA0ARAARgEKAFUBAgBgAQwAbgEGAHYBAAB7AQoAhwEBAIoBBQCXAQAAmgEBAJ0BGAC5AQAAuwEAAMABAADCAQIAyAETAN0BHQD/AQAAAgIFAA0CBwAWAgAAGAIiAD0CAAA/AgUARgIAAEgCCwBWAhMAbQIEAHQCBwB/AgkAigITAJ8CAAChAgAAowIFAKwCCQC4AgEAvAICAMACAQDFAgIAyQIIANMCEQDnAgIA7QIOAP0CBAADAwEA"}],\
["ext_m_n",{"t":"","n":[],"q":[],"i":[],"f":"","D":"`","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA"}],\
["filtration_one",{"t":"","n":[],"q":[],"i":[],"f":"","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["fp",{"t":"SSSSSQCCCCCCSSJSSSISSSSSSQFHOHHNNNNNNNHNNNNHOHHHHHHNHNNNHFFFFFFFCOOOOOOOOOCOCOOOOCOOCCOOFNNNNNNNNNNNNNNNNNONNONNNNNNFNNNNOONNNNNNNNNNNONNNNONNNFFFNNNNNNNNNNNNNNNNNOONNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNOONFNNNNNNNNNNNNONNNNNNONNNNNNNNNFNNNNNNNNNNNONNNNNONNNNNNNONNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNEPPKGSMNNCNNNNQNNNNHNNNQQQNNHCHHHNNHCNMNNNNNKNMMMMMHQNMMFFNNNNHNNNNNNONNNNNNNNNNNNNNNONNNNNNNOFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSHCIHHHCCCCCCFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNOOONNNNNNOOONNNNNNNNNNNNNNNNOONNNNNNNNNNNNNFFOONNNNOOOONNNNONNOONNONNNNNNNOOOONNNNNONNNNNNNPPPPGGGGPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQQNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["MAX_MULTINOMIAL_LEN","NUM_PRIMES","ODD_PRIMES","PRIMES","PRIME_TO_INDEX_MAP","const_for","constants","limb","matrix","prime","simd","vector","BINOMIAL4_TABLE","BINOMIAL4_TABLE_SIZE","BINOMIAL_TABLE","BITS_PER_LIMB","BYTES_PER_LIMB","INVERSE_TABLE","Limb","MAX_MULTINOMIAL_LEN","MAX_PRIME","NOT_A_PRIME","NUM_PRIMES","PRIMES","PRIME_TO_INDEX_MAP","populate_binomial_table","LimbBitIndexPair","add","bit_index","bit_length","bitmask","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","entries_per_limb","fmt","from","init","into","is_reduced","limb","limb_bit_index_pair","number","pack","range","reduce","sign_rule","to_owned","truncate","try_from","try_into","type_id","unpack","AffineSubspace","AugmentedMatrix","Matrix","MatrixSliceMut","QuasiInverse","Subquotient","Subspace","affine","col_end","col_start","columns","dimension","end","gens","image","inner","linear_part","m4ri","matrix","matrix_inner","offset","p","pivots","preimage","quasi_inverse","quotient","start","subquotient","subspace","vectors","vectors","AffineSubspace","borrow","borrow_mut","clone","clone_into","contains","contains_space","deref","deref_mut","drop","eq","fmt","fmt","from","from","init","into","linear_part","linear_part","new","offset","offset","sum","to_owned","to_string","try_from","try_into","type_id","M4riTable","add","borrow","borrow_mut","clear","columns","data","default","deref","deref_mut","drop","fmt","from","generate","init","into","is_empty","len","min_limb","new","reduce","reduce_naive","rows","rows","try_from","try_into","type_id","AugmentedMatrix","Matrix","MatrixSliceMut","add_assign","add_identity","add_masked","apply","as_slice_mut","assign","augmented_from_vec","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","col_end","col_start","columns","columns","columns","compute_image","compute_image","compute_kernel","compute_kernel","compute_quasi_inverse","compute_quasi_inverse","compute_quasi_inverses","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop_first","end","eq","extend_column_dimension","extend_column_dimension","extend_image","extend_to_surjection","find_first_row_in_block","find_pivots_permutation","fmt","fmt","from","from","from","from_bytes","from_rows","from_vec","identity","index","index_mut","init","init","init","initialize_pivots","inner","into","into","into","into_iter","into_iter","into_iter","into_matrix","into_tail_segment","is_zero","iter","iter","iter_mut","iter_mut","maybe_par_iter_mut","maybe_par_iter_mut","mul","mul_assign","new","new","new_with_capacity","new_with_capacity","p","pivots","pivots","pivots_mut","prime","read_pivot","row","row","row_mut","row_mut","row_op","row_op_naive","row_reduce","row_segment","row_segment_mut","row_slice","rows","rows","safe_row_op","segment","set_to_zero","slice_mut","split_borrow","start","to_bytes","to_owned","to_owned","to_string","to_vec","trim","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vectors","vectors","write_pivot","QuasiInverse","apply","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","from","from_bytes","image","image_dimension","init","into","new","pivots","preimage","preimage","prime","source_dimension","stream_quasi_inverse","target_dimension","to_bytes","to_owned","try_from","try_into","type_id","Subquotient","add_gen","ambient_dimension","borrow","borrow_mut","clear_gens","clone","clone_into","complement_pivots","deref","deref_mut","dimension","dimension","drop","fmt","from","from_parts","gens","gens","init","into","is_empty","new","new_full","prime","quotient","quotient","quotient_dimension","quotient_pivots","reduce","reduce_by_quotient","reduce_matrix","set_to_full","subspace_dimension","subspace_gens","to_owned","to_string","try_from","try_into","type_id","zeros","Subspace","add_basis_elements","add_vector","add_vectors","ambient_dimension","basis","borrow","borrow_mut","clone","clone_into","contains","contains_space","deref","deref","deref_mut","dimension","drop","entire_space","eq","fmt","fmt","from","from_bytes","from_matrix","init","into","is_empty","iter","iter_all_vectors","matrix","new","reduce","set_to_entire","set_to_zero","sum","to_bytes","to_owned","to_string","try_from","try_into","type_id","update_then_row_reduce","Binomial","InvalidPrime","NotAnInteger","Prime","PrimeError","TWO","as_i32","as_u32","as_usize","binomial","borrow","borrow_mut","clone","clone_into","def_prime_static","deref","deref_mut","drop","eq","factor_pk","fmt","fmt","from","impl_op_pn_u32","impl_prime_ops","impl_try_from","init","into","inverse","iter","log2","logp","minus_one_to_the_n","pow","pow_mod","power_mod","primes_generic","product","to_dyn","to_owned","to_string","try_from","try_into","type_id","Binomial","binomial","binomial2","binomial4","binomial4_rec","binomial_odd","binomial_odd_is_zero","direct_binomial","impl_binomial","multinomial","multinomial2","multinomial_odd","BinomialIterator","BitflagIterator","borrow","borrow","borrow_mut","borrow_mut","combinations","deref","deref","deref_mut","deref_mut","drop","drop","flag","from","from","init","init","into","into","into_iter","into_iter","new","new","new_fixed_length","next","next","par_bridge","par_bridge","remaining","set_bit_iterator","try_from","try_from","try_into","try_into","type_id","type_id","value","P2","P3","P5","P7","ValidPrime","add","add","add","add","add","add","add","add","add","add","as_i32","as_i32","as_i32","as_i32","as_i32","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","div","div","div","div","div","div","div","div","div","div","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","hash","hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","is_prime","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","new","new_unchecked","p","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","serialize","serialize","serialize","serialize","serialize","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","to_dyn","to_dyn","to_dyn","to_dyn","to_dyn","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","LIMBS_PER_SIMD","add_simd","x86_64","SimdLimb","load","store","xor","impl_fpvectorp","impl_slicemutp","impl_slicep","inner","iter","vector_generic","FpVectorP","SliceMutP","SliceP","add","add","add_basis_element","add_basis_element","add_carry","add_carry_limb","add_masked","add_nosimd","add_offset","add_offset_nosimd","add_shift_left","add_shift_none","add_shift_right","add_tensor","add_truncate","add_unmasked","as_slice","as_slice","as_slice_mut","assign","assign","assign_partial","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","copy","copy_from_slice","density","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","end","end","entry","entry","eq","extend_len","first_nonzero","fmt","fmt","fmt","from","from","from","from","from","from","from_raw_parts","hash","init","init","init","into","into","into","is_empty","is_empty","is_zero","is_zero","iter","iter","iter_nonzero","iter_nonzero","len","len","len","limb_masks","limb_range","limb_range_inner","limbs","limbs","limbs","limbs","limbs_mut","max_limb_mask","min_limb_mask","new","new_with_capacity","offset","p","p","p","prime","prime","prime","reduce_limbs","scale","scale","set_entry","set_entry","set_scratch_vector_size","set_to_zero","set_to_zero","sign_rule","slice","slice","slice_mut","slice_mut","start","start","to_owned","to_owned","to_owned","trim_start","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","FpVectorIterator","FpVectorNonZeroIteratorP","bit_length","bit_mask","borrow","borrow","borrow_mut","borrow_mut","counter","cur_limb","cur_limb","cur_limb_entries_left","deref","deref","deref_mut","deref_mut","dim","drop","drop","entries_left","entries_per_limb_m_1","from","from","idx","init","init","into","into","into_iter","into_iter","len","limb_index","limb_index","limbs","limbs","multiunzip","new","new","next","next","p","skip_n","try_from","try_from","try_into","try_into","type_id","type_id","Big","Big","Big","Big","FpVector","FpVectorNonZeroIterator","Slice","SliceMut","_2","_2","_2","_2","_3","_3","_3","_3","_5","_5","_5","_5","_7","_7","_7","_7","add","add","add_assign","add_basis_element","add_basis_element","add_carry","add_masked","add_nosimd","add_offset","add_offset_nosimd","add_tensor","add_truncate","add_unmasked","as_slice","as_slice","as_slice_mut","assign","assign","assign_partial","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","copy","copy_from_slice","density","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch_vector","dispatch_vector_inner","drop","drop","drop","drop","entry","entry","eq","extend_len","first_nonzero","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_slice","hash","impl_try_into","init","init","init","init","into","into","into","into","into_iter","into_iter","is_empty","is_empty","is_zero","is_zero","iter","iter","iter_nonzero","iter_nonzero","len","len","limbs","limbs_mut","multiunzip","new","new_with_capacity","next","next","num_limbs","padded_len","prime","prime","prime","scale","scale","serialize","set_entry","set_entry","set_scratch_vector_size","set_to_zero","set_to_zero","sign_rule","slice","slice","slice_mut","slice_mut","to_bytes","to_owned","to_owned","to_owned","to_string","to_string","trim_start","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_bytes"],"q":[[0,"fp"],[12,"fp::constants"],[26,"fp::limb"],[57,"fp::matrix"],[88,"fp::matrix::affine"],[116,"fp::matrix::m4ri"],[143,"fp::matrix::matrix_inner"],[274,"fp::matrix::quasi_inverse"],[304,"fp::matrix::subquotient"],[345,"fp::matrix::subspace"],[387,"fp::prime"],[431,"fp::prime::binomial"],[443,"fp::prime::iter"],[481,"fp::prime::primes_generic"],[691,"fp::simd"],[694,"fp::simd::x86_64"],[698,"fp::vector"],[704,"fp::vector::inner"],[833,"fp::vector::iter"],[881,"fp::vector::vector_generic"],[1047,"core::fmt"],[1048,"core::iter::traits::iterator"],[1049,"core::ops::range"],[1050,"core::option"],[1051,"core::result"],[1052,"core::any"],[1053,"alloc::string"],[1054,"alloc::vec"],[1055,"std::io::error"],[1056,"std::io"],[1057,"core::slice::iter"],[1058,"maybe_rayon::concurrent::prelude"],[1059,"core::ops::function"],[1060,"core::convert"],[1061,"rayon::iter::par_bridge"],[1062,"serde::de"],[1063,"core::hash"],[1064,"core::cmp"],[1065,"serde::ser"],[1066,"core::core_arch::x86"],[1067,"core::clone"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,7,7,7,7,7,7,7,0,7,7,7,7,0,7,0,0,0,0,0,0,7,0,7,7,7,0,0,0,0,0,0,0,0,0,26,26,24,41,31,41,32,31,18,0,20,0,18,24,24,32,0,41,31,0,0,26,24,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,0,0,24,26,26,24,24,24,24,26,24,31,26,24,31,24,31,24,31,26,26,26,24,24,24,31,24,31,24,31,31,26,24,31,31,26,24,31,31,26,24,31,31,31,24,24,31,24,24,24,24,24,24,26,24,31,24,24,24,24,24,24,26,24,31,24,31,26,24,31,24,24,24,31,31,24,26,24,26,24,26,24,24,24,24,31,24,31,24,24,24,24,24,24,26,24,26,24,24,24,24,31,31,26,26,24,24,31,24,24,24,31,24,24,31,24,24,24,26,24,31,26,24,31,26,24,31,26,24,24,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,46,46,0,0,0,3,3,3,0,46,46,46,46,0,46,46,46,46,0,46,46,46,0,0,0,46,46,0,0,0,0,0,3,3,0,0,3,3,46,46,46,46,46,0,47,47,47,47,47,47,0,0,47,47,47,0,0,49,50,49,50,0,49,50,49,50,49,50,49,49,50,49,50,49,50,49,50,49,50,49,49,50,49,50,49,49,49,50,49,50,49,50,50,0,0,0,0,0,52,52,53,53,54,54,55,55,28,28,52,53,54,55,28,52,53,54,55,28,52,53,54,55,28,52,53,54,55,28,52,53,54,55,28,52,53,54,55,28,52,53,54,55,28,52,53,54,55,28,52,52,53,53,54,54,55,55,28,28,52,53,54,55,28,52,52,53,53,54,54,55,55,28,28,52,52,53,53,54,54,55,55,28,28,52,53,54,55,28,28,52,53,54,55,28,52,53,54,55,28,52,53,54,55,28,0,52,52,53,53,54,54,55,55,28,28,28,28,28,52,53,54,55,28,52,52,53,53,54,54,55,55,28,28,52,53,54,55,28,52,52,53,53,54,54,55,55,28,28,52,52,53,53,54,54,55,55,28,28,52,52,53,53,54,54,55,55,28,28,52,53,54,55,28,52,53,54,55,28,52,53,54,55,28,52,52,53,53,54,54,55,55,28,28,52,53,54,55,28,52,53,54,55,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,63,62,63,62,62,63,62,62,62,63,63,63,63,62,63,62,63,62,62,63,62,62,64,63,62,64,63,62,64,62,64,63,62,62,62,64,63,62,64,63,62,64,63,64,63,62,64,62,62,62,62,64,63,62,62,64,64,63,63,62,62,62,64,63,62,64,63,62,64,62,64,62,64,62,64,62,64,62,64,64,64,62,62,64,63,62,64,64,62,62,64,62,64,63,62,64,63,63,62,63,62,63,62,62,63,62,62,64,62,63,64,63,62,64,64,62,62,64,63,62,64,63,62,64,63,0,0,71,71,71,72,71,72,71,71,72,72,71,72,71,72,72,71,72,71,71,71,72,72,71,72,71,72,71,72,71,71,72,71,72,72,71,72,71,72,72,71,71,72,71,72,71,72,73,21,19,27,0,0,0,0,73,21,19,27,73,21,19,27,73,21,19,27,73,21,19,27,21,27,21,21,27,21,27,21,21,21,27,21,27,21,27,21,21,27,21,73,21,19,27,73,21,19,27,21,19,21,19,27,21,21,73,21,19,27,73,21,19,27,21,0,0,73,21,19,27,21,19,21,21,21,21,21,19,19,27,73,21,19,19,19,19,27,27,27,21,21,21,0,73,21,19,27,73,21,19,27,73,21,21,19,21,19,21,19,21,19,21,19,21,21,73,21,21,73,73,21,21,21,19,27,21,27,21,21,27,21,21,27,21,21,19,21,27,21,21,19,19,21,19,21,73,21,19,27,73,21,21,21,21,21,21,19,27,73,21,19,27,21],"f":"```````````````````````````{{cbbd}bf}`{chf}{cbf}{{{j{c}}}{{j{e}}}{}{}}{{{j{lc}}}{{j{le}}}{}{}}{{{j{n}}}n}{{{j{c}}{j{le}}}A`{}{}}{h{{j{c}}}{}}{h{{j{lc}}}{}}{hA`}8{{{j{n}}{j{lAb}}}Ad}{cc{}}{{}h}{ce{}{}}{{cb}Aff}`{{ch}nf}{{ch}hf}{{ce}bf{{Aj{}{{Ah{d}}}}}}{{chh}{{Al{h}}}f}{{cb}bf}{{bb}d}{{{j{c}}}e{}{}}{{cb}{{An{b}}}f}{c{{B`{e}}}{}{}}0{{{j{c}}}Bb{}}{{cb}{{`{{Aj{}{{Ah{b}}}}}}}f}````````````````````````````````{{{j{c}}}{{j{e}}}{}{}}{{{j{lc}}}{{j{le}}}{}{}}{{{j{Bd}}}Bd}{{{j{c}}{j{le}}}A`{}{}}{{{j{Bd}}Bf}Af}{{{j{Bd}}{j{Bd}}}Af}{h{{j{c}}}{}}{h{{j{lc}}}{}}{hA`}3{{{j{Bd}}{j{lAb}}}Ad}0{cc{}}{BhBd}{{}h}{ce{}{}}{{{j{Bd}}}{{j{Bh}}}}`{{BjBh}Bd}{{{j{Bd}}}{{j{Bj}}}}`{{{j{Bd}}{j{Bd}}}Bd}{{{j{c}}}e{}{}}{{{j{c}}}Bl{}}{c{{B`{e}}}{}{}}0{{{j{c}}}Bb{}}`{{{j{lBn}}hh}A`}{{{j{c}}}{{j{e}}}{}{}}{{{j{lc}}}{{j{le}}}{}{}}{{{j{lBn}}}A`}``{{}Bn}{h{{j{c}}}{}}{h{{j{lc}}}{}}{hA`}{{{j{Bn}}{j{lAb}}}Ad}{cc{}}{{{j{lBn}}{j{C`}}}A`}{{}h}{ce{}{}}{{{j{Bn}}}Af}{{{j{Bn}}}h}`{{hh}Bn}{{{j{Bn}}{j{l{Cb{b}}}}}A`}{{{j{Bn}}{j{lC`}}h}A`}{{{j{Bn}}}{{j{{Cb{h}}}}}}`{c{{B`{e}}}{}{}}0{{{j{c}}}Bb{}}```{{{j{lC`}}{j{C`}}}A`}{{{j{lCd}}}A`}{{{j{lCd}}{j{C`}}{j{{Cb{h}}}}}A`}{{{j{C`}}CfdBf}A`}{{{j{lC`}}}Cd}4{{Ch{j{{Cb{{Cj{d}}}}}}}{{Cl{hC`}}}}{{{j{c}}}{{j{e}}}{}{}}00{{{j{lc}}}{{j{le}}}{}{}}00{{{j{C`}}}C`}{{{j{Cn}}}Cn}{{{j{c}}{j{le}}}A`{}{}}0``{{{j{Cd}}}h}{{{j{C`}}}h}`{{{j{C`}}hh}Bh}{{{j{Cn}}}Bh}{{{j{C`}}h}Bh}1{{{j{C`}}hh}D`}{{{j{Cn}}}D`}{Cn{{Cl{D`D`}}}}{h{{j{c}}}{}}00{{{j{Cn}}}{{j{C`}}}}{h{{j{lc}}}{}}0{{{j{lCn}}}{{j{lC`}}}}1{hA`}00{CnCn}`{{{j{C`}}{j{C`}}}Af}{{{j{lC`}}h}A`}{{{j{lCn}}h}A`}{{{j{lC`}}hh{j{Bh}}h}{{Cj{h}}}}{{{j{lC`}}hhh}{{Cj{h}}}}{{{j{C`}}h}h}{{{j{lC`}}c}{{Cj{h}}}{{Aj{}{{Ah{h}}}}}}{{{j{C`}}{j{lAb}}}Ad}0{cc{}}00{{Chhh{j{lc}}}{{Db{C`}}}Dd}{{Ch{Cj{Bj}}}C`}{{Ch{j{{Cb{{Cj{d}}}}}}}C`}{{Chh}C`}{{{j{C`}}c}{{j{e}}}{}{}}{{{j{lC`}}c}{{j{le}}}{}{}}{{}h}00{{{j{lC`}}}A`}`{ce{}{}}00{{{j{C`}}}c{}}{C`c{}}{{{j{lC`}}}c{}}{CnC`}{{Cnhhh}C`}{{{j{C`}}}Af}{{{j{Cd}}}{{`{{Aj{}{{Ah{Bf}}}}}}}}{{{j{C`}}}{{Df{Bj}}}}{{{j{lCd}}}{{`{{Aj{}{{Ah{Cf}}}}}}}}{{{j{lC`}}}{{Dh{Bj}}}}{{{j{lCd}}}{{`{{Dj{}{{Ah{Cf}}}}}}}}{{{j{lC`}}}{{`{{Dj{}{{Ah{{j{lBj}}}}}}}}}}{{{j{C`}}{j{C`}}}C`}{{{j{lC`}}d}A`}{{Chhh}C`}{{Chh{Dl{h}}}Cn}{{Chhhhh}C`}{{Chh{j{{Cb{h}}}}hh}Cn}`{{{j{C`}}}{{j{{Cb{Dn}}}}}}`{{{j{lC`}}}{{j{l{Cb{Dn}}}}}}{{{j{C`}}}Ch}{{h{j{lc}}}{{Db{{Cj{Dn}}}}}Dd}{{{j{lCd}}h}Bf}{{{j{C`}}h}Bf}{{{j{lCd}}h}Cf}{{{j{lC`}}h}Cf}{{{j{lC`}}hhhCh}A`}0{{{j{lC`}}}h}{{{j{Cn}}hhh}Bf}{{{j{lCn}}hhh}Cf}{{{j{lCd}}hh}Cd}{{{j{Cd}}}h}{{{j{C`}}}h}{{{j{lC`}}hhd}A`}{{{j{lCn}}hh}Cd}{{{j{lC`}}}A`}{{{j{lC`}}hhhh}Cd}{{{j{lC`}}hh}{{Cl{{j{lBj}}{j{lBj}}}}}}`{{{j{C`}}{j{lc}}}{{Db{A`}}}E`}{{{j{c}}}e{}{}}0{{{j{c}}}Bl{}}{{{j{C`}}}{{Cj{{Cj{d}}}}}}{{{j{lC`}}hhh}A`}{c{{B`{e}}}{}{}}00000{{{j{c}}}Bb{}}00``{{{j{{Cb{Dn}}}}{j{lc}}}{{Db{A`}}}E`}`{{{j{D`}}CfdBf}A`}{{{j{c}}}{{j{e}}}{}{}}{{{j{lc}}}{{j{le}}}{}{}}{{{j{D`}}}D`}{{{j{c}}{j{le}}}A`{}{}}{h{{j{c}}}{}}{h{{j{lc}}}{}}{hA`}{{{j{D`}}{j{D`}}}Af}{{{j{D`}}{j{lAb}}}Ad}{cc{}}{{Ch{j{lc}}}{{Db{D`}}}Dd}`{{{j{D`}}}h}{{}h}{ce{}{}}{{{An{{Cj{Dn}}}}C`}D`}{{{j{D`}}}{{An{{j{{Cb{Dn}}}}}}}}{{{j{D`}}}{{j{C`}}}}`{{{j{D`}}}Ch}6{{Ch{j{lc}}{j{l{Cb{e}}}}{j{{Cb{g}}}}}{{Db{A`}}}Dd{}{}}7{{{j{D`}}{j{lc}}}{{Db{A`}}}E`}{{{j{c}}}e{}{}}{c{{B`{e}}}{}{}}0{{{j{c}}}Bb{}}`{{{j{lEb}}Bf}A`}{{{j{Eb}}}h}{{{j{c}}}{{j{e}}}{}{}}{{{j{lc}}}{{j{le}}}{}{}}{{{j{lEb}}}A`}{{{j{Eb}}}Eb}{{{j{c}}{j{le}}}A`{}{}}{{{j{Eb}}}{{`{{Aj{}{{Ah{h}}}}}}}}{h{{j{c}}}{}}{h{{j{lc}}}{}}8`{hA`}{{{j{Eb}}{j{lAb}}}Ad}{cc{}}{{BhBh}Eb}{{{j{Eb}}}{{`{{Aj{}{{Ah{Bf}}}}}}}}`{{}h}{ce{}{}}{{{j{Eb}}}Af}{{Chh}Eb}0{{{j{Eb}}}Ch}{{{j{lEb}}Bf}A`}`{{{j{Eb}}}h}{{{j{Eb}}}{{j{{Cb{Dn}}}}}}{{{j{Eb}}Cf}{{Cj{d}}}}{{{j{Eb}}Cf}A`}{{{j{C`}}{j{Eb}}{j{Eb}}}{{Cj{{Cj{d}}}}}}{{{j{lEb}}}A`}5<{{{j{c}}}e{}{}}{{{j{c}}}Bl{}}{c{{B`{e}}}{}{}}0{{{j{c}}}Bb{}}{{{j{Eb}}}{{j{Bh}}}}`{{{j{lBh}}c}A`{{Aj{}{{Ah{h}}}}}}{{{j{lBh}}Bf}h}{{{j{lBh}}c}A`{{Ef{Cf}{{Ed{{An{A`}}}}}}}}{{{j{Bh}}}h}{{{j{Bh}}}{{j{{Cb{Bj}}}}}}{{{j{c}}}{{j{e}}}{}{}}{{{j{lc}}}{{j{le}}}{}{}}{{{j{Bh}}}Bh}{{{j{c}}{j{le}}}A`{}{}}{{{j{Bh}}Bf}Af}{{{j{Bh}}{j{Bh}}}Af}{{{j{Bh}}}{{j{c}}}{}}{h{{j{c}}}{}}{h{{j{lc}}}{}}:{hA`}{{Chh}Bh}5{{{j{Bh}}{j{lAb}}}Ad}0{cc{}}{{Ch{j{lc}}}{{Db{Bh}}}Dd}{C`Bh}{{}h}{ce{}{}}{{{j{Bh}}}Af}{{{j{Bh}}}{{`{{Aj{}{{Ah{Bf}}}}}}}}{{{j{Bh}}}{{`{{Aj{}{{Ah{Bj}}}}}}}}`9{{{j{Bh}}Cf}A`}{{{j{lBh}}}A`}0{{{j{Bh}}{j{Bh}}}Bh}{{{j{Bh}}{j{lc}}}{{Db{A`}}}E`}{{{j{c}}}e{}{}}{{{j{c}}}Bl{}}{c{{B`{e}}}{}{}}0{{{j{c}}}Bb{}}{{{j{lBh}}e}c{}{{Eh{{j{lC`}}}{{Ed{c}}}}}}``````{fEj}{fd}{fh}`{{{j{c}}}{{j{e}}}{}{}}{{{j{lc}}}{{j{le}}}{}{}}{{{j{El}}}El}{{{j{c}}{j{le}}}A`{}{}}`{h{{j{c}}}{}}{h{{j{lc}}}{}}{hA`}{{{j{El}}{j{El}}}Af}{{cd}{{Cl{dd}}}f}{{{j{El}}{j{lAb}}}Ad}0{cc{}}```{{}h}{ce{}{}}{{cd}df}`{hh}1{{cEj}df}{{fd}d}{{fdd}d}{{ddd}d}`1{fCh}{{{j{c}}}e{}{}}{{{j{c}}}Bl{}}{c{{B`{e}}}{}{}}0{{{j{c}}}Bb{}}`{{ChEnEn}En}{{EnEn}En}001{{ChEnEn}Af}{{Chhh}d}`{{Ch{j{l{Cb{En}}}}}En}{{{j{{Cb{En}}}}}En}1``{{{j{c}}}{{j{e}}}{}{}}0{{{j{lc}}}{{j{le}}}{}{}}0{{ch}{{`{{Aj{}{{Ah{{Cj{d}}}}}}}}}{{F`{d}}}}{h{{j{c}}}{}}0{h{{j{lc}}}{}}0{hA`}0`{cc{}}0{{}h}0{ce{}{}}000{bFb}{hFd}{{bh}Fb}{{{j{lFb}}}{{An{c}}}{}}{{{j{lFd}}}{{An{c}}}{}}{c{{Ff{e}}}{}{}}0`{b{{`{{Aj{}{{Ah{h}}}}}}}}{c{{B`{e}}}{}{}}000{{{j{c}}}Bb{}}0``````{{Fhd}c{}}{{FhFh}c{}}{{FjFj}c{}}{{Fjd}c{}}{{FlFl}c{}}{{Fld}c{}}{{FnFn}c{}}{{Fnd}c{}}{{Chd}c{}}{{ChCh}c{}}{FhEj}{FjEj}{FlEj}{FnEj}{ChEj}{{{j{c}}}{{j{e}}}{}{}}0000{{{j{lc}}}{{j{le}}}{}{}}0000{{{j{Fh}}}Fh}{{{j{Fj}}}Fj}{{{j{Fl}}}Fl}{{{j{Fn}}}Fn}{{{j{Ch}}}Ch}{{{j{c}}{j{le}}}A`{}{}}0000{h{{j{c}}}{}}0000{h{{j{lc}}}{}}0000{c{{B`{Fh}}}G`}{c{{B`{Fj}}}G`}{c{{B`{Fl}}}G`}{c{{B`{Fn}}}G`}{c{{B`{Ch}}}G`}{{Fhd}c{}}{{FhFh}c{}}{{Fjd}c{}}{{FjFj}c{}}{{FlFl}c{}}{{Fld}c{}}{{FnFn}c{}}{{Fnd}c{}}{{ChCh}c{}}{{Chd}c{}}{hA`}0000{{{j{Fh}}{j{Fh}}}Af}{{{j{Fh}}{j{d}}}Af}{{{j{Fj}}{j{Fj}}}Af}{{{j{Fj}}{j{d}}}Af}{{{j{Fl}}{j{d}}}Af}{{{j{Fl}}{j{Fl}}}Af}{{{j{Fn}}{j{d}}}Af}{{{j{Fn}}{j{Fn}}}Af}{{{j{Ch}}{j{d}}}Af}{{{j{Ch}}{j{Ch}}}Af}{{{j{Fh}}{j{lAb}}}Ad}0{{{j{Fj}}{j{lAb}}}Ad}0{{{j{Fl}}{j{lAb}}}Ad}0{{{j{Fn}}{j{lAb}}}Ad}0{{{j{Ch}}{j{lAb}}}Ad}0{cc{}}0000{{{j{Gb}}}{{B`{Chc}}}{}}{{{j{Fh}}{j{lc}}}A`Gd}{{{j{Fj}}{j{lc}}}A`Gd}{{{j{Fl}}{j{lc}}}A`Gd}{{{j{Fn}}{j{lc}}}A`Gd}{{{j{Ch}}{j{lc}}}A`Gd}{{}h}0000{ce{}{}}0000{dAf}{{Fhd}c{}}{{FhFh}c{}}{{FjFj}c{}}{{Fjd}c{}}{{FlFl}c{}}{{Fld}c{}}{{Fnd}c{}}{{FnFn}c{}}{{ChCh}c{}}{{Chd}c{}}{dCh}0`{{{j{Fh}}{j{d}}}{{An{Gf}}}}{{{j{Fj}}{j{d}}}{{An{Gf}}}}{{{j{Fl}}{j{d}}}{{An{Gf}}}}{{{j{Fn}}{j{d}}}{{An{Gf}}}}{{{j{Ch}}{j{d}}}{{An{Gf}}}}>?<=:;9867{{{j{Fh}}c}B`Gh}{{{j{Fj}}c}B`Gh}{{{j{Fl}}c}B`Gh}{{{j{Fn}}c}B`Gh}{{{j{Ch}}c}B`Gh}{{Fhd}c{}}{{FhFh}c{}}{{Fjd}c{}}{{FjFj}c{}}{{FlFl}c{}}{{Fld}c{}}{{Fnd}c{}}{{FnFn}c{}}{{Chd}c{}}{{ChCh}c{}}98764523019867452310{FhCh}{FjCh}{FlCh}{FnCh}{ChCh}{{{j{c}}}e{}{}}0000{{{j{c}}}Bl{}}0000{c{{B`{e}}}{}{}}{d{{B`{FhEl}}}}{d{{B`{FjEl}}}}22{d{{B`{FlEl}}}}{d{{B`{FnEl}}}}44{d{{B`{ChEl}}}}55555{{{j{c}}}Bb{}}0000`{{{j{l{Cb{b}}}}{j{{Cb{b}}}}h}A`}``{bGj}{{bGj}A`}{{GjGj}Gj}`````````{{{j{l{Gl{c}}}}{j{{Gl{c}}}}d}A`f}{{{j{l{Gn{c}}}}{H`{c}}d}A`f}{{{j{l{Gl{c}}}}hd}A`f}{{{j{l{Gn{c}}}}hd}A`f}{{{j{l{Gl{c}}}}{j{{Gl{c}}}}d{j{l{Cb{e}}}}}Aff{}}{{{j{l{Gl{c}}}}hbd{j{l{Cb{e}}}}}Aff{}}{{{j{l{Gn{c}}}}{H`{c}}d{j{{Cb{h}}}}}A`f}6{{{j{l{Gl{c}}}}{j{{Gl{c}}}}dh}A`f}0666{{{j{l{Gn{c}}}}hd{H`{c}}{H`{c}}}A`f}{{{j{l{Gl{c}}}}{j{{Gl{c}}}}d}{{An{A`}}}f}3{{{j{{Gl{c}}}}}{{H`{c}}}f}{{{j{{Gn{c}}}}}{{H`{c}}}f}{{{j{l{Gl{c}}}}}{{Gn{c}}}f}{{{j{l{Gl{c}}}}{j{{Gl{c}}}}}A`f}{{{j{l{Gn{c}}}}{H`{c}}}A`f}1{{{j{c}}}{{j{e}}}{}{}}00{{{j{lc}}}{{j{le}}}{}{}}00{{{j{{Gl{c}}}}}{{Gl{c}}}{Hbf}}{{{j{{H`{c}}}}}{{H`{c}}}{Hbf}}{{{j{c}}{j{le}}}A`{}{}}0{{{j{l{Gn{c}}}}}{{Gn{c}}}f}{{{j{l{Gl{c}}}}{j{{Cb{d}}}}}A`f}{{{j{{Gl{c}}}}}Hdf}{h{{j{c}}}{}}00{h{{j{lc}}}{}}00{hA`}00``{{{j{{Gl{c}}}}h}df}{{{j{{H`{c}}}}h}df}{{{j{{Gl{c}}}}{j{{Gl{c}}}}}Af{Hff}}{{{j{l{Gl{c}}}}h}A`f}{{{j{{Gl{c}}}}}{{An{{Cl{hd}}}}}f}{{{j{{Gl{c}}}}{j{lAb}}}Ad{Hhf}}{{{j{{H`{c}}}}{j{lAb}}}Ad{Hhf}}{{{j{{Gn{c}}}}{j{lAb}}}Ad{Hhf}}{cc{}}{{{Cl{c{j{e}}}}}{{Gl{c}}}f{{Hj{{Cb{d}}}}}}{{{j{{Gl{c}}}}}{{H`{c}}}f}22{{{j{l{Gl{c}}}}}{{Gn{c}}}f}{{ch{Cj{b}}}{{Gl{c}}}f}{{{j{{Gl{c}}}}{j{le}}}A`{Hlf}Gd}{{}h}00{ce{}{}}00{{{j{{Gl{c}}}}}Aff}{{{j{{H`{c}}}}}Aff}10{{{j{{Gl{c}}}}}Hnf}{{{H`{c}}}Hnf}{{{j{{Gl{c}}}}}{{I`{c}}}f}{{{H`{c}}}{{I`{c}}}f}{{{j{{Gl{c}}}}}hf}{{{j{{H`{c}}}}}hf}`{{{j{{H`{c}}}}}{{Cl{bb}}}f}{{{j{{H`{c}}}}}{{Al{h}}}f}0{{{j{{Gl{c}}}}}{{j{{Cb{b}}}}}f}```{{{j{l{Gl{c}}}}}{{j{l{Cb{b}}}}}f}{{{j{{H`{c}}}}}bf}0{{ch}{{Gl{c}}}f}{{chh}{{Gl{c}}}f}7```{{{j{{Gl{c}}}}}Chf}{{{j{{H`{c}}}}}Chf}{{{j{{Gn{c}}}}}Chf}{{{j{l{Gn{c}}}}}A`f}{{{j{l{Gl{c}}}}d}A`f}{{{j{l{Gn{c}}}}d}A`f}{{{j{l{Gl{c}}}}hd}A`f}{{{j{l{Gn{c}}}}hd}A`f}{{{j{l{Gl{c}}}}h}A`f}{{{j{l{Gl{c}}}}}A`f}6{{{j{{Gl{c}}}}{j{{Gl{c}}}}}Aff}{{{j{{Gl{c}}}}hh}{{H`{c}}}f}{{{H`{c}}hh}{{H`{c}}}f}{{{j{l{Gl{c}}}}hh}{{Gn{c}}}f}{{{j{l{Gn{c}}}}hh}{{Gn{c}}}f}``{{{j{c}}}e{}{}}{{{H`{c}}}{{Gl{c}}}f}18{c{{B`{e}}}{}{}}00000{{{j{c}}}Bb{}}00````{{{j{c}}}{{j{e}}}{}{}}0{{{j{lc}}}{{j{le}}}{}{}}0````{h{{j{c}}}{}}0{h{{j{lc}}}{}}0`{hA`}0``{cc{}}0`{{}h}0{ce{}{}}000{{{j{Hn}}}h}````{c{{Cl{eg}}}{}{}{}}{{{H`{c}}}Hnf}{{{H`{c}}}{{I`{c}}}f}{{{j{lHn}}}{{An{c}}}{}}{{{j{l{I`{c}}}}}{{An{e}}}f{}}`{{{j{lHn}}h}A`}{c{{B`{e}}}{}{}}000{{{j{c}}}Bb{}}0````````````````````````{{{j{lBj}}{j{Bj}}d}A`}{{{j{lCf}}Bfd}A`}{{{j{lBj}}{j{Bj}}}A`}{{{j{lBj}}hd}A`}{{{j{lCf}}hd}A`}{{{j{lBj}}{j{Bj}}d{j{l{Cb{Bj}}}}}Af}{{{j{lCf}}Bfd{j{{Cb{h}}}}}A`}6{{{j{lBj}}{j{Bj}}dh}A`}0{{{j{lCf}}hdBfBf}A`}{{{j{lBj}}{j{Bj}}d}{{An{A`}}}}3{{{j{Bj}}}Bf}{{{j{Cf}}}Bf}{{{j{lBj}}}Cf}:{{{j{lCf}}Bf}A`};{{{j{c}}}{{j{e}}}{}{}}000{{{j{lc}}}{{j{le}}}{}{}}000{{{j{Bj}}}Bj}{{{j{Bf}}}Bf}{{{j{c}}{j{le}}}A`{}{}}0{{{j{lCf}}}Cf}{{{j{lBj}}{j{{Cb{d}}}}}A`}{{{j{Bj}}}Hd}{h{{j{c}}}{}}000{h{{j{lc}}}{}}000{c{{B`{Bj}}}G`}``{hA`}000{{{j{Bj}}h}d}{{{j{Bf}}h}d}{{{j{Bj}}{j{Bj}}}Af}{{{j{lBj}}h}A`}{{{j{Bj}}}{{An{{Cl{hd}}}}}}{{{j{Bj}}{j{lAb}}}Ad}0{{{j{Bf}}{j{lAb}}}Ad}0{{{j{Cf}}{j{lAb}}}Ad}{cc{}}0{{{j{Bf}}}Bf}{{{j{Cf}}}Bf}2{{{j{Bj}}}Bf}3{{{j{lCf}}}Cf}{{{j{lBj}}}Cf}{{Chh{j{lc}}}{{Db{Bj}}}Dd}{{c{j{{Cb{d}}}}}Bjf}{{{j{Bj}}{j{lc}}}A`Gd}`{{}h}000{ce{}{}}0000{{{j{Bj}}}c{}}{{{j{Bj}}}Af}{{{j{Bf}}}Af}10{{{j{Bj}}}Hn}{BfHn}{{{j{Bj}}}Ib}{BfIb}{{{j{Bj}}}h}{{{j{Bf}}}h}{{{j{Bj}}}{{j{{Cb{b}}}}}}{{{j{lBj}}}{{j{l{Cb{b}}}}}}{c{{Cl{eg}}}{}{}{}}{{ch}Bjf}{{chh}Bjf}{{{j{lIb}}}{{An{c}}}{}}{{{j{lIb}}}{{An{{Cl{hd}}}}}}{{Chh}h}0{{{j{Bj}}}Ch}{{{j{Bf}}}Ch}{{{j{Cf}}}Ch}{{{j{lBj}}d}A`}{{{j{lCf}}d}A`}{{{j{Bj}}c}B`Gh}{{{j{lBj}}hd}A`}{{{j{lCf}}hd}A`}{{{j{lBj}}h}A`}{{{j{lBj}}}A`}{{{j{lCf}}}A`}{{{j{Bj}}{j{Bj}}}Af}{{{j{Bj}}hh}Bf}{{Bfhh}Bf}{{{j{lBj}}hh}Cf}{{{j{lCf}}hh}Cf}{{{j{Bj}}{j{lc}}}{{Db{A`}}}E`}{{{j{c}}}e{}{}}{BfBj}1{{{j{c}}}Bl{}}0;{c{{B`{e}}}{}{}}0000{{{j{lBj}}}{{B`{{j{l{Gl{Fl}}}}A`}}}}1{{{j{lBj}}}{{B`{{j{l{Gl{Fn}}}}A`}}}}{{{j{lBj}}}{{B`{{j{l{Gl{Fh}}}}A`}}}}{{{j{lBj}}}{{B`{{j{l{Gl{Fj}}}}A`}}}}{{{j{lBj}}}{{B`{{j{l{Gl{Ch}}}}A`}}}}55{{{j{c}}}Bb{}}000{{{j{lBj}}{j{lc}}}{{Db{A`}}}Dd}","D":"AGf","p":[[1,"u64"],[1,"u32"],[10,"Prime",387],[1,"usize"],[1,"reference"],[0,"mut"],[5,"LimbBitIndexPair",26],[1,"unit"],[5,"Formatter",1047],[8,"Result",1047],[1,"bool"],[17,"Item"],[10,"Iterator",1048],[5,"Range",1049],[6,"Option",1050],[6,"Result",1051],[5,"TypeId",1052],[5,"AffineSubspace",88],[6,"Slice",881],[5,"Subspace",345],[6,"FpVector",881],[5,"String",1053],[5,"M4riTable",116],[5,"Matrix",143],[1,"slice"],[5,"MatrixSliceMut",143],[6,"SliceMut",881],[5,"ValidPrime",481],[5,"Vec",1054],[1,"tuple"],[5,"AugmentedMatrix",143],[5,"QuasiInverse",274],[8,"Result",1055],[10,"Read",1056],[5,"Iter",1057],[5,"IterMut",1057],[10,"MaybeIndexedParallelIterator",1058],[1,"array"],[1,"isize"],[10,"Write",1056],[5,"Subquotient",304],[17,"Output"],[10,"FnMut",1059],[10,"FnOnce",1059],[1,"i32"],[6,"PrimeError",387],[10,"Binomial",431],[10,"Into",1060],[5,"BitflagIterator",443],[5,"BinomialIterator",443],[5,"IterBridge",1061],[5,"P2",481],[5,"P3",481],[5,"P5",481],[5,"P7",481],[10,"Deserializer",1062],[1,"str"],[10,"Hasher",1063],[6,"Ordering",1064],[10,"Serializer",1065],[5,"__m128i",1066],[5,"FpVectorP",704],[5,"SliceMutP",704],[5,"SliceP",704],[10,"Clone",1067],[1,"f32"],[10,"PartialEq",1064],[10,"Debug",1047],[10,"AsRef",1060],[10,"Hash",1063],[5,"FpVectorIterator",833],[5,"FpVectorNonZeroIteratorP",833],[6,"FpVectorNonZeroIterator",881]],"r":[[0,12],[1,12],[3,12],[4,12],[57,88],[58,143],[59,143],[60,143],[61,274],[62,304],[63,345],[387,431]],"b":[[99,"impl-Display-for-AffineSubspace"],[100,"impl-Debug-for-AffineSubspace"],[195,"impl-Debug-for-Matrix"],[196,"impl-Display-for-Matrix"],[214,"impl-IntoIterator-for-%26Matrix"],[215,"impl-IntoIterator-for-Matrix"],[216,"impl-IntoIterator-for-%26mut+Matrix"],[364,"impl-Display-for-Subspace"],[365,"impl-Debug-for-Subspace"],[407,"impl-Debug-for-PrimeError"],[408,"impl-Display-for-PrimeError"],[486,"impl-Add%3Cu32%3E-for-P2"],[487,"impl-Add-for-P2"],[488,"impl-Add-for-P3"],[489,"impl-Add%3Cu32%3E-for-P3"],[490,"impl-Add-for-P5"],[491,"impl-Add%3Cu32%3E-for-P5"],[492,"impl-Add-for-P7"],[493,"impl-Add%3Cu32%3E-for-P7"],[494,"impl-Add%3Cu32%3E-for-ValidPrime"],[495,"impl-Add-for-ValidPrime"],[536,"impl-Div%3Cu32%3E-for-P2"],[537,"impl-Div-for-P2"],[538,"impl-Div%3Cu32%3E-for-P3"],[539,"impl-Div-for-P3"],[540,"impl-Div-for-P5"],[541,"impl-Div%3Cu32%3E-for-P5"],[542,"impl-Div-for-P7"],[543,"impl-Div%3Cu32%3E-for-P7"],[544,"impl-Div-for-ValidPrime"],[545,"impl-Div%3Cu32%3E-for-ValidPrime"],[551,"impl-PartialEq-for-P2"],[552,"impl-PartialEq%3Cu32%3E-for-P2"],[553,"impl-PartialEq-for-P3"],[554,"impl-PartialEq%3Cu32%3E-for-P3"],[555,"impl-PartialEq%3Cu32%3E-for-P5"],[556,"impl-PartialEq-for-P5"],[557,"impl-PartialEq%3Cu32%3E-for-P7"],[558,"impl-PartialEq-for-P7"],[559,"impl-PartialEq%3Cu32%3E-for-ValidPrime"],[560,"impl-PartialEq-for-ValidPrime"],[561,"impl-Debug-for-P2"],[562,"impl-Display-for-P2"],[563,"impl-Debug-for-P3"],[564,"impl-Display-for-P3"],[565,"impl-Display-for-P5"],[566,"impl-Debug-for-P5"],[567,"impl-Debug-for-P7"],[568,"impl-Display-for-P7"],[569,"impl-Debug-for-ValidPrime"],[570,"impl-Display-for-ValidPrime"],[593,"impl-Mul%3Cu32%3E-for-P2"],[594,"impl-Mul-for-P2"],[595,"impl-Mul-for-P3"],[596,"impl-Mul%3Cu32%3E-for-P3"],[597,"impl-Mul-for-P5"],[598,"impl-Mul%3Cu32%3E-for-P5"],[599,"impl-Mul%3Cu32%3E-for-P7"],[600,"impl-Mul-for-P7"],[601,"impl-Mul-for-ValidPrime"],[602,"impl-Mul%3Cu32%3E-for-ValidPrime"],[611,"impl-Rem-for-P2"],[612,"impl-Rem%3Cu32%3E-for-P2"],[613,"impl-Rem%3Cu32%3E-for-P3"],[614,"impl-Rem-for-P3"],[615,"impl-Rem%3Cu32%3E-for-P5"],[616,"impl-Rem-for-P5"],[617,"impl-Rem%3Cu32%3E-for-P7"],[618,"impl-Rem-for-P7"],[619,"impl-Rem%3Cu32%3E-for-ValidPrime"],[620,"impl-Rem-for-ValidPrime"],[626,"impl-Shl%3Cu32%3E-for-P2"],[627,"impl-Shl-for-P2"],[628,"impl-Shl%3Cu32%3E-for-P3"],[629,"impl-Shl-for-P3"],[630,"impl-Shl-for-P5"],[631,"impl-Shl%3Cu32%3E-for-P5"],[632,"impl-Shl%3Cu32%3E-for-P7"],[633,"impl-Shl-for-P7"],[634,"impl-Shl%3Cu32%3E-for-ValidPrime"],[635,"impl-Shl-for-ValidPrime"],[636,"impl-Shr%3Cu32%3E-for-P2"],[637,"impl-Shr-for-P2"],[638,"impl-Shr%3Cu32%3E-for-P3"],[639,"impl-Shr-for-P3"],[640,"impl-Shr%3Cu32%3E-for-P5"],[641,"impl-Shr-for-P5"],[642,"impl-Shr-for-P7"],[643,"impl-Shr%3Cu32%3E-for-P7"],[644,"impl-Shr-for-ValidPrime"],[645,"impl-Shr%3Cu32%3E-for-ValidPrime"],[646,"impl-Sub%3Cu32%3E-for-P2"],[647,"impl-Sub-for-P2"],[648,"impl-Sub-for-P3"],[649,"impl-Sub%3Cu32%3E-for-P3"],[650,"impl-Sub%3Cu32%3E-for-P5"],[651,"impl-Sub-for-P5"],[652,"impl-Sub-for-P7"],[653,"impl-Sub%3Cu32%3E-for-P7"],[654,"impl-Sub%3Cu32%3E-for-ValidPrime"],[655,"impl-Sub-for-ValidPrime"],[959,"impl-Debug-for-FpVector"],[960,"impl-Display-for-FpVector"],[961,"impl-Display-for-Slice%3C\'a%3E"],[962,"impl-Debug-for-Slice%3C\'a%3E"],[966,"impl-From%3C%26Slice%3C\'b%3E%3E-for-Slice%3C\'a%3E"],[967,"impl-From%3C%26SliceMut%3C\'b%3E%3E-for-Slice%3C\'a%3E"],[969,"impl-From%3C%26FpVector%3E-for-Slice%3C\'a%3E"],[971,"impl-From%3C%26mut+SliceMut%3C\'b%3E%3E-for-SliceMut%3C\'a%3E"],[972,"impl-From%3C%26mut+FpVector%3E-for-SliceMut%3C\'a%3E"],[1002,"impl-Iterator-for-FpVectorNonZeroIterator%3C\'a%3E"],[1003,"impl-FpVectorNonZeroIterator%3C\'a%3E"],[1034,"impl-TryInto%3C%26mut+FpVectorP%3CP5%3E%3E-for-%26mut+FpVector"],[1036,"impl-TryInto%3C%26mut+FpVectorP%3CP7%3E%3E-for-%26mut+FpVector"],[1037,"impl-TryInto%3C%26mut+FpVectorP%3CP2%3E%3E-for-%26mut+FpVector"],[1038,"impl-TryInto%3C%26mut+FpVectorP%3CP3%3E%3E-for-%26mut+FpVector"],[1039,"impl-TryInto%3C%26mut+FpVectorP%3CValidPrime%3E%3E-for-%26mut+FpVector"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAFwDaAAAAAEAAwAAAAYACQASAAIAGgAAAB0AAAAgAAYAKAAAACoAAAAtAAEAMwABADYAAgA6AAAAPQAAAD8AAABBAA4AUQASAGUAAABnAAEAagAKAHcAAQB8AAQAgwAAAIkAAQCNAAIAkgACAJcAAQCaAAwAqAAAAKoAAACsAAAArgAAALAADwDEAAAAyQABAMwAAADPAAIA0wAAANcADQDmAAQA7AABAO8AAwD2AAMA/AACAAABEQAVAQgAHwEDACQBBQArAQ0AOgEFAEIBAgBGAQAASQEEAFABAABUAQUAWwEAAF4BAABgAQwAbgEAAHABAAByAQAAdQEAAHcBAQB8AQYAhAECAIgBDgCYAQEAmwEDAKABAQCkAQIAqAEAAKoBBQC4AQAAvQEEAMMBBgDMAQEA0AFrAEECCgBRAm4AxAIFAMsCAADOAgAA0AIAANICAADUAgMA2gIJAOYCDgD3AgIA+wIBAP8CBQAIAwQADgMGABYDFAAsAwkANwMAADkDCQBEAxIAWQMCAF4DYwDDAwEAxwMBAMoDAADMAwkA2gM9AA=="}],\
["lift_hom",{"t":"","n":[],"q":[],"i":[],"f":"","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["mahowald_invariant",{"t":"","n":[],"q":[],"i":[],"f":"","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["massey",{"t":"","n":[],"q":[],"i":[],"f":"","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["maybe_rayon",{"t":"CIHHCHKKRKKIKKKNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNN","n":["concurrent","Scope","in_place_scope","join","prelude","scope","IndexedParallelIterator","IntoMaybeParallelIterator","Item","MaybeIndexedParallelIterator","MaybeIntoParallelRefMutIterator","MaybeIterBridge","MaybeParallelBridge","MaybeParallelIterator","ParallelIterator","all","any","by_exponential_blocks","by_uniform_blocks","chain","chunks","cloned","cmp","collect","collect_into_vec","collect_vec_list","copied","count","drive","drive_unindexed","enumerate","eq","filter","filter_map","find_any","find_first","find_last","find_map_any","find_map_first","find_map_last","flat_map","flat_map_iter","flatten","flatten_iter","fold","fold_chunks","fold_chunks_with","fold_with","for_each","for_each_init","for_each_with","ge","gt","inspect","interleave","interleave_shortest","intersperse","into_maybe_par_iter","le","len","lt","map","map_init","map_with","max","max_by","max_by_key","maybe_par_bridge","maybe_par_iter_mut","min","min_by","min_by_key","ne","opt_len","panic_fuse","partial_cmp","partition","partition_map","position_any","position_first","position_last","positions","product","reduce","reduce_with","rev","skip","skip_any","skip_any_while","step_by","sum","take","take_any","take_any_while","try_fold","try_fold_with","try_for_each","try_for_each_init","try_for_each_with","try_reduce","try_reduce_with","unzip","unzip_into_vecs","update","while_some","with_max_len","with_min_len","with_producer","zip","zip_eq"],"q":[[0,"maybe_rayon"],[1,"maybe_rayon::concurrent"],[6,"maybe_rayon::concurrent::prelude"],[110,"core::ops::function"],[111,"core::marker"],[112,"rayon::iter"],[113,"rayon::iter::blocks"],[114,"rayon::iter::chain"],[115,"rayon::iter::chunks"],[116,"rayon::iter::cloned"],[117,"core::cmp"],[118,"alloc::vec"],[119,"alloc::collections::linked_list"],[120,"rayon::iter::copied"],[121,"rayon::iter::plumbing"],[122,"rayon::iter::enumerate"],[123,"rayon::iter::filter"],[124,"rayon::iter::filter_map"],[125,"core::option"],[126,"rayon::iter::flat_map"],[127,"rayon::iter::flat_map_iter"],[128,"core::iter::traits::collect"],[129,"rayon::iter::flatten"],[130,"rayon::iter::flatten_iter"],[131,"rayon::iter::fold"],[132,"rayon::iter::fold_chunks"],[133,"rayon::iter::fold_chunks_with"],[134,"core::clone"],[135,"rayon::iter::inspect"],[136,"rayon::iter::interleave"],[137,"rayon::iter::interleave_shortest"],[138,"rayon::iter::intersperse"],[139,"rayon::iter::map"],[140,"rayon::iter::map_with"],[141,"rayon::iter::panic_fuse"],[142,"core::default"],[143,"either"],[144,"rayon::iter::positions"],[145,"core::iter::traits::accum"],[146,"rayon::iter::rev"],[147,"rayon::iter::skip"],[148,"rayon::iter::skip_any"],[149,"rayon::iter::skip_any_while"],[150,"rayon::iter::step_by"],[151,"rayon::iter::take"],[152,"rayon::iter::take_any"],[153,"rayon::iter::take_any_while"],[154,"rayon::iter::try_fold"],[155,"rayon::iter::private"],[156,"rayon::iter::update"],[157,"rayon::iter::while_some"],[158,"rayon::iter::len"],[159,"rayon::iter::zip"],[160,"rayon::iter::zip_eq"]],"i":[0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,8,8,12,12,8,12,8,12,8,12,8,8,8,12,8,12,12,8,8,8,8,8,8,8,8,8,8,8,8,8,12,12,8,8,8,8,12,12,8,12,12,8,47,12,12,12,8,8,8,8,8,8,52,54,8,8,8,12,8,8,12,8,8,12,12,12,12,8,8,8,12,12,8,8,12,8,12,8,8,8,8,8,8,8,8,8,8,12,8,8,12,12,12,12,12],"f":"``{ec{}{{h{{d{b}}}{{f{c}}}}}}{{ei}{{j{cg}}}l{{h{}{{f{c}}}}l}l{{h{}{{f{g}}}}l}}`{ecl{{h{{d{b}}}{{f{c}}}}l}}`````````{{{A`{}{{n{c}}}}e}Abl{{Ad{c}{{f{Ab}}}}Afl}}0{Ah{{Aj{Ah}}}}{{AhAl}{{An{Ah}}}}{{{A`{}{{n{c}}}}e}{{B`{{A`{}{{n{c}}}}}}}l{{Bb{}{{n{c}}}}}}{{AhAl}{{Bd{Ah}}}}{{{A`{}{{n{c}}}}}{{Bf{{A`{}{{n{c}}}}}}}l}{{Ahe}Bh{}{{Bb{}{{n{c}}}}}}{{{A`{}{{n{c}}}}}el{{Bj{c}}}}{{Ah{d{Bl{Bn{c}}}}}C`{}}{{{A`{}{{n{c}}}}}{{Cb{{Bn{c}}}}}l}{{{A`{}{{n{c}}}}}{{Cd{{A`{}{{n{c}}}}}}}l}{{{A`{}{{n{c}}}}}All}{{Ahe}{}{}{{Cf{c}}}}{{{A`{}{{n{c}}}}e}{}l{{Ch{c}}}}{Ah{{Cj{Ah}}}}{{Ahc}AbBb}{{{A`{}{{n{c}}}}e}{{Cl{{A`{}{{n{c}}}}e}}}l{{Ad{{d{c}}}{{f{Ab}}}}Afl}}{{{A`{}{{n{c}}}}g}{{Cn{{A`{}{{n{c}}}}g}}}ll{{Ad{c}{{f{{D`{e}}}}}}Afl}}{{{A`{}{{n{c}}}}e}{{D`{c}}}l{{Ad{{d{c}}}{{f{Ab}}}}Afl}}00{{{A`{}{{n{c}}}}g}{{D`{e}}}ll{{Ad{c}{{f{{D`{e}}}}}}Afl}}00{{{A`{}{{n{c}}}}g}{{Db{{A`{}{{n{c}}}}g}}}lBb{{Ad{c}{{f{e}}}}Afl}}{{{A`{}{{n{c}}}}g}{{Dd{{A`{}{{n{c}}}}g}}}lDf{{Ad{c}{{f{e}}}}Afl}}{{{A`{}{{n{c}}}}}{{Dh{{A`{}{{n{c}}}}}}}l}{{{A`{}{{n{c}}}}}{{Dj{{A`{}{{n{c}}}}}}}l}{{{A`{}{{n{c}}}}gi}{{Dl{{A`{}{{n{c}}}}gi}}}ll{{Ad{}{{f{e}}}}Afl}{{Ad{ec}{{f{e}}}}Afl}}{{AhAlei}{{Dn{Ahei}}}l{{Ad{}{{f{c}}}}lAf}{}{{Ad{cg}{{f{c}}}}lAf}}{{AhAlcg}{{E`{Ahcg}}}{lEb}{}{{Ad{ce}{{f{c}}}}lAf}}{{{A`{}{{n{c}}}}eg}{{Ed{{A`{}{{n{c}}}}eg}}}l{lEb}{{Ad{ec}{{f{e}}}}Afl}}{{{A`{}{{n{c}}}}e}C`l{{Ad{c}}Afl}}{{{A`{}{{n{c}}}}gi}C`l{}{{Ad{}{{f{e}}}}Afl}{{Ad{{d{Ble}}c}}Afl}}{{{A`{}{{n{c}}}}eg}C`l{lEb}{{Ad{{d{Ble}}c}}Afl}}??{{{A`{}{{n{c}}}}e}{{Ef{{A`{}{{n{c}}}}e}}}l{{Ad{{d{c}}}}Afl}}{{Ahe}{{Eh{Ah}}}{}{{Bb{}{{n{c}}}}}}{{Ahe}{{Ej{Ah}}}{}{{Bb{}{{n{c}}}}}}{{{A`{}{{n{c}}}}c}{{El{{A`{}{{n{c}}}}}}}l}{Enc{}}{{Ahc}AbBb}{{{d{Ah}}}Al}1{{{A`{}{{n{c}}}}g}{{F`{{A`{}{{n{c}}}}g}}}ll{{Ad{c}{{f{e}}}}Afl}}{{{A`{}{{n{c}}}}gk}{{Fb{{A`{}{{n{c}}}}gk}}}l{}{{Ad{}{{f{e}}}}Afl}l{{Ad{{d{Ble}}c}{{f{i}}}}Afl}}{{{A`{}{{n{c}}}}ei}{{Fd{{A`{}{{n{c}}}}ei}}}l{lEb}l{{Ad{{d{Ble}}c}{{f{g}}}}Afl}}{{{A`{}{{n{c}}}}}{{D`{c}}}l}{{{A`{}{{n{c}}}}e}{{D`{c}}}l{Afl{Ad{{d{c}}{d{c}}}{{f{Bh}}}}}}{{{A`{}{{n{c}}}}g}{{D`{c}}}l{Ffl}{Afl{Ad{{d{c}}}{{f{e}}}}}}{Fh{{Fj{Fh}}}}{{{d{BlFl}}}c{}}4329{{{d{{A`{}{{n{c}}}}}}}{{D`{Al}}}l}{{{A`{}{{n{c}}}}}{{Fn{{A`{}{{n{c}}}}}}}l}{{Ahc}{{D`{Bh}}}Bb}{{{A`{}{{n{c}}}}e}{{j{gi}}}l{{Ad{{d{c}}}{{f{Ab}}}}Afl}{G`l{Gb{c}}}{G`l{Gb{c}}}}{{{A`{}{{n{c}}}}i}{{j{km}}}lll{{Ad{c}{{f{{Gd{eg}}}}}}Afl}{G`l{Gb{e}}}{G`l{Gb{g}}}}{{Ahe}{{D`{Al}}}{}{{Ad{c}{{f{Ab}}}}Afl}}00{{Ahe}{{Gf{Ahe}}}{}{{Ad{c}{{f{Ab}}}}Afl}}{{{A`{}{{n{c}}}}}el{l{Gh{c}}Gh}}{{{A`{}{{n{c}}}}eg}cl{{Ad{}{{f{c}}}}Afl}{{Ad{cc}{{f{c}}}}Afl}}{{{A`{}{{n{c}}}}e}{{D`{c}}}l{{Ad{cc}{{f{c}}}}Afl}}{Ah{{Gj{Ah}}}}{{AhAl}{{Gl{Ah}}}}{{{A`{}{{n{c}}}}Al}{{Gn{{A`{}{{n{c}}}}}}}l}{{{A`{}{{n{c}}}}e}{{H`{{A`{}{{n{c}}}}e}}}l{{Ad{{d{c}}}{{f{Ab}}}}Afl}}{{AhAl}{{Hb{Ah}}}}{{{A`{}{{n{c}}}}}el{l{Hd{c}}Hd}}{{AhAl}{{Hf{Ah}}}}{{{A`{}{{n{c}}}}Al}{{Hh{{A`{}{{n{c}}}}}}}l}{{{A`{}{{n{c}}}}e}{{Hj{{A`{}{{n{c}}}}e}}}l{{Ad{{d{c}}}{{f{Ab}}}}Afl}}{{{A`{}{{n{c}}}}gk}{{Hl{{A`{}{{n{c}}}}igk}}}l{}{{Ad{}{{f{e}}}}Afl}{{Hn{}{{f{e}}}}l}{{Ad{ec}{{f{i}}}}Afl}}{{{A`{}{{n{c}}}}ei}{{I`{{A`{}{{n{c}}}}gi}}}l{Ebl}{{Hn{}{{f{e}}}}l}{{Ad{ec}{{f{g}}}}Afl}}{{{A`{}{{n{c}}}}g}el{{Hn{}{{f{C`}}}}l}{{Ad{c}{{f{e}}}}Afl}}{{{A`{}{{n{c}}}}gk}il{}{{Ad{}{{f{e}}}}Afl}{{Hn{}{{f{C`}}}}l}{{Ad{{d{Ble}}c}{{f{i}}}}Afl}}{{{A`{}{{n{c}}}}ei}gl{lEb}{{Hn{}{{f{C`}}}}l}{{Ad{{d{Ble}}c}{{f{g}}}}Afl}}{{{A`{}{{n{c}}}}gi}cl{}{{Ad{}{{f{e}}}}Afl}{{Ad{ee}{{f{c}}}}Afl}}{{{A`{}{{n{c}}}}g}{{D`{c}}}l{}{{Ad{ee}{{f{c}}}}Afl}}{{{A`{}{{n{c}}}}}{{j{gk}}}ll{G`l{Gb{e}}}l{G`l{Gb{i}}}}{{Ah{d{Bl{Bn{c}}}}{d{Bl{Bn{e}}}}}C`ll}{{{A`{}{{n{c}}}}e}{{Ib{{A`{}{{n{c}}}}e}}}l{{Ad{{d{Blc}}}}Afl}}{{{A`{}{{n{c}}}}}{{Id{{A`{}{{n{c}}}}}}}l}{{AhAl}{{If{Ah}}}}{{AhAl}{{Ih{Ah}}}}{{Ahe}{}{}{{Ij{c}}}}{{Ahc}{{Il{Ah}}}Bb}{{Ahc}{{In{Ah}}}Bb}","D":"Kn","p":[[8,"Scope",1],[1,"reference"],[17,"Output"],[10,"FnOnce",110],[1,"tuple"],[10,"Send",111],[17,"Item"],[10,"ParallelIterator",6,112],[1,"bool"],[10,"Fn",110],[10,"Sync",111],[10,"IndexedParallelIterator",6,112],[5,"ExponentialBlocks",113],[1,"usize"],[5,"UniformBlocks",113],[5,"Chain",114],[10,"IntoParallelIterator",112],[5,"Chunks",115],[5,"Cloned",116],[6,"Ordering",117],[10,"FromParallelIterator",112],[0,"mut"],[5,"Vec",118],[1,"unit"],[5,"LinkedList",119],[5,"Copied",120],[10,"Consumer",121],[10,"UnindexedConsumer",121],[5,"Enumerate",122],[5,"Filter",123],[5,"FilterMap",124],[6,"Option",125],[5,"FlatMap",126],[5,"FlatMapIter",127],[10,"IntoIterator",128],[5,"Flatten",129],[5,"FlattenIter",130],[5,"Fold",131],[5,"FoldChunks",132],[5,"FoldChunksWith",133],[10,"Clone",134],[5,"FoldWith",131],[5,"Inspect",135],[5,"Interleave",136],[5,"InterleaveShortest",137],[5,"Intersperse",138],[10,"IntoMaybeParallelIterator",6],[5,"Map",139],[5,"MapInit",140],[5,"MapWith",140],[10,"Ord",117],[10,"MaybeParallelBridge",6],[8,"MaybeIterBridge",6],[10,"MaybeIntoParallelRefMutIterator",6],[5,"PanicFuse",141],[10,"Default",142],[10,"ParallelExtend",112],[6,"Either",143],[5,"Positions",144],[10,"Product",145],[5,"Rev",146],[5,"Skip",147],[5,"SkipAny",148],[5,"SkipAnyWhile",149],[5,"StepBy",150],[10,"Sum",145],[5,"Take",151],[5,"TakeAny",152],[5,"TakeAnyWhile",153],[5,"TryFold",154],[10,"Try",155],[5,"TryFoldWith",154],[5,"Update",156],[5,"WhileSome",157],[5,"MaxLen",158],[5,"MinLen",158],[10,"ProducerCallback",121],[5,"Zip",159],[5,"ZipEq",160]],"r":[[6,112],[14,112]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAA8ABQAAAAYACAAAAAoABAA6AAAARAABAA=="}],\
["num_gens",{"t":"","n":[],"q":[],"i":[],"f":"","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["once",{"t":"SSFFFFSNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNONNNNNNNONNONNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["DATA_LAYOUT","MAX_OUTER_LENGTH","OnceBiVec","OnceVec","OooTracker","Page","USIZE_LEN","allocate","allocate_for","allocated","as_slice","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","data","data","deallocate","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","entry_ptr","eq","eq","extend","extend","fmt","fmt","from","from","from","from","from_bivec","from_vec","from_vec","get","get","get_mut","index","index","index","index_mut","index_mut","index_mut","init","init","init","init","inner_index","into","into","into","into","is_empty","is_empty","iter","iter","iter_enum","last","last","layout","len","len","len","lock","lock","max_degree","maybe_par_extend","maybe_par_extend","maybe_par_iter_enum","min_degree","min_degree","new","new","ooo","ooo_elements","ooo_elements","page","page_raw","ptr","push","push","push_checked","push_checked","push_ooo","push_ooo","range","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":[[0,"once"],[125,"core::clone"],[126,"core::cmp"],[127,"core::ops::function"],[128,"core::fmt"],[129,"bivec"],[130,"alloc::vec"],[131,"core::option"],[132,"core::iter::traits::iterator"],[133,"core::alloc::layout"],[134,"std::sync::mutex"],[135,"core::marker"],[136,"maybe_rayon::concurrent::prelude"],[137,"core::ops::range"],[138,"core::result"],[139,"core::any"]],"i":[0,0,0,0,0,0,0,2,6,2,2,2,6,10,11,2,6,10,11,6,10,11,6,10,11,6,11,2,2,6,10,2,6,10,11,2,6,10,11,2,6,6,10,11,6,6,11,6,11,6,11,2,6,10,11,11,6,11,6,11,6,6,6,11,6,6,11,2,6,10,11,0,2,6,10,11,6,11,6,11,11,6,11,2,6,11,6,6,11,11,6,11,11,11,11,6,11,6,6,11,6,6,2,6,11,6,11,6,11,11,6,10,11,2,6,10,11,2,6,10,11,2,6,10,11],"f":"```````{{{f{b{d{c}}}}h}j{}}{{{f{{l{c}}}}h}j{}}{{{f{{d{c}}}}}n{}}{{{f{{d{c}}}}hh}{{f{{A`{c}}}}}{}}{{{f{c}}}{{f{e}}}{}{}}000{{{f{bc}}}{{f{be}}}{}{}}000{{{f{{l{c}}}}}{{l{c}}}Ab}{{{f{Ad}}}Ad}{{{f{{Af{c}}}}}{{Af{c}}}Ab}{{{f{c}}{f{be}}}j{}{}}00``{{{f{b{d{c}}}}hh}j{}}{{}{{d{c}}}{}}{{}{{l{c}}}{}}{{}Ad}{h{{f{c}}}{}}000{h{{f{bc}}}{}}000{hj}0{{{f{b{l{c}}}}}j{}}11{{{f{{l{c}}}}h}{}{}}{{{f{{l{c}}}}{f{{l{c}}}}}nAh}{{{f{{Af{c}}}}{f{{Af{c}}}}}nAh}{{{f{{l{c}}}}he}j{}{{Al{h}{{Aj{c}}}}}}{{{f{{Af{c}}}}Ane}j{}{{Al{An}{{Aj{c}}}}}}{{{f{{l{c}}}}{f{bB`}}}BbBd}{{{f{{Af{c}}}}{f{bB`}}}BbBd}{cc{}}000{{{Bf{c}}}{{Af{c}}}{}}{{{Bh{c}}}{{l{c}}}{}}{{An{Bh{c}}}{{Af{c}}}{}}{{{f{{l{c}}}}h}{{Bj{{f{c}}}}}{}}{{{f{{Af{c}}}}An}{{Bj{{f{c}}}}}{}}{{{f{b{l{c}}}}h}{{Bj{{f{bc}}}}}{}}{{{f{{l{c}}}}Bl}{{f{c}}}{}}{{{f{{l{c}}}}h}{{f{c}}}{}}{{{f{{Af{c}}}}An}{{f{c}}}{}}{{{f{b{l{c}}}}Bl}{{f{bc}}}{}}{{{f{b{l{c}}}}h}{{f{bc}}}{}}{{{f{b{Af{c}}}}An}{{f{bc}}}{}}{{}h}000{h{{Bn{hh}}}}{ce{}{}}000{{{f{{l{c}}}}}n{}}{{{f{{Af{c}}}}}n{}}{{{f{{l{c}}}}}{{`{{Cb{}{{C`{{f{c}}}}}}}}}{}}{{{f{{Af{c}}}}}{{`{{Cb{}{{C`{{f{c}}}}}}}}}{}}{{{f{{Af{c}}}}}{{`{{Cb{}{{C`{{Bn{An{f{c}}}}}}}}}}}{}}{{{f{{l{c}}}}}{{Bj{{f{c}}}}}{}}{{{f{{Af{c}}}}}{{Bj{{f{c}}}}}{}}{hCd}{{{f{{l{c}}}}}h{}}{{{f{{Af{c}}}}}An{}}`{{{f{{l{c}}}}}{{Cf{Ad}}}{}}{{{f{{Af{c}}}}}{{Cf{Ad}}}{}}2{{{f{{l{c}}}}he}j{ChCj}{{Cl{h}{{Aj{c}}}}ChCj}}{{{f{{Af{c}}}}Ane}j{ChCj}{{Cl{An}{{Aj{c}}}}ChCj}}{{{f{{Af{c}}}}}{{`{{Cn{}{{C`{{Bn{An{f{c}}}}}}}}D`}}}{ChCj}}5`{{}{{l{c}}}{}}{An{{Af{c}}}{}}`{{{f{{l{c}}}}}{{Bh{h}}}{}}{{{f{{Af{c}}}}}{{Bh{An}}}{}}{{{f{{l{c}}}}h}{{f{{d{c}}}}}{}}{{{f{{l{c}}}}h}d{}}{{{f{{d{c}}}}}{}{}}{{{f{{l{c}}}}c}h{}}{{{f{{Af{c}}}}c}An{}}{{{f{{l{c}}}}ch}j{}}{{{f{{Af{c}}}}cAn}j{}}{{{f{{l{c}}}}ch}{{Db{h}}}{}}{{{f{{Af{c}}}}cAn}{{Db{An}}}{}}{{{f{{Af{c}}}}}{{Db{An}}}{}}{{{f{c}}}e{}{}}00{c{{Dd{e}}}{}{}}0000000{{{f{c}}}Df{}}000","D":"Dh","p":[[0,"mut"],[5,"Page",0],[1,"reference"],[1,"usize"],[1,"unit"],[5,"OnceVec",0],[1,"bool"],[1,"slice"],[10,"Clone",125],[5,"OooTracker",0],[5,"OnceBiVec",0],[10,"PartialEq",126],[17,"Output"],[10,"FnMut",127],[1,"i32"],[5,"Formatter",128],[8,"Result",128],[10,"Debug",128],[5,"BiVec",129],[5,"Vec",130],[6,"Option",131],[1,"u32"],[1,"tuple"],[17,"Item"],[10,"Iterator",132],[5,"Layout",133],[5,"MutexGuard",134],[10,"Send",135],[10,"Sync",135],[10,"Fn",127],[10,"MaybeParallelIterator",136],[10,"MaybeIndexedParallelIterator",136],[5,"Range",137],[6,"Result",138],[5,"TypeId",139]],"r":[],"b":[[61,"impl-Index%3Cu32%3E-for-OnceVec%3CT%3E"],[62,"impl-Index%3Cusize%3E-for-OnceVec%3CT%3E"],[64,"impl-IndexMut%3Cu32%3E-for-OnceVec%3CT%3E"],[65,"impl-IndexMut%3Cusize%3E-for-OnceVec%3CT%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAFkAFAAAAAEAAwAAAAYAAgAKAAAADAAPAB0ADwAuAAEAMgABADgAAAA6AAEAPQALAE0AAQBQAAMAVwAAAF0ABABkAAAAZwAAAGkAAABrAAAAbgAPAA=="}],\
["query",{"t":"SHHHHH","n":["ARGV","optional","raw","vector","with_default","yes_no"],"q":[[0,"query"],[6,"core::option"],[7,"core::fmt"],[8,"core::result"],[9,"core::ops::function"],[10,"alloc::vec"]],"i":[0,0,0,0,0,0],"f":"`{{{d{b}}g}{{f{c}}}{}h{{n{{d{b}}}{{j{{l{ce}}}}}}}}{{{d{b}}g}c{}h{{n{{d{b}}}{{j{{l{ce}}}}}}}}{{{d{b}}A`}{{Ad{Ab}}}}{{{d{b}}{d{b}}g}c{}h{{n{{d{b}}}{{j{{l{ce}}}}}}}}{{{d{b}}}Af}","D":"b","p":[[1,"str"],[1,"reference"],[6,"Option",6],[10,"Display",7],[17,"Output"],[6,"Result",8],[10,"FnMut",9],[1,"usize"],[1,"u32"],[5,"Vec",10],[1,"bool"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAUAAQABAAUA"}],\
["resolution_size",{"t":"","n":[],"q":[],"i":[],"f":"","D":"`","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA"}],\
["resolve",{"t":"","n":[],"q":[],"i":[],"f":"","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["resolve_through_stem",{"t":"","n":[],"q":[],"i":[],"f":"","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["resolve_unstable",{"t":"","n":[],"q":[],"i":[],"f":"","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["save_bruner",{"t":"","n":[],"q":[],"i":[],"f":"","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["secondary",{"t":"","n":[],"q":[],"i":[],"f":"","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["secondary_massey",{"t":"","n":[],"q":[],"i":[],"f":"","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["secondary_product",{"t":"","n":[],"q":[],"i":[],"f":"","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["sq0",{"t":"","n":[],"q":[],"i":[],"f":"","D":"`","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA"}],\
["sseq",{"t":"FFFTFFKCOCCMOOOOOOOOOOOOMOMOCOOOFNNNNNNONNNNNNNNNONNNNNNEEEECCCHCFNNNNNNNNNNNNNNNNNNNNNNNNONNNNONNNNNNNNFNNNNNONNNNNNNNNNNNNNNNNNNNNOFNNNNNNONNNNNNNNNNNNNNONNNNNNNNNNNNNNNFONNNNNNNNNNNNNONONNNNFNNNNNNONONNNNNONNNNNOONNNFTFFKNNNNNNNNNONNNNNNNNNMNNONNNNNNNNNNNNNNNNNNOONONNNNNNONONOMNOMNNNNNNNNNNNNNNNOO","n":["Adams","DenseBigradedModule","Differential","MIN_R","Product","Sseq","SseqProfile","bigraded","classes","coordinates","differential","differential_length","differentials","dimensions","error","first_empty_row","invalid","left","matrices","matrix","min_y","p","page_data","permanent_classes","profile","profile","profile_inverse","source_dim","sseq","target_dim","x","y","DenseBigradedModule","borrow","borrow_mut","defined","deref","deref_mut","dimension","dimensions","drop","from","get_dimension","init","into","max_x","max_y","min_x","min_y","min_y","new","range","set_dimension","try_from","try_into","type_id","Bidegree","BidegreeElement","BidegreeGenerator","BidegreeRange","bidegree","element","generator","iter_s_t","range","Bidegree","add","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","hash","init","into","massey_bidegree","n","n_s","s","s","s_t","serialize","sub","t","t","t_s","to_owned","to_string","try_from","try_into","try_subtract","type_id","zero","BidegreeElement","borrow","borrow_mut","clone","clone_into","degree","degree","deref","deref_mut","drop","fmt","fmt","from","init","into","into_vec","n","new","s","t","to_basis_string","to_owned","to_string","to_string_module","try_from","try_into","type_id","vec","vec","BidegreeGenerator","borrow","borrow_mut","clone","clone_into","default","degree","degree","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","hash","idx","idx","init","into","n","n_s","new","s","s_t","serialize","t","to_owned","to_string","try_from","try_from","try_into","type_id","BidegreeRange","aux","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","init","into","new","restrict","s","s","t","t","to_owned","try_from","try_into","type_id","Differential","add","borrow","borrow_mut","deref","deref_mut","drop","error","evaluate","first_empty_row","from","get_source_target_pairs","inconsistent","init","into","matrix","new","prime","quasi_inverse","reduce_target","set_to_zero","source_dim","target_dim","try_from","try_into","type_id","Adams","MIN_R","Product","Sseq","SseqProfile","add_differential","add_permanent_class","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","classes","classes","clear","complete","defined","deref","deref","deref","deref_mut","deref_mut","deref_mut","differential_length","differential_length","differentials","differentials","differentials_hitting","dimension","drop","drop","drop","extend_differential","extend_page_data","from","from","from","inconsistent","init","init","init","into","into","into","invalid","invalid","left","leibniz","matrices","max_x","max_y","min_x","min_y","multiply","new","p","page_data","page_data","permanent_classes","permanent_classes","profile","profile","profile","profile_inverse","profile_inverse","range","set_dimension","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update","update_bidegree","write_to_graph","x","y"],"q":[[0,"sseq"],[32,"sseq::bigraded"],[56,"sseq::coordinates"],[65,"sseq::coordinates::bidegree"],[104,"sseq::coordinates::element"],[133,"sseq::coordinates::generator"],[171,"sseq::coordinates::range"],[193,"sseq::differential"],[219,"sseq::sseq"],[301,"core::option"],[302,"core::ops::range"],[303,"core::result"],[304,"core::any"],[305,"core::ops::function"],[306,"core::marker"],[307,"serde::de"],[308,"core::fmt"],[309,"core::hash"],[310,"serde::ser"],[311,"alloc::string"],[312,"fp::vector::vector_generic"],[313,"algebra::module::free_module"],[314,"algebra::algebra::algebra_trait"],[315,"core::convert"],[316,"alloc::vec"],[317,"fp::prime::primes_generic"],[318,"fp::matrix::subspace"],[319,"alloc::sync"],[320,"bivec"],[321,"core::iter::traits::iterator"],[322,"fp::matrix::subquotient"],[323,"chart"],[324,"core::clone"]],"i":[0,0,0,38,0,0,0,0,37,0,0,38,37,5,32,32,37,43,43,32,5,37,37,37,38,37,38,32,0,32,43,43,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,38,0,0,0,37,37,48,43,37,48,43,37,37,37,37,37,37,48,43,37,48,43,37,38,48,37,37,37,37,48,43,37,37,37,48,43,37,37,48,43,37,48,43,37,37,37,43,37,43,37,37,37,37,37,37,37,37,37,37,37,38,48,37,38,48,37,37,48,43,37,48,43,37,48,43,37,37,37,37,43,43],"f":"```````````{{bb}b}````````````{{bbb}{{d{bb}}}}`0``````{{{f{c}}}{{f{e}}}{}{}}{{{f{hc}}}{{f{he}}}{}{}}{{{f{j}}bb}l}{n{{f{c}}}{}}{n{{f{hc}}}{}}{{{f{j}}bb}n}`{nA`}{cc{}}{{{f{j}}bb}{{Ab{n}}}}{{}n}{ce{}{}}{{{f{j}}}b}000`{{bb}j}{{{f{j}}b}{{Ad{b}}}}{{{f{j}}bbn}A`}{c{{Af{e}}}{}{}}0{{{f{c}}}Ah{}}```````{{{f{c}}Aj{Al{e}}}A`{{B`{Aj}{{An{{Ad{b}}}}}}Bb}Bb}``{{AjAj}Aj}{{{f{c}}}{{f{e}}}{}{}}{{{f{hc}}}{{f{he}}}{}{}}{{{f{Aj}}}Aj}{{{f{c}}{f{he}}}A`{}{}}{{}Aj}{n{{f{c}}}{}}{n{{f{hc}}}{}}{c{{Af{Aj}}}Bd}{nA`}{{{f{Aj}}{f{Aj}}}l}{{{f{c}}{f{e}}}l{}{}}00{{{f{Aj}}{f{hBf}}}Bh}0{cc{}}{{{f{Aj}}{f{hc}}}A`Bj}{{}n}{ce{}{}}{{AjAjAj}Aj}{{{f{Aj}}}b}{{bBl}Aj}{{{f{Aj}}}Bl}`{{Blb}Aj}{{{f{Aj}}c}AfBn}{{AjAj}Aj}5`4{{{f{c}}}e{}{}}{{{f{c}}}C`{}}{c{{Af{e}}}{}{}}0{{{f{Aj}}Aj}{{Ab{Aj}}}}{{{f{c}}}Ah{}}{{}Aj}`{{{f{c}}}{{f{e}}}{}{}}{{{f{hc}}}{{f{he}}}{}{}}{{{f{Cb}}}Cb}{{{f{c}}{f{he}}}A`{}{}}{{{f{Cb}}}Aj}`{n{{f{c}}}{}}{n{{f{hc}}}{}}{nA`}{{{f{Cb}}{f{hBf}}}Bh}0{cc{}}{{}n}{ce{}{}}{CbCd}{{{f{Cb}}}b}{{AjCd}Cb}{{{f{Cb}}}Bl}2{{{f{Cb}}}C`}{{{f{c}}}e{}{}}{{{f{c}}}C`{}}{{{f{Cb}}{f{{Cf{c}}}}l}C`Ch}{c{{Af{e}}}{}{}}0{{{f{c}}}Ah{}}{{{f{Cb}}}Cj}``{{{f{c}}}{{f{e}}}{}{}}{{{f{hc}}}{{f{he}}}{}{}}{{{f{Cl}}}Cl}{{{f{c}}{f{he}}}A`{}{}}{{}Cl}{{{f{Cl}}}Aj}`{n{{f{c}}}{}}{n{{f{hc}}}{}}{c{{Af{Cl}}}Bd}{nA`}{{{f{Cl}}{f{Cl}}}l}{{{f{c}}{f{e}}}l{}{}}00{{{f{Cl}}{f{hBf}}}Bh}0{{{d{Ajn}}}Cl}{cc{}}{{{f{Cl}}{f{hc}}}A`Bj}{{{f{Cl}}}n}`{{}n}{ce{}{}}{{{f{Cl}}}b}{{bBln}Cl}{{cn}Cl{{Cn{Aj}}}}{{{f{Cl}}}Bl}{{Blbn}Cl}{{{f{Cl}}c}AfBn}5{{{f{c}}}e{}{}}{{{f{c}}}C`{}}{c{{Af{e}}}{}{}}{Cb{{Af{Clc}}}{}}1{{{f{c}}}Ah{}}``{{{f{c}}}{{f{e}}}{}{}}{{{f{hc}}}{{f{he}}}{}{}}{{{f{{Al{c}}}}}{{Al{c}}}{}}{{{f{c}}{f{he}}}A`{}{}}{n{{f{c}}}{}}{n{{f{hc}}}{}}{nA`}{cc{}}{{}n}{ce{}{}}{{{f{c}}Bl{f{B`}}}{{Al{c}}}{}}{{{Al{c}}Bl}{{Al{c}}}{}}{{{f{{Al{c}}}}}Bl{}}`{{{f{{Al{c}}}}Bl}b{}}`{{{f{c}}}e{}{}}{c{{Af{e}}}{}{}}0{{{f{c}}}Ah{}}`{{{f{hD`}}Cj{Ab{Cj}}}l}{{{f{c}}}{{f{e}}}{}{}}{{{f{hc}}}{{f{he}}}{}{}}?>=`{{{f{D`}}CjDb}A`}`={{{f{D`}}}{{Dd{{d{CdCd}}}}}}{{{f{D`}}}l}>=`{{Dfnn}D`}{{{f{D`}}}Df}{{{f{D`}}DbCj}A`}{{{f{hD`}}{f{Dh}}}A`}{{{f{hD`}}}A`}``<<;`````{{{f{h{Dj{c}}}}bbbCjCj}lDl}{{{f{h{Dj{c}}}}bbCj}lDl};;;:::{{{f{{Dj{c}}}}}{{Dn{j}}}Dl}`{{{f{h{Dj{c}}}}}A`Dl}{{{f{{Dj{c}}}}bb}lDl}0{n{{f{c}}}{}}00{n{{f{hc}}}{}}00{{bb}b}0{{{f{{Dj{c}}}}bb}{{f{{E`{D`}}}}}Dl}`{{{f{{Dj{c}}}}bb}{{`{{Ed{}{{Eb{{d{b{f{D`}}}}}}}}}}}Dl}{{{f{{Dj{c}}}}bb}nDl}{nA`}00{{{f{h{Dj{c}}}}bbb}A`Dl}0{cc{}}009{{}n}00{ce{}{}}00;``{{{f{h{Dj{c}}}}bbbCj{f{Ef}}{Ab{{f{Ef}}}}}{{Ab{{d{bbbCd}}}}}Dl}`{{{f{{Dj{c}}}}}bDl}000{{{f{{Dj{c}}}}bbCj{f{Ef}}}{{Ab{{d{bbCd}}}}}Dl}{{Dfbb}{{Dj{c}}}Dl}`{{{f{{Dj{c}}}}bb}{{f{{E`{Eh}}}}}Dl}`{{{f{{Dj{c}}}}bb}{{f{Dh}}}Dl}`{{bbb}{{d{bb}}}}0`00{{{f{{Dj{c}}}}b}{{Ad{b}}}Dl}{{{f{h{Dj{c}}}}bbn}A`Dl}{c{{Af{e}}}{}{}}00000{{{f{c}}}Ah{}}00{{{f{h{Dj{c}}}}}A`Dl}{{{f{h{Dj{c}}}}bb}{{E`{{Dd{{Dd{Bl}}}}}}}Dl}{{{f{{Dj{c}}}}eblgi}{{Af{A`}}}DlEj{{Ed{}{{Eb{{f{{d{C`Ef}}}}}}}}El}{{En{{f{he}}}{{An{{Af{A`}}}}}}}}``","D":"Hh","p":[[1,"i32"],[1,"tuple"],[1,"reference"],[0,"mut"],[5,"DenseBigradedModule",32],[1,"bool"],[1,"usize"],[1,"unit"],[6,"Option",301],[5,"Range",302],[6,"Result",303],[5,"TypeId",304],[5,"Bidegree",65],[5,"BidegreeRange",171],[17,"Output"],[10,"Fn",305],[10,"Sync",306],[10,"Deserializer",307],[5,"Formatter",308],[8,"Result",308],[10,"Hasher",309],[1,"u32"],[10,"Serializer",310],[5,"String",311],[5,"BidegreeElement",104],[6,"FpVector",312],[5,"MuFreeModule",313],[10,"MuAlgebra",314],[6,"Slice",312],[5,"BidegreeGenerator",133],[10,"Into",315],[5,"Differential",193],[6,"SliceMut",312],[5,"Vec",316],[5,"ValidPrime",317],[5,"Subspace",318],[5,"Sseq",219],[10,"SseqProfile",219],[5,"Arc",319],[5,"BiVec",320],[17,"Item"],[10,"Iterator",321],[5,"Product",219],[5,"Subquotient",322],[10,"Backend",323],[10,"Clone",324],[10,"FnOnce",305],[5,"Adams",219]],"r":[[0,219],[1,32],[2,193],[4,219],[5,219],[6,219],[56,65],[57,104],[58,133],[59,171]],"b":[[80,"impl-Display-for-Bidegree"],[81,"impl-Debug-for-Bidegree"],[114,"impl-Display-for-BidegreeElement"],[115,"impl-Debug-for-BidegreeElement"],[149,"impl-Display-for-BidegreeGenerator"],[150,"impl-Debug-for-BidegreeGenerator"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAOkAMAAAAAYACAAAAAoAAgAOAAIAEwADABkAEAAsAAAALgAGADYACQBBAAAAQwAPAFQAAQBYAAIAXAADAGEABABnAAEAagAEAHAABAB2AAAAeAAEAH4AAQCBAAMAhwAFAI4ACgCaAAEAnQAAAJ8ADACuAAYAtgAAALgAAgC8AAAAvgAEAMQABQDLAAAAzwAAANEAAgDWAAkA4wAGAOsAAADtAAkA+AAEAAMBAgAJAQAADQEEABMBAgAXAQAAGQEQACwBAQA="}],\
["steenrod",{"t":"","n":[],"q":[],"i":[],"f":"","D":"`","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA"}],\
["tensor",{"t":"","n":[],"q":[],"i":[],"f":"","D":"`","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA"}],\
["unstable_chart",{"t":"","n":[],"q":[],"i":[],"f":"","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["unstable_suspension",{"t":"","n":[],"q":[],"i":[],"f":"","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["yoneda",{"t":"","n":[],"q":[],"i":[],"f":"","D":"`","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);

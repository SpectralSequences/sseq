var searchIndex = JSON.parse('{\
"algebra":{"doc":"","i":[[0,"algebra","algebra","",null,null],[0,"combinatorics","algebra::algebra","",null,null],[17,"MAX_XI_TAU","algebra::algebra::combinatorics","",null,null],[17,"XI_DEGREES","","If p is the nth prime, then <code>XI_DEGREES[n][i - 1]</code> is the …",null,null],[17,"TAU_DEGREES","","If p is the nth prime, then <code>TAU_DEGREES[n][i]</code> is the …",null,null],[5,"adem_relation_coefficient","","",null,[[["u32",15],["validprime",3]],["u32",15]]],[5,"inadmissible_pairs","","",null,[[["bool",15],["i32",15],["validprime",3]],["vec",3]]],[5,"tau_degrees","","",null,[[["validprime",3]]]],[5,"xi_degrees","","",null,[[["validprime",3]]]],[3,"TruncatedPolynomialMonomialBasis","","",null,null],[12,"p","","",0,null],[12,"gens","","",0,null],[12,"gen_degrees","","",0,null],[12,"parts_by_max","","",0,null],[12,"parts","","",0,null],[11,"new","","",0,[[["validprime",3]]]],[11,"generators","","",0,[[["i32",15]],["usize",15]]],[11,"generators_up_to_degree","","",0,[[["i32",15]],["usize",15]]],[11,"gen_deg_idx_to_internal_idx","","",0,[[["usize",15],["i32",15]],["usize",15]]],[11,"internal_idx_to_gen_deg","","",0,[[["usize",15]]]],[11,"parts","","",0,[[["i32",15]],["vec",3]]],[11,"add_gens_and_calculate_parts","","",0,[[["usize",15],["i32",15]]]],[3,"PartitionIterator","","",null,null],[12,"remaining","","",1,null],[12,"parts","","",1,null],[12,"partition","","",1,null],[12,"initial","","",1,null],[11,"new","","",1,[[["u32",15],["i32",15]]]],[11,"search","","",1,[[],["bool",15]]],[0,"algebra_trait","algebra::algebra","",null,null],[8,"Algebra","algebra::algebra::algebra_trait","A graded algebra over F_p, finite dimensional in each …",null,null],[10,"algebra_type","","The “type” of the algebra, which is “adem” or “…",2,[[],["str",15]]],[10,"prime","","Returns the prime the algebra is over.",2,[[],["validprime",3]]],[11,"name","","",2,[[],["str",15]]],[10,"compute_basis","","Computes the list of basis elements up to and including …",2,[[["i32",15]]]],[10,"max_computed_degree","","",2,[[],["i32",15]]],[10,"dimension","","Gets the dimension of the algebra in degree <code>degree</code>.",2,[[["i32",15]],["usize",15]]],[10,"multiply_basis_elements","","Computes the product <code>r * s</code> of the two basis elements, and <em>…",2,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"multiply_basis_element_by_element","","result and s are not required to be aligned.",2,[[["u32",15],["usize",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"multiply_element_by_basis_element","","result and r are not required to be aligned.",2,[[["u32",15],["slice",4],["usize",15],["i32",15],["slicemut",4]]]],[11,"multiply_element_by_element","","result, r and s are not required to be aligned.",2,[[["u32",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"default_filtration_one_products","","A filtration one element in Ext(k, k) is the same as an …",2,[[],["vec",3]]],[11,"json_to_basis","","Converts a JSON object into a basis element. The way …",2,[[["value",4]],["result",6]]],[11,"json_from_basis","","",2,[[["usize",15],["i32",15]],["value",4]]],[10,"basis_element_to_string","","Converts a basis element into a string for display.",2,[[["usize",15],["i32",15]],["string",3]]],[11,"element_to_string","","Converts an element into a string for display.",2,[[["slice",4],["i32",15]],["string",3]]],[11,"generators","","Given a degree <code>degree</code>, the function returns a list of …",2,[[["i32",15]],[["usize",15],["vec",3]]]],[11,"generator_to_string","","This returns the name of a generator. Note that the index …",2,[[["usize",15],["i32",15]],["string",3]]],[11,"string_to_generator","","This parses a string and returns the generator described …",2,[[["str",15]],[["iresult",6],["str",15]]]],[11,"decompose_basis_element","","Given a non-generator basis element of the algebra, …",2,[[["usize",15],["i32",15]],["vec",3]]],[11,"relations_to_check","","Get any relations that the algebra wants checked to …",2,[[["i32",15]],[["vec",3],["vec",3]]]],[0,"bialgebra_trait","algebra::algebra","",null,null],[8,"Bialgebra","algebra::algebra::bialgebra_trait","",null,null],[10,"decompose","","This function decomposes an element of the algebra as a …",3,[[["usize",15],["i32",15]],["vec",3]]],[10,"coproduct","","Expresses Delta(x) as sum_j (A_{ij} (x) B_{ij}). Here x …",3,[[["usize",15],["i32",15]],["vec",3]]],[0,"field","algebra::algebra","",null,null],[3,"Field","algebra::algebra::field","",null,null],[12,"prime","","",4,null],[11,"new","","",4,[[["validprime",3]]]],[0,"polynomial_algebra","algebra::algebra","",null,null],[3,"PolynomialAlgebraMonomial","algebra::algebra::polynomial_algebra","",null,null],[12,"degree","","",5,null],[12,"poly","","",5,null],[12,"ext","","",5,null],[12,"valid","","",5,null],[11,"new","","",5,[[["validprime",3]]]],[3,"PolynomialAlgebraTableEntry","","",null,null],[12,"index_to_monomial","","",6,null],[12,"monomial_to_index","","",6,null],[11,"new","","",6,[[]]],[8,"PolynomialAlgebra","","",null,null],[10,"name","","",7,[[],["string",3]]],[10,"prime","","",7,[[],["validprime",3]]],[10,"polynomial_monomials","","",7,[[],["truncatedpolynomialmonomialbasis",3]]],[10,"exterior_monomials","","",7,[[],["truncatedpolynomialmonomialbasis",3]]],[11,"min_degree","","",7,[[],["i32",15]]],[10,"polynomial_generators_in_degree","","",7,[[["i32",15]],["usize",15]]],[10,"exterior_generators_in_degree","","",7,[[["i32",15]],["usize",15]]],[10,"repr_poly_generator","","",7,[[["usize",15],["i32",15]]]],[10,"repr_ext_generator","","",7,[[["usize",15],["i32",15]],["string",3]]],[10,"basis_table","","",7,[[],["oncevec",3]]],[10,"frobenius_on_generator","","",7,[[["usize",15],["i32",15]],[["usize",15],["option",4]]]],[10,"compute_generating_set","","",7,[[["i32",15]]]],[11,"compute_basis_step","","",7,[[["i32",15]]]],[11,"monomial_to_index","","",7,[[["polynomialalgebramonomial",3]],["usize",15]]],[11,"index_to_monomial","","",7,[[["usize",15],["i32",15]],["polynomialalgebramonomial",3]]],[11,"frobenius_monomial","","",7,[[["fpvector",4],["fpvector",4]]]],[11,"multiply_monomials","","",7,[[["polynomialalgebramonomial",3],["polynomialalgebramonomial",3]],[["option",4],["u32",15]]]],[11,"multiply_polynomials","","",7,[[["u32",15],["i32",15],["fpvector",4],["fpvector",4]]]],[11,"multiply_polynomial_by_monomial","","",7,[[["u32",15],["i32",15],["fpvector",4],["fpvector",4],["polynomialalgebramonomial",3]]]],[11,"multiply_monomial_by_polynomial","","",7,[[["u32",15],["i32",15],["fpvector",4],["fpvector",4],["polynomialalgebramonomial",3]]]],[11,"set_monomial_degree","","",7,[[["polynomialalgebramonomial",3],["i32",15]]]],[0,"steenrod_algebra","algebra::algebra","",null,null],[8,"SteenrodAlgebraT","algebra::algebra::steenrod_algebra","",null,null],[10,"steenrod_algebra","","",8,[[],["steenrodalgebraborrow",4]]],[4,"SteenrodAlgebraBorrow","","",null,null],[13,"BorrowAdem","","",9,null],[13,"BorrowMilnor","","",9,null],[4,"SteenrodAlgebra","","",null,null],[13,"AdemAlgebra","","",10,null],[13,"MilnorAlgebra","","",10,null],[3,"MilnorProfileOption","","",null,null],[12,"truncated","","",11,null],[12,"q_part","","",11,null],[12,"p_part","","",11,null],[3,"AlgebraSpec","","",null,null],[12,"p","","",12,null],[12,"algebra","","",12,null],[12,"profile","","",12,null],[11,"from_json","","",10,[[["value",4],["str",15]],[["result",6],["steenrodalgebra",4]]]],[11,"to_json","","",10,[[["value",4]]]],[3,"InvalidAlgebraError","","",null,null],[12,"name","","",13,null],[0,"adem_algebra","algebra::algebra","",null,null],[8,"AdemAlgebraT","algebra::algebra::adem_algebra","",null,null],[10,"adem_algebra","","",14,[[],["ademalgebra",3]]],[3,"BOCKSTEIN_TABLE","","",null,null],[12,"__private_field","","",15,null],[3,"AdemBasisElement","","The format of the AdemBasisElement is as follows. To …",null,null],[12,"degree","","",16,null],[12,"excess","","",16,null],[12,"bocksteins","","",16,null],[12,"ps","","",16,null],[12,"p_or_sq","","",16,null],[4,"PorBockstein","","",null,null],[13,"P","","",17,null],[13,"Bockstein","","",17,null],[11,"iter_filtered","","",16,[[]]],[11,"iter_full","","",16,[[]]],[5,"adem_basis_element_excess_sort_order","","",null,[[["adembasiselement",3]],["ordering",4]]],[5,"adem_basis_element_length_sort_order","","",null,[[["adembasiselement",3]],["ordering",4]]],[5,"shift_vec","","",null,[[["vec",3],["isize",15]]]],[3,"AdemAlgebra","","",null,null],[12,"p","","",18,null],[12,"name","","",18,null],[12,"generic","","",18,null],[12,"unstable","","",18,null],[12,"unstable_enabled","","",18,null],[12,"next_degree","","",18,null],[12,"even_basis_table","","",18,null],[12,"basis_table","","",18,null],[12,"basis_element_to_index_map","","",18,null],[12,"multiplication_table","","",18,null],[12,"excess_table","","",18,null],[12,"sort_order","","",18,null],[11,"new","","",18,[[["bool",15],["validprime",3]]]],[11,"q","","",18,[[],["i32",15]]],[11,"generate_basis_even","","",18,[[["i32",15]]]],[11,"generate_basis_even_degreen","","",18,[[["i32",15]]]],[11,"generate_basis2","","",18,[[["i32",15]]]],[11,"generate_basis_generic","","",18,[[["i32",15]]]],[11,"generate_basis_generic_degreen","","",18,[[["i32",15]]]],[11,"generate_basis_element_to_index_map","","",18,[[["i32",15]]]],[11,"basis_element_from_index","","",18,[[["usize",15],["i32",15]],["adembasiselement",3]]],[11,"try_basis_element_to_index","","",18,[[["adembasiselement",3]],[["usize",15],["option",4]]]],[11,"basis_element_to_index","","",18,[[["adembasiselement",3]],["usize",15]]],[11,"tail_of_basis_element_to_index","","",18,[[["u32",15],["adembasiselement",3]],["usize",15]]],[11,"generate_multiplication_table_2","","",18,[[["i32",15]]]],[11,"generate_multiplication_table_2_step","","",18,[[["usize",15],["i32",15]],["fpvector",4]]],[11,"generate_multiplication_table_generic","","",18,[[["i32",15]]]],[11,"generate_multiplication_table_generic_step","","This function expresses $Sq^x$ (current) in terms of the …",18,[[["usize",15],["i32",15]],["fpvector",4]]],[11,"dimension_unstable","","",18,[[["i32",15]],["usize",15]]],[11,"multiply_basis_elements_unstable","","",18,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"multiply","","",18,[[["u32",15],["usize",15],["i32",15],["slicemut",4],["bool",15]]]],[11,"make_mono_admissible","","",18,[[["u32",15],["adembasiselement",3],["slicemut",4],["i32",15],["bool",15]]]],[11,"make_mono_admissible_2","","Reduce a Steenrod monomial at the prime 2.",18,[[["adembasiselement",3],["i32",15],["slicemut",4],["bool",15]]]],[11,"make_mono_admissible_generic","","",18,[[["u32",15],["adembasiselement",3],["slicemut",4],["i32",15],["bool",15]]]],[11,"decompose_basis_element_2","","",18,[[["usize",15],["i32",15]],["vec",3]]],[11,"decompose_basis_element_generic","","",18,[[["usize",15],["i32",15]],["vec",3]]],[11,"beps_pn","","",18,[[["u32",15]]]],[11,"generate_excess_table","","",18,[[["i32",15]]]],[0,"milnor_algebra","algebra::algebra","",null,null],[8,"MilnorAlgebraT","algebra::algebra::milnor_algebra","",null,null],[10,"milnor_algebra","","",19,[[],["milnoralgebra",3]]],[3,"MilnorProfile","","",null,null],[12,"truncated","","",20,null],[12,"q_part","","",20,null],[12,"p_part","","",20,null],[11,"is_trivial","","",20,[[],["bool",15]]],[3,"QPart","","",null,null],[12,"degree","","",21,null],[12,"q_part","","",21,null],[6,"PPartEntry","","",null,null],[6,"PPart","","",null,null],[3,"MilnorBasisElement","","",null,null],[12,"q_part","","",22,null],[12,"p_part","","",22,null],[12,"degree","","",22,null],[17,"ZERO_QPART","","",null,null],[11,"from_p","","",22,[[["ppart",6],["i32",15]]]],[11,"clone_into","","",22,[[]]],[3,"MilnorAlgebra","","",null,null],[12,"profile","","",23,null],[12,"name","","",23,null],[12,"next_degree","","",23,null],[12,"p","","",23,null],[12,"generic","","",23,null],[12,"ppart_table","","",23,null],[12,"qpart_table","","",23,null],[12,"basis_table","","",23,null],[12,"basis_element_to_index_map","","",23,null],[11,"new","","",23,[[["validprime",3]]]],[11,"q","","",23,[[],["i32",15]]],[11,"basis_element_from_index","","",23,[[["usize",15],["i32",15]],["milnorbasiselement",3]]],[11,"try_basis_element_to_index","","",23,[[["milnorbasiselement",3]],[["usize",15],["option",4]]]],[11,"basis_element_to_index","","",23,[[["milnorbasiselement",3]],["usize",15]]],[11,"compute_ppart","","",23,[[["i32",15]]]],[11,"compute_qpart","","",23,[[["i32",15]]]],[11,"generate_basis_generic","","",23,[[["i32",15]]]],[11,"generate_basis_2","","",23,[[["i32",15]]]],[11,"try_beps_pn","","",23,[[["u32",15],["ppartentry",6]],["option",4]]],[11,"beps_pn","","",23,[[["u32",15],["ppartentry",6]]]],[11,"multiply_qpart","","",23,[[["u32",15],["milnorbasiselement",3]],["vec",3]]],[11,"multiply","","",23,[[["u32",15],["milnorbasiselement",3],["slicemut",4]]]],[11,"multiply_with_allocation","","",23,[[["u32",15],["ppartallocation",3],["milnorbasiselement",3],["slicemut",4]],["ppartallocation",3]]],[11,"multiply_element_by_basis_with_allocation","","",23,[[["u32",15],["slice",4],["ppartallocation",3],["i32",15],["slicemut",4],["milnorbasiselement",3]],["ppartallocation",3]]],[3,"Matrix2D","","",null,null],[12,"cols","","",24,null],[12,"inner","","",24,null],[11,"reset","","",24,[[["usize",15]]]],[11,"with_capacity","","",24,[[["usize",15]]]],[3,"PPartAllocation","","The parts of a PPartMultiplier that involve heap …",null,null],[12,"m","","",25,null],[12,"diagonal","","",25,null],[12,"p_part","","",25,null],[11,"with_capacity","","This creates a PPartAllocation with enough capacity to …",25,[[["usize",15]]]],[3,"PPartMultiplier","","",null,null],[12,"p","","",26,null],[12,"M","","",26,null],[12,"r","","",26,null],[12,"rows","","",26,null],[12,"cols","","",26,null],[12,"diag_num","","",26,null],[12,"init","","",26,null],[12,"ans","","",26,null],[12,"diagonal","","",26,null],[11,"prime","","",26,[[],["validprime",3]]],[11,"new_from_allocation","","",26,[[["ppartallocation",3],["u32",15],["i32",15],["ppart",6],["validprime",3]]]],[11,"into_allocation","","",26,[[],["ppartallocation",3]]],[11,"next_val","","This compute the first l > k such that (sum + l) choose l …",26,[[["ppartentry",6]],["ppartentry",6]]],[11,"update","","We have a matrix of the form | s₁  s₂  s₃ …r₁ | …",26,[[],["bool",15]]],[11,"next","","This cannot be an actual iterator because we want to …",26,[[],[["option",4],["u32",15]]]],[11,"decompose_basis_element_qpart","","",23,[[["usize",15],["i32",15]],["vec",3]]],[11,"decompose_basis_element_ppart","","",23,[[["usize",15],["i32",15]],["vec",3]]],[11,"increment_p_part","","Returns <code>true</code> if the new element is not within the bounds",23,[[["ppart",6]],["bool",15]]],[0,"change_of_basis","algebra","",null,null],[5,"adem_to_milnor_on_basis","algebra::change_of_basis","",null,[[["u32",15],["usize",15],["ademalgebra",3],["milnoralgebra",3],["fpvector",4],["i32",15]]]],[5,"adem_to_milnor","","",null,[[["u32",15],["ademalgebra",3],["milnoralgebra",3],["fpvector",4],["i32",15],["fpvector",4]]]],[5,"milnor_to_adem_on_basis","","",null,[[["u32",15],["usize",15],["ademalgebra",3],["milnoralgebra",3],["fpvector",4],["i32",15]]]],[5,"milnor_to_adem_on_basis_2","","",null,[[["u32",15],["usize",15],["ademalgebra",3],["milnoralgebra",3],["fpvector",4],["i32",15]]]],[5,"milnor_to_adem_on_basis_generic","","",null,[[["u32",15],["usize",15],["ademalgebra",3],["milnoralgebra",3],["fpvector",4],["i32",15]]]],[5,"milnor_to_adem","","",null,[[["u32",15],["ademalgebra",3],["milnoralgebra",3],["fpvector",4],["i32",15],["fpvector",4]]]],[5,"adem_q","","",null,[[["u32",15],["ademalgebra",3],["milnoralgebra",3],["fpvector",4]]]],[5,"adem_plist","","",null,[[["u32",15],["ademalgebra",3],["milnoralgebra",3],["fpvector",4],["i32",15],["ppart",6]]]],[0,"steenrod_parser","algebra","",null,null],[4,"AlgebraBasisElt","algebra::steenrod_parser","",null,null],[13,"AList","","",27,null],[13,"PList","","",27,null],[13,"P","","",27,null],[13,"Q","","",27,null],[4,"AlgebraParseNode","","",null,null],[13,"Product","","",28,null],[13,"Sum","","",28,null],[13,"BasisElt","","",28,null],[13,"Scalar","","",28,null],[4,"ModuleParseNode","","",null,null],[13,"Act","","",29,null],[13,"Sum","","",29,null],[13,"ModuleBasisElt","","",29,null],[5,"digits","","",null,[[["str",15]],[["iresult",6],["fromstr",8],["copy",8],["str",15]]]],[5,"comma_separated_integer_list","","",null,[[["str",15]],[["iresult",6],["vec",3],["str",15]]]],[5,"comma_separated_sequence","","",null,[[["str",15]],[["iresult",6],["vec",3],["str",15]]]],[5,"space_separated_integer_list","","",null,[[["str",15]],[["iresult",6],["vec",3],["str",15]]]],[5,"space_separated_sequence","","",null,[[["str",15]],[["iresult",6],["vec",3],["str",15]]]],[4,"BocksteinOrSq","","",null,null],[13,"Bockstein","","",30,null],[13,"Sq","","",30,null],[5,"bockstein_b","","",null,[[["str",15]],[["iresult",6],["bocksteinorsq",4],["str",15]]]],[5,"sq_digits","","",null,[[["str",15]],[["iresult",6],["bocksteinorsq",4],["str",15]]]],[5,"space_separated_bockstein_or_sq_list","","",null,[[["str",15]],[["vec",3],["iresult",6],["str",15]]]],[5,"space_separated_bockstein_or_sq_sequence","","",null,[[["str",15]],[["vec",3],["iresult",6],["str",15]]]],[5,"algebra_generator","","",null,[[["str",15]],[["str",15],["algebraparsenode",4],["iresult",6]]]],[5,"scalar","","",null,[[["str",15]],[["str",15],["algebraparsenode",4],["iresult",6]]]],[5,"algebra_parens","","",null,[[["str",15]],[["str",15],["algebraparsenode",4],["iresult",6]]]],[5,"algebra_factor","","",null,[[["str",15]],[["str",15],["algebraparsenode",4],["iresult",6]]]],[5,"algebra_term","","",null,[[["str",15]],[["str",15],["algebraparsenode",4],["iresult",6]]]],[5,"algebra_expr","","",null,[[["str",15]],[["str",15],["algebraparsenode",4],["iresult",6]]]],[5,"module_generator","","",null,[[["str",15]],[["moduleparsenode",4],["iresult",6],["str",15]]]],[5,"module_parens","","",null,[[["str",15]],[["moduleparsenode",4],["iresult",6],["str",15]]]],[5,"module_factor","","",null,[[["str",15]],[["moduleparsenode",4],["iresult",6],["str",15]]]],[5,"module_term","","",null,[[["str",15]],[["moduleparsenode",4],["iresult",6],["str",15]]]],[5,"module_expr","","",null,[[["str",15]],[["moduleparsenode",4],["iresult",6],["str",15]]]],[5,"parse_algebra","","",null,[[["str",15]],[["result",4],["algebraparsenode",4],["parseerror",3]]]],[5,"parse_module","","",null,[[["str",15]],[["moduleparsenode",4],["result",4],["parseerror",3]]]],[3,"ParseError","","",null,null],[12,"info","","",31,null],[0,"steenrod_evaluator","algebra","",null,null],[3,"SteenrodCalculator","algebra::steenrod_evaluator","",null,null],[12,"adem_algebra","","",32,null],[12,"milnor_algebra","","",32,null],[11,"new","","",32,[[["validprime",3]]]],[11,"compute_basis","","",32,[[["i32",15]]]],[11,"evaluate_adem_to_string","","",32,[[["str",15]],[["string",3],["result",6]]]],[11,"evaluate_milnor_to_string","","",32,[[["str",15]],[["string",3],["result",6]]]],[11,"evaluate_adem","","",32,[[["str",15]],["result",6]]],[11,"evaluate_milnor","","",32,[[["str",15]],["result",6]]],[5,"evaluate_algebra_adem","","",null,[[["milnoralgebra",3],["str",15],["ademalgebra",3]],["result",6]]],[5,"evaluate_algebra_milnor","","",null,[[["milnoralgebra",3],["str",15],["ademalgebra",3]],["result",6]]],[5,"evaluate_algebra_tree","","",null,[[["milnoralgebra",3],["algebraparsenode",4],["ademalgebra",3]],["result",6]]],[5,"evaluate_algebra_tree_helper","","",null,[[["i32",15],["milnoralgebra",3],["ademalgebra",3],["option",4],["algebraparsenode",4]],["result",6]]],[5,"evaluate_basis_element","","",null,[[["i32",15],["milnoralgebra",3],["ademalgebra",3],["option",4],["algebrabasiselt",4]],["result",6]]],[5,"evaluate_module","","",null,[[["ademalgebra",3],["milnoralgebra",3],["hashmap",6],["str",15]],["result",6]]],[5,"evaluate_module_tree","","",null,[[["ademalgebra",3],["milnoralgebra",3],["hashmap",6],["moduleparsenode",4]],["result",6]]],[5,"evaluate_module_tree_helper","","",null,[[["moduleparsenode",4],["ademalgebra",3],["milnoralgebra",3],["hashmap",6],["i32",15],["option",4]],["result",6]]],[5,"evaluate_module_basis_element","","",null,[[["string",3],["ademalgebra",3],["milnoralgebra",3],["hashmap",6],["i32",15],["option",4]],["result",6]]],[5,"bockstein_or_sq_to_adem_basis_elt","","",null,[[["bocksteinorsq",4],["i32",15]],["adembasiselement",3]]],[5,"evaluate_p_or_b_list","","",null,[[["ademalgebra",3]]]],[3,"DegreeError","","",null,null],[3,"UnknownBasisElementError","","",null,null],[12,"name","","",33,null],[0,"module","algebra","",null,null],[0,"finite_dimensional_module","algebra::module","",null,null],[3,"FiniteDimensionalModule","algebra::module::finite_dimensional_module","",null,null],[12,"algebra","","",34,null],[12,"name","","",34,null],[12,"graded_dimension","","",34,null],[12,"gen_names","","",34,null],[12,"actions","","",34,null],[11,"test_equal","","",34,[[],[["string",3],["result",4]]]],[11,"new","","",34,[[["usize",15],["arc",3],["string",3],["bivec",3]]]],[11,"set_basis_element_name","","",34,[[["usize",15],["string",3],["i32",15]]]],[11,"module_gens_from_json","","",34,[[["value",4]]]],[11,"allocate_actions","","",34,[[["bivec",3],["arc",3]],[["bivec",3],["bivec",3]]]],[11,"add_generator","","",34,[[["string",3],["i32",15]]]],[11,"string_to_basis_element","","",34,[[["str",15]],["option",4]]],[11,"set_action_vector","","",34,[[["usize",15],["fpvector",4],["i32",15]]]],[11,"set_action","","",34,[[["usize",15],["u32",15],["i32",15],["vec",3]]]],[11,"action","","This function will panic if you call it with input such …",34,[[["usize",15],["i32",15]],["fpvector",4]]],[11,"action_mut","","This function will panic if you call it with input such …",34,[[["usize",15],["i32",15]],["fpvector",4]]],[11,"from_json","","",34,[[["arc",3],["value",4]],["result",6]]],[11,"to_json","","",34,[[["value",4]]]],[11,"parse_action","","",34,[[["bool",15],["hashmap",6],["str",15]],["result",6]]],[11,"parse_element","","",34,[[["i32",15],["slicemut",4],["str",15]],["result",6]]],[11,"take_element","","",34,[[["str",15]],[["iresult",6],["str",15]]]],[11,"check_validity","","",34,[[["i32",15]],[["modulefailedrelationerror",3],["result",4]]]],[11,"extend_actions","","",34,[[["i32",15]]]],[11,"minimal_actions_to_json","","",34,[[],["value",4]]],[11,"to_minimal_json","","",34,[[],["value",4]]],[11,"actions_to_json","","",34,[[],["value",4]]],[11,"gens_to_json","","",34,[[],["value",4]]],[0,"finite_module","algebra::module","",null,null],[4,"FiniteModule","algebra::module::finite_module","",null,null],[13,"FDModule","","",35,null],[13,"FPModule","","",35,null],[13,"RealProjectiveSpace","","",35,null],[11,"from_json","","",35,[[["value",4],["arc",3],["steenrodalgebra",4]],["result",6]]],[11,"to_json","","",35,[[["value",4]]]],[11,"type_","","",35,[[],["str",15]]],[11,"is_real_projective_space","","",35,[[],["bool",15]]],[11,"is_fp_module","","",35,[[],["bool",15]]],[11,"is_fd_module","","",35,[[],["bool",15]]],[11,"into_real_projective_space","","",35,[[],[["realprojectivespace",3],["option",4]]]],[11,"into_fp_module","","",35,[[],[["fpmodule",3],["option",4]]]],[11,"into_fd_module","","",35,[[],[["fdmodule",3],["option",4]]]],[11,"as_real_projective_space","","",35,[[],[["option",4],["realprojectivespace",3]]]],[11,"as_fp_module","","",35,[[],[["fpmodule",3],["option",4]]]],[11,"as_fd_module","","",35,[[],[["fdmodule",3],["option",4]]]],[3,"UnknownModuleTypeError","","",null,null],[12,"module_type","","",36,null],[0,"finitely_presented_module","algebra::module","",null,null],[3,"FPMIndexTable","algebra::module::finitely_presented_module","",null,null],[12,"gen_idx_to_fp_idx","","",37,null],[12,"fp_idx_to_gen_idx","","",37,null],[3,"FinitelyPresentedModule","","",null,null],[12,"name","","",38,null],[12,"min_degree","","",38,null],[12,"generators","","",38,null],[12,"relations","","",38,null],[12,"map","","",38,null],[12,"index_table","","",38,null],[11,"new","","",38,[[["string",3],["arc",3],["i32",15]]]],[11,"add_generators","","",38,[[["vec",3],["string",3],["i32",15]]]],[11,"add_relations","","",38,[[["matrix",3],["i32",15]]]],[11,"module_gens_from_json","","",38,[[["value",4]]]],[11,"from_json","","",38,[[["arc",3],["value",4]],["result",6]]],[11,"to_json","","",38,[[["value",4]]]],[11,"relations_to_json","","",38,[[],["value",4]]],[11,"gen_idx_to_fp_idx","","",38,[[["usize",15],["i32",15]],["isize",15]]],[11,"fp_idx_to_gen_idx","","",38,[[["usize",15],["i32",15]],["usize",15]]],[0,"free_module","algebra::module","",null,null],[3,"OperationGeneratorPair","algebra::module::free_module","",null,null],[12,"operation_degree","","",39,null],[12,"operation_index","","",39,null],[12,"generator_degree","","",39,null],[12,"generator_index","","",39,null],[3,"FreeModule","","We have a linear enumeration of all generators among all …",null,null],[12,"algebra","","",40,null],[12,"name","","",40,null],[12,"min_degree","","",40,null],[12,"gen_names","","",40,null],[12,"gen_deg_idx_to_internal_idx","","degree -> internal index of first generator in degree",40,null],[12,"num_gens","","",40,null],[12,"basis_element_to_opgen","","",40,null],[12,"generator_to_index","","degree -> internal_gen_idx -> the offset of the generator …",40,null],[11,"new","","",40,[[["string",3],["arc",3],["i32",15]]]],[11,"max_computed_degree","","",40,[[],["i32",15]]],[11,"max_table_degree","","",40,[[],["i32",15]]],[11,"number_of_gens_in_degree","","",40,[[["i32",15]],["usize",15]]],[11,"extend_table_entries","","",40,[[["i32",15]]]],[11,"extend_table_entry_step","","",40,[[["i32",15]]]],[11,"add_generators","","",40,[[["usize",15],["i32",15],["vec",3],["option",4]]]],[11,"generator_offset","","Given a generator <code>(gen_deg, gen_idx)</code>, find the first …",40,[[["usize",15],["i32",15]],["usize",15]]],[11,"operation_generator_to_index","","",40,[[["usize",15],["i32",15]],["usize",15]]],[11,"operation_generator_pair_to_idx","","",40,[[["operationgeneratorpair",3]],["usize",15]]],[11,"index_to_op_gen","","",40,[[["usize",15],["i32",15]],["operationgeneratorpair",3]]],[11,"element_to_json","","",40,[[["slice",4],["i32",15]],["value",4]]],[11,"add_generators_immediate","","",40,[[["usize",15],["i32",15],["vec",3],["option",4]]]],[11,"add_num_generators","","",40,[[["usize",15],["i32",15],["vec",3],["option",4]]]],[11,"extend_by_zero","","",40,[[["i32",15]]]],[11,"get_degrees_with_gens","","",40,[[["i32",15]],[["i32",15],["vec",3]]]],[11,"get_max_generator_degree","","",40,[[],["i32",15]]],[11,"element_to_string_pretty","","A version of element_to_string that names the generator …",40,[[["u32",15],["slice",4],["i32",15]],["string",3]]],[0,"rpn","algebra::module","",null,null],[3,"RealProjectiveSpace","algebra::module::rpn","This is $\\\\mathbb{RP}_{\\\\mathrm{min}}^{\\\\mathrm{max}}$. The …",null,null],[12,"algebra","","",41,null],[12,"min","","",41,null],[12,"clear_bottom","","",41,null],[12,"max","","",41,null],[5,"coef_adem","","",null,[[["usize",15],["i32",15],["ademalgebra",3]],["bool",15]]],[5,"coef_milnor","","",null,[[["usize",15],["i32",15],["milnoralgebra",3]],["bool",15]]],[3,"RPSpec","","",null,null],[12,"min","","",42,null],[12,"clear_bottom","","",42,null],[12,"max","","",42,null],[11,"new","","",41,[[["arc",3],["option",4],["i32",15],["bool",15]]]],[11,"max_degree","","",41,[[],[["i32",15],["option",4]]]],[11,"from_json","","",41,[[["arc",3],["value",4]],["result",6]]],[11,"to_json","","",41,[[["value",4]]]],[0,"zero_module","algebra::module","",null,null],[8,"ZeroModule","algebra::module::zero_module","",null,null],[10,"zero_module","","",43,[[["arc",3],["i32",15]]]],[0,"bounded_module","algebra::module","",null,null],[8,"BoundedModule","algebra::module::bounded_module","",null,null],[10,"max_degree","","<code>max_degree</code> is the a degree such that if t > <code>max_degree</code>, …",44,[[],["i32",15]]],[11,"total_dimension","","",44,[[],["usize",15]]],[11,"to_fd_module","","",44,[[],["fdmodule",3]]],[0,"module_trait","algebra::module","",null,null],[8,"Module","algebra::module::module_trait","",null,null],[16,"Algebra","","",45,null],[10,"algebra","","",45,[[],["arc",3]]],[10,"name","","",45,[[],["string",3]]],[10,"min_degree","","",45,[[],["i32",15]]],[11,"compute_basis","","",45,[[["i32",15]]]],[10,"max_computed_degree","","",45,[[],["i32",15]]],[10,"dimension","","",45,[[["i32",15]],["usize",15]]],[10,"act_on_basis","","",45,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[10,"basis_element_to_string","","",45,[[["usize",15],["i32",15]],["string",3]]],[11,"is_unit","","Whether this is the unit module.",45,[[],["bool",15]]],[11,"prime","","",45,[[],["validprime",3]]],[11,"borrow_output","","Whether act_on_basis_borrow is available.",45,[[],["bool",15]]],[11,"act_on_basis_borrow","","Returns a borrow of the value of the corresponding action …",45,[[["usize",15],["i32",15]],["fpvector",4]]],[11,"act","","",45,[[["u32",15],["usize",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"act_by_element","","",45,[[["u32",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"act_by_element_on_basis","","",45,[[["u32",15],["slice",4],["usize",15],["i32",15],["slicemut",4]]]],[11,"basis_string_list","","",45,[[["i32",15]],[["vec",3],["string",3]]]],[11,"element_to_string","","",45,[[["slice",4],["i32",15]],["string",3]]],[11,"truncate_to_fd_module","","This truncates the module to <code>max_dim</code> and represents it as …",45,[[["i32",15],["arc",3]],["fdmodule",3]]],[11,"check_relation","","op1(op2(x)) - (op1*op2)(x)",45,[[["usize",15],["i32",15],["fpvector",4]]]],[11,"check_relations","","Input: degree through which to check. Output: Vec of …",45,[[["i32",15]],["vec",3]]],[11,"test_relations","","",45,[[["usize",15],["i32",15]]]],[3,"ModuleFailedRelationError","","",null,null],[12,"relation","","",46,null],[12,"value","","",46,null],[0,"truncated_module","algebra::module","",null,null],[3,"TruncatedModule","algebra::module::truncated_module","A module M where we quotient out everything above degree …",null,null],[12,"module","","",47,null],[12,"truncation","","",47,null],[11,"new","","",47,[[["i32",15],["arc",3]]]],[0,"free_unstable_module","algebra::module","",null,null],[3,"FreeUnstableModule","algebra::module::free_unstable_module","",null,null],[12,"algebra","","",48,null],[12,"name","","",48,null],[12,"min_degree","","",48,null],[12,"gen_names","","",48,null],[12,"gen_deg_idx_to_internal_idx","","",48,null],[12,"num_gens","","",48,null],[12,"basis_element_to_opgen","","",48,null],[12,"generator_to_index","","",48,null],[11,"new","","",48,[[["string",3],["arc",3],["i32",15]]]],[11,"adem_algebra","","",48,[[],["ademalgebra",3]]],[11,"max_computed_degree","","",48,[[],["i32",15]]],[11,"max_table_degree","","",48,[[],["i32",15]]],[11,"number_of_gens_in_degree","","",48,[[["i32",15]],["usize",15]]],[11,"extend_table_entries","","",48,[[["i32",15]]]],[11,"extend_table_entry_step","","",48,[[["i32",15]]]],[11,"add_generators","","",48,[[["usize",15],["i32",15],["vec",3],["option",4]]]],[11,"generator_offset","","",48,[[["usize",15],["i32",15]],["usize",15]]],[11,"operation_generator_to_index","","",48,[[["usize",15],["i32",15]],["usize",15]]],[11,"operation_generator_pair_to_idx","","",48,[[["operationgeneratorpair",3]],["usize",15]]],[11,"index_to_op_gen","","",48,[[["usize",15],["i32",15]],["operationgeneratorpair",3]]],[11,"element_to_json","","",48,[[["fpvector",4],["i32",15]],["value",4]]],[11,"add_generators_immediate","","",48,[[["usize",15],["i32",15],["vec",3],["option",4]]]],[11,"add_num_generators","","",48,[[["usize",15],["i32",15],["vec",3],["option",4]]]],[11,"extend_by_zero","","",48,[[["i32",15]]]],[11,"get_degrees_with_gens","","",48,[[["i32",15]],[["i32",15],["vec",3]]]],[11,"get_max_generator_degree","","",48,[[],["i32",15]]],[0,"polynomial_algebra_module","algebra::module","",null,null],[8,"PolynomialAlgebraModule","algebra::module::polynomial_algebra_module","",null,null],[16,"Algebra","","",49,null],[10,"algebra","","",49,[[],["arc",3]]],[10,"sq_polynomial_generator_to_monomial","","",49,[[["polynomialalgebramonomial",3],["usize",15],["i32",15]]]],[10,"sq_exterior_generator_to_monomial","","",49,[[["polynomialalgebramonomial",3],["usize",15],["i32",15]]]],[10,"bockstein_polynomial_generator_to_monomial","","",49,[[["polynomialalgebramonomial",3],["usize",15],["i32",15]]]],[10,"bockstein_exterior_generator_to_monomial","","",49,[[["polynomialalgebramonomial",3],["usize",15],["i32",15]]]],[10,"action_table","","",49,[[],["oncevec",3]]],[10,"bockstein_table","","",49,[[],["oncevec",3]]],[11,"bottom_truncation","","",49,[[],["i32",15]]],[11,"top_truncation","","",49,[[],["i32",15]]],[11,"sq_polynomial_generator_to_polynomial","","",49,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"sq_exterior_generator_to_polynomial","","",49,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"bockstein_polynomial_generator_to_polynomial","","",49,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"bockstein_exterior_generator_to_polynomial","","",49,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"sq_on_basis","","",49,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"sq_monomial_to_polynomial","","",49,[[["u32",15],["i32",15],["slicemut",4],["polynomialalgebramonomial",3]]]],[11,"sq_polynomial_to_polynomial","","",49,[[["u32",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"bockstein_on_basis","","",49,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"bockstein_monomial_to_polynomial","","",49,[[["u32",15],["polynomialalgebramonomial",3],["slicemut",4]]]],[11,"bockstein_polynomial_to_polynomial","","",49,[[["u32",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"compute_action_table","","",49,[[["i32",15]]]],[11,"compute_action_table_ext_case","","",49,[[["usize",15],["fpvector",4],["i32",15],["fpvector",4],["polynomialalgebramonomial",3]],["fpvector",4]]],[11,"compute_action_table_poly_case","","",49,[[["usize",15],["fpvector",4],["i32",15],["polynomialalgebramonomial",3]],["fpvector",4]]],[11,"compute_bockstein_table","","",49,[[["i32",15]]]],[0,"kfpn","algebra::module","",null,null],[3,"KFpn","algebra::module::kfpn","",null,null],[12,"algebra","","",50,null],[12,"n","","",50,null],[12,"polynomial_monomials_field","","",50,null],[12,"exterior_monomials_field","","",50,null],[12,"basis_table_field","","",50,null],[12,"action_table_field","","",50,null],[12,"bockstein_table_field","","",50,null],[12,"frobenius_table","","",50,null],[12,"inverse_frobenius_table","","",50,null],[11,"new","","",50,[[["arc",3],["i32",15]]]],[11,"adem_algebra","","",50,[[],["ademalgebra",3]]],[11,"action_on_generator_helper","","",50,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[0,"bcp","algebra::module","",null,null],[3,"BCp","algebra::module::bcp","",null,null],[12,"algebra","","",51,null],[12,"polynomial_monomials_field","","",51,null],[12,"exterior_monomials_field","","",51,null],[12,"basis_table_field","","",51,null],[12,"action_table_field","","",51,null],[12,"bockstein_table_field","","",51,null],[11,"new","","",51,[[["arc",3]]]],[5,"is_two_times_power_of_p","","",null,[[["bool",15],["i32",15]],["bool",15]]],[0,"dickson2","algebra::module","",null,null],[3,"Dickson2","algebra::module::dickson2","",null,null],[12,"algebra","","",52,null],[12,"n","","",52,null],[12,"polynomial_monomials_field","","",52,null],[12,"exterior_monomials_field","","",52,null],[12,"basis_table_field","","",52,null],[12,"action_table_field","","",52,null],[12,"quadratic_terms_field","","",52,null],[11,"new","","",52,[[["arc",3],["i32",15]]]],[11,"adem_algebra","","",52,[[],["ademalgebra",3]]],[11,"quadratic_terms","","",52,[[["i32",15]],["option",4]]],[11,"klfrob","","",52,[[["i32",15]],["option",4]]],[0,"hom_module","algebra::module","",null,null],[3,"HomModule","algebra::module::hom_module","",null,null],[12,"algebra","","",53,null],[12,"source","","",53,null],[12,"target","","",53,null],[12,"block_structures","","",53,null],[11,"new","","",53,[[["arc",3],["arc",3],["freemodule",3]]]],[11,"source","","",53,[[],[["arc",3],["freemodule",3]]]],[11,"target","","",53,[[],["arc",3]]],[11,"element_to_homomorphism","","",53,[[["slice",4],["i32",15]],["freemodulehomomorphism",3]]],[11,"evaluate_basis_map_on_element","","",53,[[["u32",15],["usize",15],["slice",4],["i32",15],["slicemut",4]]]],[0,"quotient_module","algebra::module","",null,null],[3,"QuotientModule","algebra::module::quotient_module","Given a module <code>module</code>, this is the quotient of <code>module</code> by …",null,null],[12,"module","","",54,null],[12,"subspaces","","",54,null],[12,"basis_list","","",54,null],[11,"new","","",54,[[["arc",3]]]],[11,"quotient","","",54,[[["slice",4],["i32",15]]]],[11,"quotient_basis_elements","","",54,[[["i32",15]]]],[11,"quotient_vectors","","",54,[[["fpvector",4],["vec",3],["i32",15]]]],[11,"flush","","",54,[[["i32",15]]]],[11,"quotient_all","","",54,[[["i32",15]]]],[11,"act_on_original_basis","","",54,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"reduce","","",54,[[["slicemut",4],["i32",15]]]],[11,"old_basis_to_new","","",54,[[["slicemut",4],["slice",4],["i32",15]]]],[0,"sum_module","algebra::module","",null,null],[3,"SumModule","algebra::module::sum_module","",null,null],[12,"algebra","","",55,null],[12,"min_degree","","",55,null],[12,"modules","","",55,null],[12,"block_structures","","",55,null],[11,"new","","",55,[[["arc",3],["i32",15],["vec",3],["arc",3]]]],[11,"get_module_num","","",55,[[["usize",15],["i32",15]],["usize",15]]],[11,"offset","","",55,[[["usize",15],["i32",15]],["usize",15]]],[0,"tensor_module","algebra::module","",null,null],[3,"TensorModule","algebra::module::tensor_module","",null,null],[12,"left","","",56,null],[12,"right","","",56,null],[12,"block_structures","","",56,null],[11,"new","","",56,[[["arc",3],["arc",3]]]],[11,"seek_module_num","","",56,[[["usize",15],["i32",15]],["i32",15]]],[11,"offset","","",56,[[["i32",15]],["usize",15]]],[11,"act_helper","","",56,[[["u32",15],["usize",15],["slice",4],["i32",15],["slicemut",4]]]],[0,"block_structure","algebra::module","",null,null],[3,"GeneratorBasisEltPair","algebra::module::block_structure","",null,null],[12,"generator_degree","","",57,null],[12,"generator_index","","",57,null],[12,"basis_index","","",57,null],[3,"BlockStructure","","",null,null],[12,"total_dimension","","",58,null],[12,"basis_element_to_block_idx","","",58,null],[12,"block_starts","","",58,null],[3,"BlockStart","","",null,null],[12,"block_start_index","","",59,null],[12,"block_size","","",59,null],[11,"new","","",58,[[["bivec",3]]]],[11,"generator_to_block","","",58,[[["usize",15],["i32",15]],["blockstart",3]]],[11,"generator_basis_elt_to_index","","",58,[[["usize",15],["i32",15]],["usize",15]]],[11,"index_to_generator_basis_elt","","",58,[[["usize",15]],["generatorbasiseltpair",3]]],[11,"add_block","","",58,[[["u32",15],["usize",15],["slice",4],["i32",15],["slicemut",4]]]],[0,"homomorphism","algebra::module","",null,null],[0,"bounded_module_homomorphism","algebra::module::homomorphism","",null,null],[3,"BoundedModuleHomomorphism","algebra::module::homomorphism::bounded_module_homomorphism","",null,null],[12,"lock","","",60,null],[12,"source","","",60,null],[12,"target","","",60,null],[12,"degree_shift","","",60,null],[12,"matrices","","",60,null],[12,"quasi_inverses","","",60,null],[12,"kernels","","",60,null],[11,"new","","",60,[[["arc",3],["arc",3],["i32",15]]]],[11,"from_matrices","","",60,[[["arc",3],["arc",3],["bivec",3],["i32",15],["matrix",3]]]],[11,"from","","",60,[[]]],[11,"replace_source","","This function replaces the source of the …",60,[[["arc",3],["boundedmodule",8]],[["boundedmodulehomomorphism",3],["boundedmodule",8]]]],[11,"replace_target","","See <code>replace_source</code>",60,[[["arc",3],["boundedmodule",8]],[["boundedmodule",8],["boundedmodulehomomorphism",3]]]],[0,"finite_module_homomorphism","algebra::module::homomorphism","",null,null],[4,"FMHI","algebra::module::homomorphism::finite_module_homomorphism","",null,null],[13,"FD","","",61,null],[13,"FP","","",61,null],[13,"RP","","",61,null],[3,"FiniteModuleHomomorphism","","",null,null],[12,"source","","",62,null],[12,"target","","",62,null],[12,"map","","",62,null],[0,"fp_module_homomorphism","algebra::module::homomorphism","",null,null],[3,"FPModuleHomomorphism","algebra::module::homomorphism::fp_module_homomorphism","",null,null],[12,"source","","",63,null],[12,"underlying_map","","",63,null],[8,"FPModuleT","","",null,null],[10,"gen_idx_to_fp_idx","","",64,[[["usize",15],["i32",15]],["isize",15]]],[10,"fp_idx_to_gen_idx","","",64,[[["usize",15],["i32",15]],["usize",15]]],[10,"generators","","",64,[[],["arc",3]]],[0,"free_module_homomorphism","algebra::module::homomorphism","",null,null],[3,"FreeModuleHomomorphism","algebra::module::homomorphism::free_module_homomorphism","",null,null],[12,"source","","",65,null],[12,"target","","",65,null],[12,"outputs","","",65,null],[12,"kernel","","",65,null],[12,"quasi_inverse","","",65,null],[12,"min_degree","","",65,null],[12,"lock","","",65,null],[12,"degree_shift","","degree shift, such that ouptut_degree = input_degree - …",65,null],[11,"new","","",65,[[["arc",3],["arc",3],["freemodule",3],["i32",15]]]],[11,"degree_shift","","",65,[[],["i32",15]]],[11,"min_degree","","",65,[[],["i32",15]]],[11,"next_degree","","",65,[[],["i32",15]]],[11,"output","","",65,[[["usize",15],["i32",15]],["fpvector",4]]],[11,"extend_by_zero_safe","","",65,[[["i32",15]]]],[11,"extend_by_zero","","",65,[[["i32",15],["mutexguard",6]]]],[11,"add_generators_from_big_vector","","",65,[[["i32",15],["slice",4],["mutexguard",6]]]],[11,"add_generators_from_matrix_rows","","A MatrixSlice will do but there is no applicaiton of this …",65,[[["i32",15],["matrixslicemut",3],["mutexguard",6]]]],[11,"add_generators_from_rows","","",65,[[["vec",3],["i32",15],["fpvector",4],["mutexguard",6]]]],[11,"apply_to_generator","","",65,[[["u32",15],["usize",15],["i32",15],["fpvector",4]]]],[11,"get_matrix","","",65,[[["i32",15],["matrixslicemut",3]]]],[11,"lock","","",65,[[],["mutexguard",6]]],[11,"set_kernel","","",65,[[["i32",15],["subspace",3],["mutexguard",6]]]],[11,"set_quasi_inverse","","",65,[[["i32",15],["quasiinverse",3],["mutexguard",6]]]],[11,"check_mutex","","",65,[[["mutexguard",6]]]],[11,"hom_k","","Given f: M -> N, compute the dual f*: Hom(N, k) -> Hom(M, …",65,[[["i32",15]],[["vec",3],["vec",3]]]],[0,"generic_zero_homomorphism","algebra::module::homomorphism","",null,null],[3,"GenericZeroHomomorphism","algebra::module::homomorphism::generic_zero_homomorphism","",null,null],[12,"source","","",66,null],[12,"target","","",66,null],[12,"degree_shift","","",66,null],[11,"new","","",66,[[["arc",3],["arc",3],["i32",15]]]],[0,"hom_pullback","algebra::module::homomorphism","",null,null],[3,"HomPullback","algebra::module::homomorphism::hom_pullback","Given a map <code>map</code>: A -> B and <code>source</code> = Hom(B, X), <code>target</code> = …",null,null],[12,"source","","",67,null],[12,"target","","",67,null],[12,"map","","",67,null],[12,"kernel","","",67,null],[12,"quasi_inverse","","",67,null],[11,"new","","",67,[[["arc",3],["freemodulehomomorphism",3],["arc",3],["hommodule",3]]]],[0,"quotient_homomorphism","algebra::module::homomorphism","",null,null],[3,"QuotientHomomorphism","algebra::module::homomorphism::quotient_homomorphism","",null,null],[12,"f","","",68,null],[12,"s","","",68,null],[12,"t","","",68,null],[11,"new","","",68,[[["quotientmodule",3],["arc",3],["arc",3],["arc",3],["quotientmodule",3]]]],[3,"QuotientHomomorphismSource","","",null,null],[12,"f","","",69,null],[12,"s","","",69,null],[12,"t","","",69,null],[11,"new","","",69,[[["quotientmodule",3],["arc",3],["arc",3],["arc",3]]]],[0,"truncated_homomorphism","algebra::module::homomorphism","",null,null],[3,"TruncatedHomomorphism","algebra::module::homomorphism::truncated_homomorphism","",null,null],[12,"f","","",70,null],[12,"s","","",70,null],[12,"t","","",70,null],[3,"TruncatedHomomorphismSource","","",null,null],[12,"f","","",71,null],[12,"s","","",71,null],[12,"t","","",71,null],[11,"new","","",70,[[["truncatedmodule",3],["arc",3],["truncatedmodule",3],["arc",3],["arc",3]]]],[11,"truncated_degree","","",70,[[],["i32",15]]],[11,"new","","",71,[[["arc",3],["truncatedmodule",3],["arc",3],["arc",3]]]],[11,"truncated_degree","","",71,[[],["i32",15]]],[3,"BoundedModuleHomomorphism","algebra::module::homomorphism","",null,null],[12,"lock","","",60,null],[12,"source","","",60,null],[12,"target","","",60,null],[12,"degree_shift","","",60,null],[12,"matrices","","",60,null],[12,"quasi_inverses","","",60,null],[12,"kernels","","",60,null],[3,"FiniteModuleHomomorphism","","",null,null],[12,"source","","",62,null],[12,"target","","",62,null],[12,"map","","",62,null],[3,"FPModuleHomomorphism","","",null,null],[12,"source","","",63,null],[12,"underlying_map","","",63,null],[8,"FPModuleT","","",null,null],[10,"gen_idx_to_fp_idx","","",64,[[["usize",15],["i32",15]],["isize",15]]],[10,"fp_idx_to_gen_idx","","",64,[[["usize",15],["i32",15]],["usize",15]]],[10,"generators","","",64,[[],["arc",3]]],[3,"FreeModuleHomomorphism","","",null,null],[12,"source","","",65,null],[12,"target","","",65,null],[12,"outputs","","",65,null],[12,"kernel","","",65,null],[12,"quasi_inverse","","",65,null],[12,"min_degree","","",65,null],[12,"lock","","",65,null],[12,"degree_shift","","degree shift, such that ouptut_degree = input_degree - …",65,null],[3,"GenericZeroHomomorphism","","",null,null],[12,"source","","",66,null],[12,"target","","",66,null],[12,"degree_shift","","",66,null],[3,"HomPullback","","Given a map <code>map</code>: A -> B and <code>source</code> = Hom(B, X), <code>target</code> = …",null,null],[12,"source","","",67,null],[12,"target","","",67,null],[12,"map","","",67,null],[12,"kernel","","",67,null],[12,"quasi_inverse","","",67,null],[3,"QuotientHomomorphism","","",null,null],[12,"f","","",68,null],[12,"s","","",68,null],[12,"t","","",68,null],[3,"QuotientHomomorphismSource","","",null,null],[12,"f","","",69,null],[12,"s","","",69,null],[12,"t","","",69,null],[3,"TruncatedHomomorphism","","",null,null],[12,"f","","",70,null],[12,"s","","",70,null],[12,"t","","",70,null],[3,"TruncatedHomomorphismSource","","",null,null],[12,"f","","",71,null],[12,"s","","",71,null],[12,"t","","",71,null],[8,"ModuleHomomorphism","","",null,null],[16,"Source","","",72,null],[16,"Target","","",72,null],[18,"CUSTOM_QI","","",72,null],[10,"source","","",72,[[],["arc",3]]],[10,"target","","",72,[[],["arc",3]]],[10,"degree_shift","","",72,[[],["i32",15]]],[10,"apply_to_basis_element","","Calling this function when …",72,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[10,"kernel","","",72,[[["i32",15]],["subspace",3]]],[10,"quasi_inverse","","",72,[[["i32",15]],["quasiinverse",3]]],[10,"compute_kernels_and_quasi_inverses_through_degree","","",72,[[["i32",15]]]],[11,"apply","","",72,[[["u32",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"prime","","",72,[[],["validprime",3]]],[11,"min_degree","","",72,[[],["i32",15]]],[11,"image","","Returns the image of the module homomorphism in degree …",72,[[["i32",15]],["option",4]]],[11,"calculate_quasi_inverse","","A version of kernel_and_quasi_inverse that, in fact, doesn…",72,[[["i32",15]],["quasiinverse",3]]],[11,"kernel_and_quasi_inverse","","",72,[[["i32",15]]]],[11,"get_matrix","","The (sliced) dimensions of <code>matrix</code> must be equal to …",72,[[["i32",15],["matrixslicemut",3]]]],[11,"apply_quasi_inverse","","",72,[[["i32",15],["slice",4],["slicemut",4]]]],[8,"ZeroHomomorphism","","",null,null],[10,"zero_homomorphism","","",73,[[["arc",3],["arc",3],["i32",15]]]],[8,"IdentityHomomorphism","","",null,null],[10,"identity_homomorphism","","",74,[[["arc",3]]]],[3,"FDModule","algebra::module","",null,null],[12,"algebra","","",34,null],[12,"name","","",34,null],[12,"graded_dimension","","",34,null],[12,"gen_names","","",34,null],[12,"actions","","",34,null],[4,"FiniteModule","","",null,null],[13,"FDModule","","",35,null],[13,"FPModule","","",35,null],[13,"RealProjectiveSpace","","",35,null],[3,"FPModule","","",null,null],[12,"name","","",38,null],[12,"min_degree","","",38,null],[12,"generators","","",38,null],[12,"relations","","",38,null],[12,"map","","",38,null],[12,"index_table","","",38,null],[3,"FreeModule","","We have a linear enumeration of all generators among all …",null,null],[12,"algebra","","",40,null],[12,"name","","",40,null],[12,"min_degree","","",40,null],[12,"gen_names","","",40,null],[12,"gen_deg_idx_to_internal_idx","","degree -> internal index of first generator in degree",40,null],[12,"num_gens","","",40,null],[12,"basis_element_to_opgen","","",40,null],[12,"generator_to_index","","degree -> internal_gen_idx -> the offset of the generator …",40,null],[3,"OperationGeneratorPair","","",null,null],[12,"operation_degree","","",39,null],[12,"operation_index","","",39,null],[12,"generator_degree","","",39,null],[12,"generator_index","","",39,null],[3,"RealProjectiveSpace","","This is $\\\\mathbb{RP}_{\\\\mathrm{min}}^{\\\\mathrm{max}}$. The …",null,null],[12,"algebra","","",41,null],[12,"min","","",41,null],[12,"clear_bottom","","",41,null],[12,"max","","",41,null],[8,"ZeroModule","","",null,null],[10,"zero_module","","",43,[[["arc",3],["i32",15]]]],[8,"BoundedModule","","",null,null],[10,"max_degree","","<code>max_degree</code> is the a degree such that if t > <code>max_degree</code>, …",44,[[],["i32",15]]],[11,"total_dimension","algebra::module::bounded_module","",44,[[],["usize",15]]],[11,"to_fd_module","","",44,[[],["fdmodule",3]]],[8,"Module","algebra::module","",null,null],[16,"Algebra","","",45,null],[10,"algebra","","",45,[[],["arc",3]]],[10,"name","","",45,[[],["string",3]]],[10,"min_degree","","",45,[[],["i32",15]]],[11,"compute_basis","algebra::module::module_trait","",45,[[["i32",15]]]],[10,"max_computed_degree","algebra::module","",45,[[],["i32",15]]],[10,"dimension","","",45,[[["i32",15]],["usize",15]]],[10,"act_on_basis","","",45,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[10,"basis_element_to_string","","",45,[[["usize",15],["i32",15]],["string",3]]],[11,"is_unit","algebra::module::module_trait","Whether this is the unit module.",45,[[],["bool",15]]],[11,"prime","","",45,[[],["validprime",3]]],[11,"borrow_output","","Whether act_on_basis_borrow is available.",45,[[],["bool",15]]],[11,"act_on_basis_borrow","","Returns a borrow of the value of the corresponding action …",45,[[["usize",15],["i32",15]],["fpvector",4]]],[11,"act","","",45,[[["u32",15],["usize",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"act_by_element","","",45,[[["u32",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"act_by_element_on_basis","","",45,[[["u32",15],["slice",4],["usize",15],["i32",15],["slicemut",4]]]],[11,"basis_string_list","","",45,[[["i32",15]],[["vec",3],["string",3]]]],[11,"element_to_string","","",45,[[["slice",4],["i32",15]],["string",3]]],[11,"truncate_to_fd_module","","This truncates the module to <code>max_dim</code> and represents it as …",45,[[["i32",15],["arc",3]],["fdmodule",3]]],[11,"check_relation","","op1(op2(x)) - (op1*op2)(x)",45,[[["usize",15],["i32",15],["fpvector",4]]]],[11,"check_relations","","Input: degree through which to check. Output: Vec of …",45,[[["i32",15]],["vec",3]]],[11,"test_relations","","",45,[[["usize",15],["i32",15]]]],[3,"ModuleFailedRelationError","algebra::module","",null,null],[12,"relation","","",46,null],[12,"value","","",46,null],[3,"FreeUnstableModule","","",null,null],[12,"algebra","","",48,null],[12,"name","","",48,null],[12,"min_degree","","",48,null],[12,"gen_names","","",48,null],[12,"gen_deg_idx_to_internal_idx","","",48,null],[12,"num_gens","","",48,null],[12,"basis_element_to_opgen","","",48,null],[12,"generator_to_index","","",48,null],[8,"PolynomialAlgebraModule","","",null,null],[16,"Algebra","","",49,null],[10,"algebra","","",49,[[],["arc",3]]],[10,"sq_polynomial_generator_to_monomial","","",49,[[["polynomialalgebramonomial",3],["usize",15],["i32",15]]]],[10,"sq_exterior_generator_to_monomial","","",49,[[["polynomialalgebramonomial",3],["usize",15],["i32",15]]]],[10,"bockstein_polynomial_generator_to_monomial","","",49,[[["polynomialalgebramonomial",3],["usize",15],["i32",15]]]],[10,"bockstein_exterior_generator_to_monomial","","",49,[[["polynomialalgebramonomial",3],["usize",15],["i32",15]]]],[10,"action_table","","",49,[[],["oncevec",3]]],[10,"bockstein_table","","",49,[[],["oncevec",3]]],[11,"bottom_truncation","algebra::module::polynomial_algebra_module","",49,[[],["i32",15]]],[11,"top_truncation","","",49,[[],["i32",15]]],[11,"sq_polynomial_generator_to_polynomial","","",49,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"sq_exterior_generator_to_polynomial","","",49,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"bockstein_polynomial_generator_to_polynomial","","",49,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"bockstein_exterior_generator_to_polynomial","","",49,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"sq_on_basis","","",49,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"sq_monomial_to_polynomial","","",49,[[["u32",15],["i32",15],["slicemut",4],["polynomialalgebramonomial",3]]]],[11,"sq_polynomial_to_polynomial","","",49,[[["u32",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"bockstein_on_basis","","",49,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"bockstein_monomial_to_polynomial","","",49,[[["u32",15],["polynomialalgebramonomial",3],["slicemut",4]]]],[11,"bockstein_polynomial_to_polynomial","","",49,[[["u32",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"compute_action_table","","",49,[[["i32",15]]]],[11,"compute_action_table_ext_case","","",49,[[["usize",15],["fpvector",4],["i32",15],["fpvector",4],["polynomialalgebramonomial",3]],["fpvector",4]]],[11,"compute_action_table_poly_case","","",49,[[["usize",15],["fpvector",4],["i32",15],["polynomialalgebramonomial",3]],["fpvector",4]]],[11,"compute_bockstein_table","","",49,[[["i32",15]]]],[3,"KFpn","algebra::module","",null,null],[12,"algebra","","",50,null],[12,"n","","",50,null],[12,"polynomial_monomials_field","","",50,null],[12,"exterior_monomials_field","","",50,null],[12,"basis_table_field","","",50,null],[12,"action_table_field","","",50,null],[12,"bockstein_table_field","","",50,null],[12,"frobenius_table","","",50,null],[12,"inverse_frobenius_table","","",50,null],[3,"BCp","","",null,null],[12,"algebra","","",51,null],[12,"polynomial_monomials_field","","",51,null],[12,"exterior_monomials_field","","",51,null],[12,"basis_table_field","","",51,null],[12,"action_table_field","","",51,null],[12,"bockstein_table_field","","",51,null],[3,"Dickson2","","",null,null],[12,"algebra","","",52,null],[12,"n","","",52,null],[12,"polynomial_monomials_field","","",52,null],[12,"exterior_monomials_field","","",52,null],[12,"basis_table_field","","",52,null],[12,"action_table_field","","",52,null],[12,"quadratic_terms_field","","",52,null],[3,"HomModule","","",null,null],[12,"algebra","","",53,null],[12,"source","","",53,null],[12,"target","","",53,null],[12,"block_structures","","",53,null],[3,"QuotientModule","","Given a module <code>module</code>, this is the quotient of <code>module</code> by …",null,null],[12,"module","","",54,null],[12,"subspaces","","",54,null],[12,"basis_list","","",54,null],[3,"SumModule","","",null,null],[12,"algebra","","",55,null],[12,"min_degree","","",55,null],[12,"modules","","",55,null],[12,"block_structures","","",55,null],[3,"TensorModule","","",null,null],[12,"left","","",56,null],[12,"right","","",56,null],[12,"block_structures","","",56,null],[3,"TruncatedModule","","A module M where we quotient out everything above degree …",null,null],[12,"module","","",47,null],[12,"truncation","","",47,null],[8,"SteenrodModule","","",null,null],[0,"cli_module_loaders","algebra","",null,null],[5,"get_gens","algebra::cli_module_loaders","",null,[[["i32",15]],[["result",6],["bivec",3]]]],[5,"gens_to_json","","",null,[[["bivec",3]],["value",4]]],[5,"get_expression_to_vector","","",null,[[["fpvector",4],["str",15]]]],[5,"interactive_module_define","","",null,[[],[["string",3],["result",6]]]],[5,"interactive_module_define_fdmodule","","",null,[[["value",4],["bool",15],["string",3],["validprime",3]],["result",6]]],[5,"get_relation","","",null,[[["ademalgebra",3],["milnoralgebra",3],["hashmap",6],["freemodule",3]],[["string",3],["result",4]]]],[5,"interactive_module_define_fpmodule","","",null,[[["value",4],["bool",15],["string",3],["validprime",3]],["result",6]]],[0,"combinatorics","algebra","",null,null],[17,"MAX_XI_TAU","algebra::combinatorics","",null,null],[5,"adem_relation_coefficient","","",null,[[["u32",15],["validprime",3]],["u32",15]]],[5,"inadmissible_pairs","","",null,[[["bool",15],["i32",15],["validprime",3]],["vec",3]]],[5,"tau_degrees","","",null,[[["validprime",3]]]],[5,"xi_degrees","","",null,[[["validprime",3]]]],[3,"TruncatedPolynomialMonomialBasis","","",null,null],[12,"p","","",0,null],[12,"gens","","",0,null],[12,"gen_degrees","","",0,null],[12,"parts_by_max","","",0,null],[12,"parts","","",0,null],[3,"PartitionIterator","","",null,null],[12,"remaining","","",1,null],[12,"parts","","",1,null],[12,"partition","","",1,null],[12,"initial","","",1,null],[0,"field","algebra","",null,null],[3,"Field","algebra::field","",null,null],[12,"prime","","",4,null],[0,"adem_algebra","algebra","",null,null],[8,"AdemAlgebraT","algebra::adem_algebra","",null,null],[10,"adem_algebra","","",14,[[],["ademalgebra",3]]],[3,"AdemBasisElement","","The format of the AdemBasisElement is as follows. To …",null,null],[12,"degree","","",16,null],[12,"excess","","",16,null],[12,"bocksteins","","",16,null],[12,"ps","","",16,null],[12,"p_or_sq","","",16,null],[4,"PorBockstein","","",null,null],[13,"P","","",17,null],[13,"Bockstein","","",17,null],[3,"AdemAlgebra","","",null,null],[12,"p","","",18,null],[12,"name","","",18,null],[12,"generic","","",18,null],[12,"unstable","","",18,null],[12,"unstable_enabled","","",18,null],[12,"next_degree","","",18,null],[12,"even_basis_table","","",18,null],[12,"basis_table","","",18,null],[12,"basis_element_to_index_map","","",18,null],[12,"multiplication_table","","",18,null],[12,"excess_table","","",18,null],[12,"sort_order","","",18,null],[0,"milnor_algebra","algebra","",null,null],[8,"MilnorAlgebraT","algebra::milnor_algebra","",null,null],[10,"milnor_algebra","","",19,[[],["milnoralgebra",3]]],[3,"MilnorProfile","","",null,null],[12,"truncated","","",20,null],[12,"q_part","","",20,null],[12,"p_part","","",20,null],[3,"QPart","","",null,null],[12,"degree","","",21,null],[12,"q_part","","",21,null],[6,"PPartEntry","","",null,null],[6,"PPart","","",null,null],[3,"MilnorBasisElement","","",null,null],[12,"q_part","","",22,null],[12,"p_part","","",22,null],[12,"degree","","",22,null],[3,"MilnorAlgebra","","",null,null],[12,"profile","","",23,null],[12,"name","","",23,null],[12,"next_degree","","",23,null],[12,"p","","",23,null],[12,"generic","","",23,null],[12,"ppart_table","","",23,null],[12,"qpart_table","","",23,null],[12,"basis_table","","",23,null],[12,"basis_element_to_index_map","","",23,null],[3,"PPartAllocation","","The parts of a PPartMultiplier that involve heap …",null,null],[12,"m","","",25,null],[12,"diagonal","","",25,null],[12,"p_part","","",25,null],[3,"PPartMultiplier","","",null,null],[12,"p","","",26,null],[12,"M","","",26,null],[12,"r","","",26,null],[12,"rows","","",26,null],[12,"cols","","",26,null],[12,"diag_num","","",26,null],[12,"init","","",26,null],[12,"ans","","",26,null],[12,"diagonal","","",26,null],[8,"Algebra","algebra","A graded algebra over F_p, finite dimensional in each …",null,null],[10,"algebra_type","","The “type” of the algebra, which is “adem” or “…",2,[[],["str",15]]],[10,"prime","","Returns the prime the algebra is over.",2,[[],["validprime",3]]],[11,"name","algebra::algebra::algebra_trait","",2,[[],["str",15]]],[10,"compute_basis","algebra","Computes the list of basis elements up to and including …",2,[[["i32",15]]]],[10,"max_computed_degree","","",2,[[],["i32",15]]],[10,"dimension","","Gets the dimension of the algebra in degree <code>degree</code>.",2,[[["i32",15]],["usize",15]]],[10,"multiply_basis_elements","","Computes the product <code>r * s</code> of the two basis elements, and <em>…",2,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"multiply_basis_element_by_element","algebra::algebra::algebra_trait","result and s are not required to be aligned.",2,[[["u32",15],["usize",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"multiply_element_by_basis_element","","result and r are not required to be aligned.",2,[[["u32",15],["slice",4],["usize",15],["i32",15],["slicemut",4]]]],[11,"multiply_element_by_element","","result, r and s are not required to be aligned.",2,[[["u32",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"default_filtration_one_products","","A filtration one element in Ext(k, k) is the same as an …",2,[[],["vec",3]]],[11,"json_to_basis","","Converts a JSON object into a basis element. The way …",2,[[["value",4]],["result",6]]],[11,"json_from_basis","","",2,[[["usize",15],["i32",15]],["value",4]]],[10,"basis_element_to_string","algebra","Converts a basis element into a string for display.",2,[[["usize",15],["i32",15]],["string",3]]],[11,"element_to_string","algebra::algebra::algebra_trait","Converts an element into a string for display.",2,[[["slice",4],["i32",15]],["string",3]]],[11,"generators","","Given a degree <code>degree</code>, the function returns a list of …",2,[[["i32",15]],[["usize",15],["vec",3]]]],[11,"generator_to_string","","This returns the name of a generator. Note that the index …",2,[[["usize",15],["i32",15]],["string",3]]],[11,"string_to_generator","","This parses a string and returns the generator described …",2,[[["str",15]],[["iresult",6],["str",15]]]],[11,"decompose_basis_element","","Given a non-generator basis element of the algebra, …",2,[[["usize",15],["i32",15]],["vec",3]]],[11,"relations_to_check","","Get any relations that the algebra wants checked to …",2,[[["i32",15]],[["vec",3],["vec",3]]]],[8,"Bialgebra","algebra","",null,null],[10,"decompose","","This function decomposes an element of the algebra as a …",3,[[["usize",15],["i32",15]],["vec",3]]],[10,"coproduct","","Expresses Delta(x) as sum_j (A_{ij} (x) B_{ij}). Here x …",3,[[["usize",15],["i32",15]],["vec",3]]],[3,"Field","","",null,null],[12,"prime","","",4,null],[4,"SteenrodAlgebra","","",null,null],[13,"AdemAlgebra","","",10,null],[13,"MilnorAlgebra","","",10,null],[8,"SteenrodAlgebraT","","",null,null],[10,"steenrod_algebra","","",8,[[],["steenrodalgebraborrow",4]]],[4,"SteenrodAlgebraBorrow","","",null,null],[13,"BorrowAdem","","",9,null],[13,"BorrowMilnor","","",9,null],[3,"AdemAlgebra","","",null,null],[12,"p","","",18,null],[12,"name","","",18,null],[12,"generic","","",18,null],[12,"unstable","","",18,null],[12,"unstable_enabled","","",18,null],[12,"next_degree","","",18,null],[12,"even_basis_table","","",18,null],[12,"basis_table","","",18,null],[12,"basis_element_to_index_map","","",18,null],[12,"multiplication_table","","",18,null],[12,"excess_table","","",18,null],[12,"sort_order","","",18,null],[8,"AdemAlgebraT","","",null,null],[10,"adem_algebra","","",14,[[],["ademalgebra",3]]],[3,"MilnorAlgebra","","",null,null],[12,"profile","","",23,null],[12,"name","","",23,null],[12,"next_degree","","",23,null],[12,"p","","",23,null],[12,"generic","","",23,null],[12,"ppart_table","","",23,null],[12,"qpart_table","","",23,null],[12,"basis_table","","",23,null],[12,"basis_element_to_index_map","","",23,null],[8,"MilnorAlgebraT","","",null,null],[10,"milnor_algebra","","",19,[[],["milnoralgebra",3]]],[8,"PolynomialAlgebra","","",null,null],[10,"name","","",7,[[],["string",3]]],[10,"prime","","",7,[[],["validprime",3]]],[10,"polynomial_monomials","","",7,[[],["truncatedpolynomialmonomialbasis",3]]],[10,"exterior_monomials","","",7,[[],["truncatedpolynomialmonomialbasis",3]]],[11,"min_degree","algebra::algebra::polynomial_algebra","",7,[[],["i32",15]]],[10,"polynomial_generators_in_degree","algebra","",7,[[["i32",15]],["usize",15]]],[10,"exterior_generators_in_degree","","",7,[[["i32",15]],["usize",15]]],[10,"repr_poly_generator","","",7,[[["usize",15],["i32",15]]]],[10,"repr_ext_generator","","",7,[[["usize",15],["i32",15]],["string",3]]],[10,"basis_table","","",7,[[],["oncevec",3]]],[10,"frobenius_on_generator","","",7,[[["usize",15],["i32",15]],[["usize",15],["option",4]]]],[10,"compute_generating_set","","",7,[[["i32",15]]]],[11,"compute_basis_step","algebra::algebra::polynomial_algebra","",7,[[["i32",15]]]],[11,"monomial_to_index","","",7,[[["polynomialalgebramonomial",3]],["usize",15]]],[11,"index_to_monomial","","",7,[[["usize",15],["i32",15]],["polynomialalgebramonomial",3]]],[11,"frobenius_monomial","","",7,[[["fpvector",4],["fpvector",4]]]],[11,"multiply_monomials","","",7,[[["polynomialalgebramonomial",3],["polynomialalgebramonomial",3]],[["option",4],["u32",15]]]],[11,"multiply_polynomials","","",7,[[["u32",15],["i32",15],["fpvector",4],["fpvector",4]]]],[11,"multiply_polynomial_by_monomial","","",7,[[["u32",15],["i32",15],["fpvector",4],["fpvector",4],["polynomialalgebramonomial",3]]]],[11,"multiply_monomial_by_polynomial","","",7,[[["u32",15],["i32",15],["fpvector",4],["fpvector",4],["polynomialalgebramonomial",3]]]],[11,"set_monomial_degree","","",7,[[["polynomialalgebramonomial",3],["i32",15]]]],[3,"PolynomialAlgebraMonomial","algebra","",null,null],[12,"degree","","",5,null],[12,"poly","","",5,null],[12,"ext","","",5,null],[12,"valid","","",5,null],[3,"PolynomialAlgebraTableEntry","","",null,null],[12,"index_to_monomial","","",6,null],[12,"monomial_to_index","","",6,null],[14,"dispatch_algebra","","",null,null],[11,"from","algebra::algebra::combinatorics","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into_iter","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","algebra::algebra::field","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","algebra::algebra::polynomial_algebra","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","algebra::algebra::steenrod_algebra","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","algebra::algebra::adem_algebra","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","algebra::algebra::milnor_algebra","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_string","","",24,[[],["string",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","algebra::steenrod_parser","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_string","","",31,[[],["string",3]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","algebra::steenrod_evaluator","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_string","","",75,[[],["string",3]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_string","","",33,[[],["string",3]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","algebra::module::finite_dimensional_module","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","algebra::module::finite_module","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_string","","",36,[[],["string",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","algebra::module::finitely_presented_module","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","algebra::module::free_module","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","algebra::module::rpn","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","algebra::module::module_trait","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","algebra::module::truncated_module","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","algebra::module::free_unstable_module","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","algebra::module::kfpn","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","algebra::module::bcp","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","algebra::module::dickson2","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","algebra::module::hom_module","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","algebra::module::quotient_module","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","algebra::module::sum_module","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","algebra::module::tensor_module","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","algebra::module::block_structure","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","algebra::module::homomorphism::bounded_module_homomorphism","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","algebra::module::homomorphism::finite_module_homomorphism","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","algebra::module::homomorphism::fp_module_homomorphism","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","algebra::module::homomorphism::free_module_homomorphism","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","algebra::module::homomorphism::generic_zero_homomorphism","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","algebra::module::homomorphism::hom_pullback","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","algebra::module::homomorphism::quotient_homomorphism","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","algebra::module::homomorphism::truncated_homomorphism","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"coproduct","algebra::algebra::field","",4,[[["usize",15],["i32",15]],["vec",3]]],[11,"decompose","","",4,[[["usize",15],["i32",15]],["vec",3]]],[11,"decompose","algebra::algebra::steenrod_algebra","",10,[[["usize",15],["i32",15]],["vec",3]]],[11,"coproduct","","",10,[[["usize",15],["i32",15]],["vec",3]]],[11,"decompose","algebra::algebra::adem_algebra","",18,[[["usize",15],["i32",15]],["vec",3]]],[11,"coproduct","","",18,[[["usize",15],["i32",15]],["vec",3]]],[11,"coproduct","algebra::algebra::milnor_algebra","",23,[[["usize",15],["i32",15]],["vec",3]]],[11,"decompose","","",23,[[["usize",15],["i32",15]],["vec",3]]],[11,"prime","algebra::module::kfpn","",50,[[],["validprime",3]]],[11,"name","","",50,[[],["string",3]]],[11,"polynomial_monomials","","",50,[[],["truncatedpolynomialmonomialbasis",3]]],[11,"exterior_monomials","","",50,[[],["truncatedpolynomialmonomialbasis",3]]],[11,"basis_table","","",50,[[],["oncevec",3]]],[11,"polynomial_generators_in_degree","","",50,[[["i32",15]],["usize",15]]],[11,"exterior_generators_in_degree","","",50,[[["i32",15]],["usize",15]]],[11,"repr_poly_generator","","",50,[[["usize",15],["i32",15]]]],[11,"repr_ext_generator","","",50,[[["usize",15],["i32",15]],["string",3]]],[11,"frobenius_on_generator","","",50,[[["usize",15],["i32",15]],[["usize",15],["option",4]]]],[11,"compute_generating_set","","",50,[[["i32",15]]]],[11,"prime","algebra::module::bcp","",51,[[],["validprime",3]]],[11,"name","","",51,[[],["string",3]]],[11,"polynomial_monomials","","",51,[[],["truncatedpolynomialmonomialbasis",3]]],[11,"exterior_monomials","","",51,[[],["truncatedpolynomialmonomialbasis",3]]],[11,"polynomial_generators_in_degree","","",51,[[["i32",15]],["usize",15]]],[11,"exterior_generators_in_degree","","",51,[[["i32",15]],["usize",15]]],[11,"repr_poly_generator","","",51,[[["usize",15],["i32",15]]]],[11,"repr_ext_generator","","",51,[[["usize",15],["i32",15]],["string",3]]],[11,"frobenius_on_generator","","",51,[[["usize",15],["i32",15]],[["usize",15],["option",4]]]],[11,"compute_generating_set","","",51,[[["i32",15]]]],[11,"basis_table","","",51,[[],["oncevec",3]]],[11,"prime","algebra::module::dickson2","",52,[[],["validprime",3]]],[11,"name","","",52,[[],["string",3]]],[11,"polynomial_monomials","","",52,[[],["truncatedpolynomialmonomialbasis",3]]],[11,"exterior_monomials","","",52,[[],["truncatedpolynomialmonomialbasis",3]]],[11,"basis_table","","",52,[[],["oncevec",3]]],[11,"polynomial_generators_in_degree","","",52,[[["i32",15]],["usize",15]]],[11,"exterior_generators_in_degree","","",52,[[["i32",15]],["usize",15]]],[11,"repr_poly_generator","","",52,[[["usize",15],["i32",15]]]],[11,"repr_ext_generator","","",52,[[["usize",15],["i32",15]],["string",3]]],[11,"frobenius_on_generator","","",52,[[["usize",15],["i32",15]],[["usize",15],["option",4]]]],[11,"compute_generating_set","","",52,[[["i32",15]]]],[11,"steenrod_algebra","algebra::algebra::steenrod_algebra","",10,[[],["steenrodalgebraborrow",4]]],[11,"adem_algebra","algebra::algebra::adem_algebra","",18,[[],["ademalgebra",3]]],[11,"zero_module","algebra::module::finite_dimensional_module","",34,[[["arc",3],["i32",15]]]],[11,"zero_module","algebra::module::finitely_presented_module","",38,[[["arc",3],["i32",15]]]],[11,"zero_module","algebra::module::rpn","",41,[[["arc",3],["i32",15]]]],[11,"zero_module","algebra::module::finite_module","",35,[[["i32",15],["arc",3],["steenrodalgebra",4]]]],[11,"zero_module","algebra::module::sum_module","",55,[[["arc",3],["i32",15]]]],[11,"zero_module","algebra::module::tensor_module","",56,[[["arc",3],["i32",15]]]],[11,"max_degree","algebra::module::finite_dimensional_module","",34,[[],["i32",15]]],[11,"max_degree","algebra::module::truncated_module","",47,[[],["i32",15]]],[11,"max_degree","algebra::module::quotient_module","",54,[[],["i32",15]]],[11,"max_degree","algebra::module::sum_module","",55,[[],["i32",15]]],[11,"max_degree","algebra::module::tensor_module","",56,[[],["i32",15]]],[11,"max_degree","algebra::module::finite_module","",35,[[],["i32",15]]],[11,"name","algebra::module::finite_dimensional_module","",34,[[],["string",3]]],[11,"algebra","","",34,[[],["arc",3]]],[11,"min_degree","","",34,[[],["i32",15]]],[11,"max_computed_degree","","",34,[[],["i32",15]]],[11,"compute_basis","","",34,[[["i32",15]]]],[11,"dimension","","",34,[[["i32",15]],["usize",15]]],[11,"basis_element_to_string","","",34,[[["usize",15],["i32",15]],["string",3]]],[11,"is_unit","","",34,[[],["bool",15]]],[11,"act_on_basis","","",34,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"borrow_output","","",34,[[],["bool",15]]],[11,"act_on_basis_borrow","","",34,[[["usize",15],["i32",15]],["fpvector",4]]],[11,"algebra","algebra::module::finite_module","",35,[[],["arc",3]]],[11,"name","","",35,[[],["string",3]]],[11,"min_degree","","",35,[[],["i32",15]]],[11,"compute_basis","","",35,[[["i32",15]]]],[11,"max_computed_degree","","",35,[[],["i32",15]]],[11,"dimension","","",35,[[["i32",15]],["usize",15]]],[11,"act_on_basis","","",35,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"act","","",35,[[["u32",15],["usize",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"act_by_element","","",35,[[["u32",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"basis_element_to_string","","",35,[[["usize",15],["i32",15]],["string",3]]],[11,"is_unit","","",35,[[],["bool",15]]],[11,"prime","","",35,[[],["validprime",3]]],[11,"borrow_output","","Whether act_on_basis_borrow is available.",35,[[],["bool",15]]],[11,"act_on_basis_borrow","","",35,[[["usize",15],["i32",15]],["fpvector",4]]],[11,"algebra","algebra::module::finitely_presented_module","",38,[[],["arc",3]]],[11,"min_degree","","",38,[[],["i32",15]]],[11,"name","","",38,[[],["string",3]]],[11,"max_computed_degree","","",38,[[],["i32",15]]],[11,"compute_basis","","",38,[[["i32",15]]]],[11,"dimension","","",38,[[["i32",15]],["usize",15]]],[11,"act_on_basis","","",38,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"basis_element_to_string","","",38,[[["usize",15],["i32",15]],["string",3]]],[11,"name","algebra::module::free_module","",40,[[],["string",3]]],[11,"algebra","","",40,[[],["arc",3]]],[11,"min_degree","","",40,[[],["i32",15]]],[11,"max_computed_degree","","",40,[[],["i32",15]]],[11,"dimension","","",40,[[["i32",15]],["usize",15]]],[11,"basis_element_to_string","","",40,[[["usize",15],["i32",15]],["string",3]]],[11,"act_on_basis","","",40,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"name","algebra::module::rpn","",41,[[],["string",3]]],[11,"algebra","","",41,[[],["arc",3]]],[11,"min_degree","","",41,[[],["i32",15]]],[11,"max_computed_degree","","",41,[[],["i32",15]]],[11,"dimension","","",41,[[["i32",15]],["usize",15]]],[11,"basis_element_to_string","","",41,[[["usize",15],["i32",15]],["string",3]]],[11,"act_on_basis","","",41,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"algebra","algebra::module::truncated_module","",47,[[],["arc",3]]],[11,"name","","",47,[[],["string",3]]],[11,"min_degree","","",47,[[],["i32",15]]],[11,"max_computed_degree","","",47,[[],["i32",15]]],[11,"compute_basis","","",47,[[["i32",15]]]],[11,"dimension","","",47,[[["i32",15]],["usize",15]]],[11,"act_on_basis","","",47,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"basis_element_to_string","","",47,[[["usize",15],["i32",15]],["string",3]]],[11,"name","algebra::module::free_unstable_module","",48,[[],["string",3]]],[11,"algebra","","",48,[[],["arc",3]]],[11,"min_degree","","",48,[[],["i32",15]]],[11,"max_computed_degree","","",48,[[],["i32",15]]],[11,"dimension","","",48,[[["i32",15]],["usize",15]]],[11,"basis_element_to_string","","",48,[[["usize",15],["i32",15]],["string",3]]],[11,"act_on_basis","","",48,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"algebra","algebra::module::hom_module","",53,[[],["arc",3]]],[11,"name","","",53,[[],["string",3]]],[11,"min_degree","","",53,[[],["i32",15]]],[11,"max_computed_degree","","",53,[[],["i32",15]]],[11,"compute_basis","","",53,[[["i32",15]]]],[11,"dimension","","",53,[[["i32",15]],["usize",15]]],[11,"act_on_basis","","",53,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"basis_element_to_string","","",53,[[["usize",15],["i32",15]],["string",3]]],[11,"algebra","algebra::module::quotient_module","",54,[[],["arc",3]]],[11,"name","","",54,[[],["string",3]]],[11,"min_degree","","",54,[[],["i32",15]]],[11,"compute_basis","","",54,[[["i32",15]]]],[11,"max_computed_degree","","",54,[[],["i32",15]]],[11,"dimension","","",54,[[["i32",15]],["usize",15]]],[11,"act_on_basis","","",54,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"basis_element_to_string","","",54,[[["usize",15],["i32",15]],["string",3]]],[11,"algebra","algebra::module::sum_module","",55,[[],["arc",3]]],[11,"name","","",55,[[],["string",3]]],[11,"min_degree","","",55,[[],["i32",15]]],[11,"compute_basis","","",55,[[["i32",15]]]],[11,"max_computed_degree","","",55,[[],["i32",15]]],[11,"dimension","","",55,[[["i32",15]],["usize",15]]],[11,"act_on_basis","","",55,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"basis_element_to_string","","",55,[[["usize",15],["i32",15]],["string",3]]],[11,"algebra","algebra::module::tensor_module","",56,[[],["arc",3]]],[11,"name","","",56,[[],["string",3]]],[11,"min_degree","","",56,[[],["i32",15]]],[11,"max_computed_degree","","",56,[[],["i32",15]]],[11,"compute_basis","","",56,[[["i32",15]]]],[11,"dimension","","",56,[[["i32",15]],["usize",15]]],[11,"act_on_basis","","",56,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"act","","",56,[[["u32",15],["usize",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"basis_element_to_string","","",56,[[["usize",15],["i32",15]],["string",3]]],[11,"algebra","algebra::module::kfpn","",50,[[],["arc",3]]],[11,"action_table","","",50,[[],["oncevec",3]]],[11,"bockstein_table","","",50,[[],["oncevec",3]]],[11,"sq_polynomial_generator_to_monomial","","",50,[[["polynomialalgebramonomial",3],["usize",15],["i32",15]]]],[11,"sq_exterior_generator_to_monomial","","",50,[[["polynomialalgebramonomial",3],["usize",15],["i32",15]]]],[11,"bockstein_polynomial_generator_to_monomial","","",50,[[["polynomialalgebramonomial",3],["usize",15],["i32",15]]]],[11,"bockstein_exterior_generator_to_monomial","","",50,[[["polynomialalgebramonomial",3],["usize",15],["i32",15]]]],[11,"sq_polynomial_generator_to_polynomial","","",50,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"sq_exterior_generator_to_polynomial","","",50,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"bockstein_polynomial_generator_to_polynomial","","",50,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"bockstein_exterior_generator_to_polynomial","","",50,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"algebra","algebra::module::bcp","",51,[[],["arc",3]]],[11,"action_table","","",51,[[],["oncevec",3]]],[11,"bockstein_table","","",51,[[],["oncevec",3]]],[11,"sq_polynomial_generator_to_monomial","","",51,[[["polynomialalgebramonomial",3],["usize",15],["i32",15]]]],[11,"sq_exterior_generator_to_monomial","","",51,[[["polynomialalgebramonomial",3],["usize",15],["i32",15]]]],[11,"bockstein_polynomial_generator_to_monomial","","",51,[[["polynomialalgebramonomial",3],["usize",15],["i32",15]]]],[11,"bockstein_exterior_generator_to_monomial","","",51,[[["polynomialalgebramonomial",3],["usize",15],["i32",15]]]],[11,"algebra","algebra::module::dickson2","",52,[[],["arc",3]]],[11,"action_table","","",52,[[],["oncevec",3]]],[11,"bockstein_table","","",52,[[],["oncevec",3]]],[11,"sq_polynomial_generator_to_monomial","","",52,[[["polynomialalgebramonomial",3],["usize",15],["i32",15]]]],[11,"sq_exterior_generator_to_monomial","","",52,[[["polynomialalgebramonomial",3],["usize",15],["i32",15]]]],[11,"bockstein_polynomial_generator_to_monomial","","",52,[[["polynomialalgebramonomial",3],["usize",15],["i32",15]]]],[11,"bockstein_exterior_generator_to_monomial","","",52,[[["polynomialalgebramonomial",3],["usize",15],["i32",15]]]],[11,"fp_idx_to_gen_idx","algebra::module::finite_module","",35,[[["usize",15],["i32",15]],["usize",15]]],[11,"gen_idx_to_fp_idx","","",35,[[["usize",15],["i32",15]],["isize",15]]],[11,"generators","","",35,[[],["arc",3]]],[11,"fp_idx_to_gen_idx","algebra::module::finitely_presented_module","",38,[[["usize",15],["i32",15]],["usize",15]]],[11,"gen_idx_to_fp_idx","","",38,[[["usize",15],["i32",15]],["isize",15]]],[11,"generators","","",38,[[],["arc",3]]],[11,"source","algebra::module::homomorphism::bounded_module_homomorphism","",60,[[],["arc",3]]],[11,"target","","",60,[[],["arc",3]]],[11,"degree_shift","","",60,[[],["i32",15]]],[11,"apply_to_basis_element","","",60,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"quasi_inverse","","",60,[[["i32",15]],["quasiinverse",3]]],[11,"kernel","","",60,[[["i32",15]],["subspace",3]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",60,[[["i32",15]]]],[11,"source","algebra::module::homomorphism::finite_module_homomorphism","",62,[[],["arc",3]]],[11,"target","","",62,[[],["arc",3]]],[11,"degree_shift","","",62,[[],["i32",15]]],[11,"apply_to_basis_element","","",62,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"quasi_inverse","","",62,[[["i32",15]],["quasiinverse",3]]],[11,"kernel","","",62,[[["i32",15]],["subspace",3]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",62,[[["i32",15]]]],[11,"source","algebra::module::homomorphism::fp_module_homomorphism","",63,[[],["arc",3]]],[11,"target","","",63,[[],["arc",3]]],[11,"degree_shift","","",63,[[],["i32",15]]],[11,"apply_to_basis_element","","",63,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"quasi_inverse","","",63,[[["i32",15]],["quasiinverse",3]]],[11,"kernel","","",63,[[["i32",15]],["subspace",3]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",63,[[["i32",15]]]],[11,"source","algebra::module::homomorphism::free_module_homomorphism","",65,[[],["arc",3]]],[11,"target","","",65,[[],["arc",3]]],[11,"degree_shift","","",65,[[],["i32",15]]],[11,"apply_to_basis_element","","",65,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"quasi_inverse","","",65,[[["i32",15]],["quasiinverse",3]]],[11,"kernel","","",65,[[["i32",15]],["subspace",3]]],[11,"get_matrix","","",65,[[["i32",15],["matrixslicemut",3]]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",65,[[["i32",15]]]],[11,"source","algebra::module::homomorphism::generic_zero_homomorphism","",66,[[],["arc",3]]],[11,"target","","",66,[[],["arc",3]]],[11,"degree_shift","","",66,[[],["i32",15]]],[11,"apply_to_basis_element","","",66,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"quasi_inverse","","",66,[[["i32",15]],["quasiinverse",3]]],[11,"kernel","","",66,[[["i32",15]],["subspace",3]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",66,[[["i32",15]]]],[11,"source","algebra::module::homomorphism::hom_pullback","",67,[[],["arc",3]]],[11,"target","","",67,[[],["arc",3]]],[11,"degree_shift","","",67,[[],["i32",15]]],[11,"min_degree","","",67,[[],["i32",15]]],[11,"apply_to_basis_element","","",67,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",67,[[["i32",15]]]],[11,"quasi_inverse","","",67,[[["i32",15]],["quasiinverse",3]]],[11,"kernel","","",67,[[["i32",15]],["subspace",3]]],[11,"source","algebra::module::homomorphism::quotient_homomorphism","",68,[[],["arc",3]]],[11,"target","","",68,[[],["arc",3]]],[11,"degree_shift","","",68,[[],["i32",15]]],[11,"apply_to_basis_element","","",68,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"kernel","","",68,[[["i32",15]],["subspace",3]]],[11,"quasi_inverse","","",68,[[["i32",15]],["quasiinverse",3]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",68,[[["i32",15]]]],[11,"source","","",69,[[],["arc",3]]],[11,"target","","",69,[[],["arc",3]]],[11,"degree_shift","","",69,[[],["i32",15]]],[11,"apply_to_basis_element","","",69,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"kernel","","",69,[[["i32",15]],["subspace",3]]],[11,"quasi_inverse","","",69,[[["i32",15]],["quasiinverse",3]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",69,[[["i32",15]]]],[11,"source","algebra::module::homomorphism::truncated_homomorphism","",70,[[],["arc",3]]],[11,"target","","",70,[[],["arc",3]]],[11,"degree_shift","","",70,[[],["i32",15]]],[11,"apply_to_basis_element","","",70,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"kernel","","",70,[[["i32",15]],["subspace",3]]],[11,"quasi_inverse","","",70,[[["i32",15]],["quasiinverse",3]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",70,[[["i32",15]]]],[11,"source","","",71,[[],["arc",3]]],[11,"target","","",71,[[],["arc",3]]],[11,"degree_shift","","",71,[[],["i32",15]]],[11,"apply_to_basis_element","","",71,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"kernel","","",71,[[["i32",15]],["subspace",3]]],[11,"quasi_inverse","","",71,[[["i32",15]],["quasiinverse",3]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",71,[[["i32",15]]]],[11,"zero_homomorphism","algebra::module::homomorphism::bounded_module_homomorphism","",60,[[["arc",3],["arc",3],["i32",15]]]],[11,"zero_homomorphism","algebra::module::homomorphism::finite_module_homomorphism","",62,[[["arc",3],["finitemodule",4],["arc",3],["i32",15]]]],[11,"zero_homomorphism","algebra::module::homomorphism::fp_module_homomorphism","",63,[[["arc",3],["i32",15],["arc",3]]]],[11,"zero_homomorphism","algebra::module::homomorphism::generic_zero_homomorphism","",66,[[["arc",3],["arc",3],["i32",15]]]],[11,"identity_homomorphism","algebra::module::homomorphism::bounded_module_homomorphism","",60,[[["arc",3]]]],[11,"identity_homomorphism","algebra::module::homomorphism::finite_module_homomorphism","",62,[[["arc",3],["finitemodule",4]]]],[11,"identity_homomorphism","algebra::module::homomorphism::fp_module_homomorphism","",63,[[["arc",3]]]],[11,"algebra_type","algebra::algebra::field","",4,[[],["str",15]]],[11,"prime","","Returns the prime the algebra is over.",4,[[],["validprime",3]]],[11,"name","","",4,[[],["str",15]]],[11,"max_computed_degree","","",4,[[],["i32",15]]],[11,"compute_basis","","",4,[[["i32",15]]]],[11,"dimension","","Gets the dimension of the algebra in degree <code>degree</code>.",4,[[["i32",15]],["usize",15]]],[11,"multiply_basis_elements","","",4,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"default_filtration_one_products","","",4,[[],["vec",3]]],[11,"json_to_basis","","Converts a JSON object into a basis element. The way …",4,[[["value",4]],["result",6]]],[11,"json_from_basis","","",4,[[["usize",15],["i32",15]],["value",4]]],[11,"basis_element_to_string","","Converts a basis element into a string for display.",4,[[["usize",15],["i32",15]],["string",3]]],[11,"element_to_string","","",4,[[["slice",4],["i32",15]],["string",3]]],[11,"generators","","",4,[[["i32",15]],[["usize",15],["vec",3]]]],[11,"decompose_basis_element","","",4,[[["usize",15],["i32",15]],["vec",3]]],[11,"relations_to_check","","",4,[[["i32",15]],[["vec",3],["vec",3]]]],[11,"algebra_type","algebra::algebra::steenrod_algebra","",10,[[],["str",15]]],[11,"prime","","",10,[[],["validprime",3]]],[11,"name","","",10,[[],["str",15]]],[11,"compute_basis","","",10,[[["i32",15]]]],[11,"max_computed_degree","","",10,[[],["i32",15]]],[11,"dimension","","",10,[[["i32",15]],["usize",15]]],[11,"multiply_basis_elements","","",10,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"multiply_basis_element_by_element","","",10,[[["u32",15],["usize",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"multiply_element_by_basis_element","","",10,[[["u32",15],["slice",4],["usize",15],["i32",15],["slicemut",4]]]],[11,"multiply_element_by_element","","",10,[[["u32",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"default_filtration_one_products","","",10,[[],["vec",3]]],[11,"json_to_basis","","",10,[[["value",4]],["result",6]]],[11,"json_from_basis","","",10,[[["usize",15],["i32",15]],["value",4]]],[11,"basis_element_to_string","","",10,[[["usize",15],["i32",15]],["string",3]]],[11,"element_to_string","","",10,[[["slice",4],["i32",15]],["string",3]]],[11,"generators","","",10,[[["i32",15]],[["usize",15],["vec",3]]]],[11,"generator_to_string","","",10,[[["usize",15],["i32",15]],["string",3]]],[11,"string_to_generator","","",10,[[["str",15]],[["iresult",6],["str",15]]]],[11,"decompose_basis_element","","",10,[[["usize",15],["i32",15]],["vec",3]]],[11,"relations_to_check","","",10,[[["i32",15]],[["vec",3],["vec",3]]]],[11,"algebra_type","algebra::algebra::adem_algebra","",18,[[],["str",15]]],[11,"prime","","",18,[[],["validprime",3]]],[11,"name","","",18,[[],["str",15]]],[11,"default_filtration_one_products","","",18,[[],["vec",3]]],[11,"max_computed_degree","","",18,[[],["i32",15]]],[11,"compute_basis","","",18,[[["i32",15]]]],[11,"dimension","","",18,[[["i32",15]],["usize",15]]],[11,"multiply_basis_elements","","",18,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"json_to_basis","","",18,[[["value",4]],["result",6]]],[11,"string_to_generator","","",18,[[["str",15]],[["iresult",6],["str",15]]]],[11,"generator_to_string","","",18,[[["usize",15],["i32",15]],["string",3]]],[11,"json_from_basis","","",18,[[["usize",15],["i32",15]],["value",4]]],[11,"basis_element_to_string","","",18,[[["usize",15],["i32",15]],["string",3]]],[11,"generators","","",18,[[["i32",15]],[["usize",15],["vec",3]]]],[11,"decompose_basis_element","","",18,[[["usize",15],["i32",15]],["vec",3]]],[11,"relations_to_check","","We return Adem relations $b^2 = 0$, $P^i P^j = \\\\cdots$ …",18,[[["i32",15]],[["vec",3],["vec",3]]]],[11,"algebra_type","algebra::algebra::milnor_algebra","",23,[[],["str",15]]],[11,"prime","","",23,[[],["validprime",3]]],[11,"name","","",23,[[],["str",15]]],[11,"default_filtration_one_products","","",23,[[],["vec",3]]],[11,"max_computed_degree","","",23,[[],["i32",15]]],[11,"compute_basis","","",23,[[["i32",15]]]],[11,"dimension","","",23,[[["i32",15]],["usize",15]]],[11,"multiply_basis_elements","","",23,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"json_to_basis","","",23,[[["value",4]],["result",6]]],[11,"json_from_basis","","",23,[[["usize",15],["i32",15]],["value",4]]],[11,"string_to_generator","","",23,[[["str",15]],[["iresult",6],["str",15]]]],[11,"generator_to_string","","",23,[[["usize",15],["i32",15]],["string",3]]],[11,"basis_element_to_string","","",23,[[["usize",15],["i32",15]],["string",3]]],[11,"generators","","",23,[[["i32",15]],[["usize",15],["vec",3]]]],[11,"decompose_basis_element","","",23,[[["usize",15],["i32",15]],["vec",3]]],[11,"relations_to_check","","",23,[[["i32",15]],[["vec",3],["vec",3]]]],[11,"from","algebra::algebra::steenrod_algebra","",10,[[["ademalgebra",3]],["steenrodalgebra",4]]],[11,"from","","",10,[[["milnoralgebra",3]],["steenrodalgebra",4]]],[11,"from","algebra::module::finite_module","",35,[[["fpmodule",3],["steenrodalgebra",4]]]],[11,"from","","",35,[[["fdmodule",3],["steenrodalgebra",4]]]],[11,"from","","",35,[[["steenrodalgebra",4],["realprojectivespace",3]]]],[11,"from","algebra::module::homomorphism::finite_module_homomorphism","",62,[[["boundedmodulehomomorphism",3],["finitemodule",4]]]],[11,"from","","",62,[[["fpmodulehomomorphism",3],["finitemodule",4]]]],[11,"next","algebra::algebra::combinatorics","",1,[[],["option",4]]],[11,"clone","algebra::algebra::polynomial_algebra","",5,[[],["polynomialalgebramonomial",3]]],[11,"clone","algebra::algebra::adem_algebra","",16,[[],["adembasiselement",3]]],[11,"clone","algebra::algebra::milnor_algebra","",21,[[],["qpart",3]]],[11,"clone","","",22,[[],["milnorbasiselement",3]]],[11,"clone","algebra::steenrod_parser","",27,[[],["algebrabasiselt",4]]],[11,"clone","","",28,[[],["algebraparsenode",4]]],[11,"clone","","",29,[[],["moduleparsenode",4]]],[11,"clone","","",30,[[],["bocksteinorsq",4]]],[11,"clone","algebra::module::finite_dimensional_module","",34,[[]]],[11,"clone","algebra::module::free_module","",39,[[],["operationgeneratorpair",3]]],[11,"clone","algebra::module::homomorphism::bounded_module_homomorphism","",60,[[]]],[11,"default","algebra::algebra::polynomial_algebra","",6,[[]]],[11,"default","algebra::algebra::milnor_algebra","",21,[[],["qpart",3]]],[11,"default","","",22,[[],["milnorbasiselement",3]]],[11,"default","","",24,[[],["matrix2d",3]]],[11,"default","","",25,[[],["ppartallocation",3]]],[11,"eq","algebra::algebra::polynomial_algebra","",5,[[["polynomialalgebramonomial",3]],["bool",15]]],[11,"ne","","",5,[[["polynomialalgebramonomial",3]],["bool",15]]],[11,"eq","algebra::algebra::adem_algebra","",16,[[],["bool",15]]],[11,"eq","algebra::algebra::milnor_algebra","",22,[[],["bool",15]]],[11,"eq","algebra::module::finite_dimensional_module","",34,[[],["bool",15]]],[11,"eq","algebra::module::finite_module","",35,[[["finitemodule",4]],["bool",15]]],[11,"ne","","",35,[[["finitemodule",4]],["bool",15]]],[11,"eq","algebra::module::finitely_presented_module","",38,[[],["bool",15]]],[11,"eq","algebra::module::rpn","",41,[[],["bool",15]]],[11,"deref","algebra::algebra::adem_algebra","",15,[[],["vec",3]]],[11,"fmt","algebra::algebra::polynomial_algebra","",5,[[["formatter",3]],["result",6]]],[11,"fmt","algebra::algebra::steenrod_algebra","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","algebra::algebra::adem_algebra","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","algebra::algebra::milnor_algebra","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","algebra::steenrod_parser","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","algebra::steenrod_evaluator","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","algebra::module::finite_module","",36,[[["formatter",3]],["result",6]]],[11,"fmt","algebra::module::free_module","",39,[[["formatter",3]],["result",6]]],[11,"fmt","algebra::module::rpn","",42,[[["formatter",3]],["result",6]]],[11,"fmt","algebra::module::module_trait","",46,[[["formatter",3]],["result",6]]],[11,"fmt","algebra::module::block_structure","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","algebra::algebra::polynomial_algebra","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","algebra::algebra::steenrod_algebra","",13,[[["formatter",3]],["result",6]]],[11,"fmt","algebra::algebra::adem_algebra","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","algebra::algebra::milnor_algebra","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","algebra::steenrod_parser","",31,[[["formatter",3]],["result",6]]],[11,"fmt","algebra::steenrod_evaluator","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","algebra::module::finite_module","",36,[[["formatter",3]],["result",6]]],[11,"fmt","algebra::module::module_trait","",46,[[["formatter",3]],["result",6]]],[11,"index","algebra::algebra::milnor_algebra","",24,[[["usize",15]]]],[11,"index_mut","","",24,[[["usize",15]]]],[11,"hash","algebra::algebra::polynomial_algebra","",5,[[]]],[11,"hash","algebra::algebra::adem_algebra","",16,[[]]],[11,"hash","algebra::algebra::milnor_algebra","",22,[[]]],[11,"try_into","algebra::algebra::steenrod_algebra","",10,[[],[["ademalgebra",3],["result",4]]]],[11,"try_into","","",10,[[],[["milnoralgebra",3],["result",4]]]],[11,"description","","",13,[[],["str",15]]],[11,"description","algebra::steenrod_parser","",31,[[],["str",15]]],[11,"description","algebra::module::module_trait","",46,[[],["str",15]]],[11,"load","algebra::module::free_module","",40,[[],["result",6]]],[11,"load","algebra::module::free_unstable_module","",48,[[],["result",6]]],[11,"load","algebra::module::homomorphism::free_module_homomorphism","",65,[[],["result",6]]],[11,"save","algebra::module::free_module","",40,[[],["result",6]]],[11,"save","algebra::module::free_unstable_module","",48,[[],["result",6]]],[11,"save","algebra::module::homomorphism::free_module_homomorphism","",65,[[],["result",6]]],[11,"deserialize","algebra::algebra::steenrod_algebra","",11,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"deserialize","algebra::module::rpn","",42,[[],["result",4]]],[11,"initialize","algebra::algebra::adem_algebra","",15,[[]]]],"p":[[3,"TruncatedPolynomialMonomialBasis"],[3,"PartitionIterator"],[8,"Algebra"],[8,"Bialgebra"],[3,"Field"],[3,"PolynomialAlgebraMonomial"],[3,"PolynomialAlgebraTableEntry"],[8,"PolynomialAlgebra"],[8,"SteenrodAlgebraT"],[4,"SteenrodAlgebraBorrow"],[4,"SteenrodAlgebra"],[3,"MilnorProfileOption"],[3,"AlgebraSpec"],[3,"InvalidAlgebraError"],[8,"AdemAlgebraT"],[3,"BOCKSTEIN_TABLE"],[3,"AdemBasisElement"],[4,"PorBockstein"],[3,"AdemAlgebra"],[8,"MilnorAlgebraT"],[3,"MilnorProfile"],[3,"QPart"],[3,"MilnorBasisElement"],[3,"MilnorAlgebra"],[3,"Matrix2D"],[3,"PPartAllocation"],[3,"PPartMultiplier"],[4,"AlgebraBasisElt"],[4,"AlgebraParseNode"],[4,"ModuleParseNode"],[4,"BocksteinOrSq"],[3,"ParseError"],[3,"SteenrodCalculator"],[3,"UnknownBasisElementError"],[3,"FiniteDimensionalModule"],[4,"FiniteModule"],[3,"UnknownModuleTypeError"],[3,"FPMIndexTable"],[3,"FinitelyPresentedModule"],[3,"OperationGeneratorPair"],[3,"FreeModule"],[3,"RealProjectiveSpace"],[3,"RPSpec"],[8,"ZeroModule"],[8,"BoundedModule"],[8,"Module"],[3,"ModuleFailedRelationError"],[3,"TruncatedModule"],[3,"FreeUnstableModule"],[8,"PolynomialAlgebraModule"],[3,"KFpn"],[3,"BCp"],[3,"Dickson2"],[3,"HomModule"],[3,"QuotientModule"],[3,"SumModule"],[3,"TensorModule"],[3,"GeneratorBasisEltPair"],[3,"BlockStructure"],[3,"BlockStart"],[3,"BoundedModuleHomomorphism"],[4,"FMHI"],[3,"FiniteModuleHomomorphism"],[3,"FPModuleHomomorphism"],[8,"FPModuleT"],[3,"FreeModuleHomomorphism"],[3,"GenericZeroHomomorphism"],[3,"HomPullback"],[3,"QuotientHomomorphism"],[3,"QuotientHomomorphismSource"],[3,"TruncatedHomomorphism"],[3,"TruncatedHomomorphismSource"],[8,"ModuleHomomorphism"],[8,"ZeroHomomorphism"],[8,"IdentityHomomorphism"],[3,"DegreeError"]]},\
"bivec":{"doc":"","i":[[3,"BiVec","bivec","A BiVec is like a Vec, except we allow indices to be …",null,null],[12,"data","","",0,null],[12,"min_degree","","",0,null],[11,"new","","",0,[[["i32",15]]]],[11,"from_vec","","",0,[[["vec",3],["i32",15]]]],[11,"into_vec","","",0,[[["bivec",3]],["vec",3]]],[11,"with_capacity","","",0,[[["i32",15]]]],[11,"min_degree","","",0,[[],["i32",15]]],[11,"max_degree","","This returns the largest degree in the bivector. This is …",0,[[],["i32",15]]],[11,"len","","This returns the “length” of the bivector, defined to …",0,[[],["i32",15]]],[11,"is_empty","","",0,[[],["bool",15]]],[11,"push","","",0,[[]]],[11,"get","","",0,[[["i32",15]],["option",4]]],[11,"last","","",0,[[],["option",4]]],[11,"iter","","",0,[[],["iter",3]]],[11,"iter_mut","","",0,[[],["itermut",3]]],[11,"iter_enum","","",0,[[]]],[11,"into_iter_enum","","",0,[[]]],[11,"extend_with","","Extends the bivec such that <code>max_degree()</code> is at least <code>max</code>. …",0,[[["i32",15]]]],[11,"reserve","","",0,[[["usize",15]]]],[11,"split_borrow_mut","","Mutably borrows i and j. Panic if i != j.",0,[[["i32",15]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[],["bivec",3]]],[11,"default","","",0,[[]]],[11,"eq","","",0,[[["bivec",3]],["bool",15]]],[11,"ne","","",0,[[["bivec",3]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"index","","",0,[[["i32",15]]]],[11,"index_mut","","",0,[[["i32",15]]]],[11,"serialize","","",0,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"load","","",0,[[],["result",6]]],[11,"save","","",0,[[],["result",6]]]],"p":[[3,"BiVec"]]},\
"chart":{"doc":"","i":[[17,"STYLES","chart","",null,null],[17,"GRID_WIDTH","","",null,null],[17,"MARGIN","","",null,null],[17,"PATTERNS","","",null,null],[3,"Graph","","",null,null],[12,"out","","",0,null],[12,"max_x","","",0,null],[12,"max_y","","",0,null],[12,"num_nodes","","",0,null],[11,"new","","",0,[[["i32",15]],["result",6]]],[11,"get_coords","","Returns r, x, y",0,[[["usize",15],["i32",15]]]],[11,"node","","",0,[[["usize",15],["i32",15]],["result",6]]],[11,"structline","","",0,[[["option",4],["str",15]],["result",6]]],[11,"structline_matrix","","",0,[[["vec",3],["option",4],["vec",3],["str",15]],["result",6]]],[11,"legend","","Print the legend for node patterns",0,[[],["result",6]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"drop","","",0,[[]]]],"p":[[3,"Graph"]]},\
"error":{"doc":"","i":[[6,"Result","error","",null,null],[3,"Error","","",null,null],[12,"error","","",0,null],[12,"backtrace","","",0,null],[11,"inner","","",0,[[],["stderror",8]]],[3,"GenericError","","",null,null],[12,"0","","",1,null],[11,"new","","",1,[[["string",3]]]],[5,"from_string","","",null,[[["str",15]],["result",6]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[],["error",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]]],"p":[[3,"Error"],[3,"GenericError"]]},\
"ext":{"doc":"","i":[[0,"chain_complex","ext","",null,null],[0,"finite_chain_complex","ext::chain_complex","",null,null],[3,"FiniteChainComplex","ext::chain_complex::finite_chain_complex","",null,null],[12,"modules","","",0,null],[12,"zero_module","","",0,null],[12,"differentials","","",0,null],[11,"max_degree","","",0,[[],["i32",15]]],[11,"pop","","",0,[[]]],[11,"ccdz","","",0,[[["arc",3]]]],[3,"FiniteAugmentedChainComplex","","",null,null],[12,"modules","","",1,null],[12,"zero_module","","",1,null],[12,"differentials","","",1,null],[12,"target_cc","","",1,null],[12,"chain_maps","","",1,null],[0,"hom_complex","ext::chain_complex","",null,null],[6,"SHM","ext::chain_complex::hom_complex","",null,null],[3,"HomChainComplex","","",null,null],[12,"lock","","",2,null],[12,"source_cc","","",2,null],[12,"target_cc","","",2,null],[12,"modules","","",2,null],[12,"zero_module","","",2,null],[12,"differentials","","",2,null],[11,"new","","",2,[[["arc",3],["finitechaincomplex",3],["arc",3]]]],[11,"source_cc","","",2,[[],["arc",3]]],[11,"target_cc","","",2,[[],[["arc",3],["finitechaincomplex",3]]]],[3,"HomChainMap","","",null,null],[12,"source_cc","","",3,null],[12,"target_cc","","",3,null],[12,"lock","","",3,null],[12,"source","","",3,null],[12,"target","","",3,null],[12,"quasi_inverses","","",3,null],[0,"tensor_product_chain_complex","ext::chain_complex","",null,null],[6,"STM","ext::chain_complex::tensor_product_chain_complex","",null,null],[6,"TensorSquareCC","","",null,null],[3,"TensorChainComplex","","",null,null],[12,"lock","","",4,null],[12,"left_cc","","",4,null],[12,"right_cc","","",4,null],[12,"modules","","",4,null],[12,"zero_module","","",4,null],[12,"differentials","","",4,null],[11,"new","","",4,[[["arc",3],["arc",3]]]],[11,"left_cc","","",4,[[],["arc",3]]],[11,"right_cc","","",4,[[],["arc",3]]],[11,"swap","","This function sends a (x) b to b (x) a. This makes sense …",4,[[["fpvector",4],["u32",15],["fpvector",4],["i32",15]]]],[3,"TensorChainMap","","",null,null],[12,"left_cc","","",5,null],[12,"right_cc","","",5,null],[12,"source_s","","",5,null],[12,"lock","","",5,null],[12,"source","","",5,null],[12,"target","","",5,null],[12,"quasi_inverses","","",5,null],[11,"calculate_quasi_inverse","","",5,[[["i32",15]]]],[3,"FiniteAugmentedChainComplex","ext::chain_complex","",null,null],[12,"modules","","",1,null],[12,"zero_module","","",1,null],[12,"differentials","","",1,null],[12,"target_cc","","",1,null],[12,"chain_maps","","",1,null],[3,"FiniteChainComplex","","",null,null],[12,"modules","","",0,null],[12,"zero_module","","",0,null],[12,"differentials","","",0,null],[3,"TensorChainComplex","","",null,null],[12,"lock","","",4,null],[12,"left_cc","","",4,null],[12,"right_cc","","",4,null],[12,"modules","","",4,null],[12,"zero_module","","",4,null],[12,"differentials","","",4,null],[4,"ChainComplexGrading","","",null,null],[13,"Homological","","",6,null],[13,"Cohomological","","",6,null],[8,"FreeChainComplex","","",null,null],[11,"graded_dimension_string","","",7,[[["u32",15],["i32",15]],["string",3]]],[8,"ChainComplex","","A chain complex is defined to start in degree 0. The …",null,null],[16,"Algebra","","",8,null],[16,"Module","","",8,null],[16,"Homomorphism","","",8,null],[11,"prime","","",8,[[],["validprime",3]]],[10,"algebra","","",8,[[],["arc",3]]],[10,"min_degree","","",8,[[],["i32",15]]],[10,"zero_module","","",8,[[],["arc",3]]],[10,"module","","",8,[[["u32",15]],["arc",3]]],[10,"differential","","",8,[[["u32",15]],["arc",3]]],[10,"compute_through_bidegree","","",8,[[["u32",15],["i32",15]]]],[10,"has_computed_bidegree","","",8,[[["u32",15],["i32",15]],["bool",15]]],[10,"set_homology_basis","","",8,[[["u32",15],["usize",15],["i32",15],["vec",3]]]],[10,"homology_basis","","",8,[[["u32",15],["i32",15]],["vec",3]]],[10,"max_homology_degree","","",8,[[["u32",15]],["i32",15]]],[11,"compute_homology_through_bidegree","","",8,[[["u32",15],["i32",15]]]],[11,"homology_dimension","","",8,[[["u32",15],["i32",15]],["usize",15]]],[11,"homology_gen_to_cocyle","","",8,[[["u32",15],["usize",15],["fpvector",4],["i32",15]]]],[11,"compute_homology","","",8,[[["u32",15],["i32",15]]]],[8,"CochainComplex","","",null,null],[16,"Algebra","","",9,null],[16,"Module","","",9,null],[16,"Homomorphism","","",9,null],[11,"prime","","",9,[[],["validprime",3]]],[10,"algebra","","",9,[[],["arc",3]]],[10,"min_degree","","",9,[[],["i32",15]]],[10,"zero_module","","",9,[[],["arc",3]]],[10,"module","","",9,[[["u32",15]],["arc",3]]],[10,"differential","","",9,[[["u32",15]],["arc",3]]],[10,"compute_through_bidegree","","",9,[[["u32",15],["i32",15]]]],[10,"set_cohomology_basis","","",9,[[["u32",15],["usize",15],["i32",15],["vec",3]]]],[10,"cohomology_basis","","",9,[[["u32",15],["i32",15]],["vec",3]]],[10,"max_cohomology_degree","","",9,[[["u32",15]],["i32",15]]],[11,"compute_cohomology_through_bidegree","","",9,[[["u32",15],["i32",15]]]],[11,"cohomology_dimension","","",9,[[["u32",15],["i32",15]],["usize",15]]],[11,"homology_gen_to_cocyle","","",9,[[["u32",15],["usize",15],["fpvector",4],["i32",15]]]],[11,"compute_cohomology","","",9,[[["u32",15],["i32",15]]]],[8,"AugmentedChainComplex","","An augmented chain complex is a map of chain complexes C …",null,null],[16,"TargetComplex","","",10,null],[16,"ChainMap","","",10,null],[10,"target","","",10,[[],["arc",3]]],[10,"chain_map","","",10,[[["u32",15]],["arc",3]]],[8,"BoundedChainComplex","","A bounded chain complex is a chain complex C for which …",null,null],[10,"max_s","","",11,[[],["u32",15]]],[3,"ChainMap","","<code>chain_maps</code> is required to be non-empty",null,null],[12,"s_shift","","",12,null],[12,"chain_maps","","",12,null],[8,"UnitChainComplex","","",null,null],[10,"unit_chain_complex","","",13,[[["arc",3]]]],[0,"resolution","ext","",null,null],[3,"ResolutionInner","ext::resolution","ResolutionInner contains the data of the actual …",null,null],[12,"complex","","",14,null],[12,"modules","","",14,null],[12,"zero_module","","",14,null],[12,"chain_maps","","",14,null],[12,"differentials","","",14,null],[12,"kernels","","",14,null],[11,"new","","",14,[[["arc",3]]]],[11,"extended_degree","","",14,[[]]],[11,"extend_through_degree","","This function prepares the ResolutionInner object to …",14,[[["u32",15],["i32",15]]]],[11,"step_resolution","","Call our resolution $X$, and the chain complex to resolve …",14,[[["u32",15],["i32",15]]]],[11,"cocycle_string","","",14,[[["u32",15],["usize",15],["i32",15]],["string",3]]],[11,"complex","","",14,[[],["arc",3]]],[11,"number_of_gens_in_bidegree","","",14,[[["u32",15],["i32",15]],["usize",15]]],[11,"prime","","",14,[[],["validprime",3]]],[5,"ptr_eq","","Hack to compare two pointers of different types (in this …",null,[[["arc",3],["arc",3]],["bool",15]]],[3,"Cocycle","","",null,null],[12,"s","","",15,null],[12,"t","","",15,null],[12,"class","","",15,null],[12,"name","","",15,null],[3,"SelfMap","","",null,null],[12,"s","","",16,null],[12,"t","","",16,null],[12,"name","","",16,null],[12,"map_data","","",16,null],[12,"map","","",16,null],[6,"AddClassFn","","",null,null],[6,"AddStructlineFn","","",null,null],[3,"Resolution","","Fields<code>kernels</code> - For each <em>internal</em> degree, store the …",null,null],[12,"inner","","",17,null],[12,"next_s","","",17,null],[12,"next_t","","",17,null],[12,"add_class","","",17,null],[12,"add_structline","","",17,null],[12,"filtration_one_products","","",17,null],[12,"unit_resolution","","",17,null],[12,"unit_resolution_owner","","",17,null],[12,"product_names","","",17,null],[12,"product_list","","",17,null],[12,"chain_maps_to_unit_resolution","","",17,null],[12,"max_product_homological_degree","","",17,null],[12,"self_maps","","",17,null],[11,"new","","",17,[[["option",4],["addstructlinefn",6],["arc",3],["addclassfn",6],["option",4]]]],[11,"new_with_inner","","",17,[[["option",4],["addstructlinefn",6],["resolutioninner",3],["addclassfn",6],["option",4]]]],[11,"resolve_through_bidegree","","",17,[[["u32",15],["i32",15]]]],[11,"resolve_through_degree","","",17,[[["i32",15]]]],[11,"step_after","","",17,[[["u32",15],["i32",15]]]],[11,"compute_filtration_one_products","","",17,[[["u32",15],["i32",15]]]],[11,"add_structline","","",17,[[["u32",15],["vec",3],["i32",15],["bool",15],["vec",3],["str",15]]]],[11,"max_computed_degree","","",17,[[],["i32",15]]],[11,"max_computed_homological_degree","","",17,[[],["u32",15]]],[11,"graded_dimension_vec","","",17,[[],[["vec",3],["vec",3]]]],[11,"graded_dimension_string","","",17,[[],["string",3]]],[11,"complex","","",17,[[],["arc",3]]],[11,"catch_up_products","","This function computes the products between the element …",17,[[]]],[11,"add_product","","The return value is whether the product was actually …",17,[[["u32",15],["i32",15],["vec",3],["str",15]],["bool",15]]],[11,"construct_unit_resolution","","",17,[[]]],[11,"set_unit_resolution","","",17,[[["weak",3],["rwlock",6]]]],[11,"compute_products","","Compute products whose result lie in degrees up to (s, t)",17,[[["u32",15],["i32",15]]]],[11,"compute_product_step","","Target = result of the product Source = multiplicand",17,[[["u32",15],["i32",15],["cocycle",3]]]],[11,"construct_maps_to_unit","","",17,[[["u32",15],["i32",15]]]],[11,"extend_maps_to_unit","","This ensures the chain_maps_to_unit_resolution are …",17,[[["u32",15],["i32",15]]]],[11,"add_self_map","","The return value is whether the self map was actually …",17,[[["u32",15],["matrix",3],["i32",15],["str",15]],["bool",15]]],[11,"compute_self_maps","","We compute the products by self maps where the result has …",17,[[["u32",15],["i32",15]]]],[11,"algebra","","",17,[[],["arc",3]]],[11,"prime","","",17,[[],["validprime",3]]],[11,"module","","",17,[[["u32",15]],[["arc",3],["freemodule",3]]]],[11,"min_degree","","",17,[[],["i32",15]]],[11,"differential","","",17,[[["u32",15]],[["freemodulehomomorphism",3],["arc",3]]]],[0,"resolution_homomorphism","ext","",null,null],[3,"ResolutionHomomorphism","ext::resolution_homomorphism","",null,null],[12,"name","","",18,null],[12,"source","","",18,null],[12,"target","","",18,null],[12,"maps","","",18,null],[12,"homological_degree_shift","","",18,null],[12,"internal_degree_shift","","",18,null],[11,"new","","",18,[[["weak",3],["weak",3],["u32",15],["i32",15],["string",3]]]],[11,"get_map_ensure_length","","",18,[[["u32",15]],["freemodulehomomorphism",3]]],[11,"get_map","","",18,[[["u32",15]],["freemodulehomomorphism",3]]],[11,"into_chain_maps","","",18,[[],[["freemodulehomomorphism",3],["vec",3]]]],[11,"extend","","Extend the resolution homomorphism such that it is …",18,[[["u32",15],["i32",15]]]],[11,"extend_step","","",18,[[["u32",15],["option",4],["i32",15],["matrix",3]]]],[11,"extend_step_helper","","",18,[[["u32",15],["option",4],["i32",15],["matrix",3]],["matrix",3]]],[11,"from_module_homomorphism","","",18,[[["resolutioninner",3],["arc",3],["arc",3],["string",3],["finitemodulehomomorphism",3]]]],[11,"act","","",18,[[["slicemut",4],["u32",15],["usize",15],["i32",15]]]],[6,"ResolutionHomomorphismToUnit","","",null,null],[0,"yoneda","ext","",null,null],[17,"PENALTY_UNIT","ext::yoneda","",null,null],[6,"Yoneda","","",null,null],[5,"rate_operation","","",null,[[["usize",15],["arc",3],["i32",15]],["i32",15]]],[5,"rate_adem_operation","","",null,[[["i32",15],["usize",15],["ademalgebra",3]],["i32",15]]],[5,"operation_drop","","",null,[[["i32",15],["usize",15],["ademalgebra",3]],["i32",15]]],[5,"split_mut_borrow","","",null,[[["usize",15],["vec",3]]]],[5,"yoneda_representative_element","","",null,[[["u32",15],["usize",15],["arc",3],["i32",15]],["yoneda",6]]],[5,"yoneda_representative","","This function produces a quasi-isomorphic quotient of <code>cc</code> …",null,[[["chainmap",3],["arc",3],["freemodulehomomorphism",3]],["yoneda",6]]],[5,"yoneda_representative_with_strategy","","",null,[[["chainmap",3],["arc",3],["freemodulehomomorphism",3]],["yoneda",6]]],[5,"compute_kernel_image","","This function does the following computation:",null,[[["i32",15],["arc",3],["option",4],["option",4],["qm",3],["option",4],["subspace",3]]]],[0,"utils","ext","",null,null],[3,"Config","ext::utils","",null,null],[12,"module_paths","","",19,null],[12,"module_file_name","","",19,null],[12,"algebra_name","","",19,null],[12,"max_degree","","",19,null],[5,"construct","","",null,[[["config",3]],[["resolution",3],["result",6]]]],[5,"construct_from_json","","",null,[[["value",4],["str",15]],[["resolution",3],["result",6]]]],[5,"load_module_from_file","","",null,[[["config",3]],[["string",3],["result",6]]]],[5,"construct_s_2","","",null,[[["str",15]],[["resolution",3],["ccc",6]]]],[3,"ModuleFileNotFoundError","","",null,null],[12,"name","","",20,null],[17,"RED_ANSI_CODE","","",null,null],[17,"WHITE_ANSI_CODE","","",null,null],[5,"ascii_num","","",null,[[["usize",15]],["char",15]]],[5,"print_resolution_color","","",null,[[["u32",15],["hashmap",3],["i32",15]]]],[8,"HashMapTuple","","",null,null],[10,"get_tuple","","",21,[[],["option",4]]],[5,"iter_stems","","Iterate through all pairs (s, f, t) such that f = t - s, …",null,[[["u32",15],["i32",15]]]],[0,"secondary","ext","",null,null],[6,"Resolution","ext::secondary","",null,null],[6,"FMH","","",null,null],[17,"TWO","","",null,null],[3,"MilnorClass","","An element in the Milnor algebra",null,null],[12,"elements","","",22,null],[12,"degree","","",22,null],[11,"from_module_row","","",22,[[["fpvector",4],["usize",15],["i32",15],["freemodule",3]]]],[11,"iter","","",22,[[]]],[11,"iter_mut","","",22,[[]]],[5,"compute_delta","","A non-concurrent version for computing delta. In practice …",null,[[["u32",15],["i32",15],["resolutioninner",3]],[["freemodulehomomorphism",3],["vec",3]]]],[5,"compute_c","","Computes $C(g_i) = A(c_i^j, dd g_j)$.",null,[[["u32",15],["usize",15],["fpvector",4],["i32",15],["resolutioninner",3]]]],[5,"compute_a_dd","","Computes $A(a, ddg)$",null,[[["u32",15],["usize",15],["milnorclass",3],["resolutioninner",3],["i32",15],["fpvector",4]]]],[5,"a_sigma_y","","Compute the Y terms of $A(a, σ(b)σ(c))$",null,[[["slicemut",4],["algebra",3],["milnorclass",3],["milnorelt",3]]]],[17,"AY_CACHE","","",null,null],[5,"a_y","","Computes $A(a, Y_{k, l})$ using a thread_local cache. …",null,[[["usize",15],["algebra",3],["milnorclass",3],["fpvector",4]]]],[5,"a_y_cached","","Compute $A(Sq(R), Y_{k, l})$ where $a = Sq(R)$. This …",null,[[["usize",15],["algebra",3],["milnorelt",3],["fpvector",4]]]],[5,"a_y_inner","","Actually computes $A(a, Y_{k, l})$ and returns the result.",null,[[["usize",15],["algebra",3],["milnorelt",3]],["fpvector",4]]],[0,"combinatorics","ext","",null,null],[17,"MAX_XI_TAU","ext::combinatorics","",null,null],[5,"adem_relation_coefficient","","",null,[[["validprime",3],["u32",15]],["u32",15]]],[5,"inadmissible_pairs","","",null,[[["validprime",3],["bool",15],["i32",15]],[["global",3],["vec",3]]]],[5,"tau_degrees","","",null,[[["validprime",3]]]],[5,"xi_degrees","","",null,[[["validprime",3]]]],[3,"TruncatedPolynomialMonomialBasis","","",null,null],[12,"p","","",23,null],[12,"gens","","",23,null],[12,"gen_degrees","","",23,null],[12,"parts_by_max","","",23,null],[12,"parts","","",23,null],[3,"PartitionIterator","","",null,null],[12,"remaining","","",24,null],[12,"parts","","",24,null],[12,"partition","","",24,null],[12,"initial","","",24,null],[0,"block_structure","ext","",null,null],[3,"GeneratorBasisEltPair","ext::block_structure","",null,null],[12,"generator_degree","","",25,null],[12,"generator_index","","",25,null],[12,"basis_index","","",25,null],[3,"BlockStructure","","",null,null],[12,"total_dimension","","",26,null],[12,"basis_element_to_block_idx","","",26,null],[12,"block_starts","","",26,null],[3,"BlockStart","","",null,null],[12,"block_start_index","","",27,null],[12,"block_size","","",27,null],[0,"change_of_basis","ext","",null,null],[5,"adem_to_milnor_on_basis","ext::change_of_basis","",null,[[["u32",15],["usize",15],["ademalgebra",3],["i32",15],["fpvector",4],["milnoralgebra",3]]]],[5,"adem_to_milnor","","",null,[[["u32",15],["fpvector",4],["ademalgebra",3],["i32",15],["fpvector",4],["milnoralgebra",3]]]],[5,"milnor_to_adem_on_basis","","",null,[[["u32",15],["usize",15],["ademalgebra",3],["i32",15],["fpvector",4],["milnoralgebra",3]]]],[5,"milnor_to_adem","","",null,[[["u32",15],["fpvector",4],["ademalgebra",3],["i32",15],["fpvector",4],["milnoralgebra",3]]]],[5,"adem_q","","",null,[[["u32",15],["ademalgebra",3],["fpvector",4],["milnoralgebra",3]]]],[5,"adem_plist","","",null,[[["u32",15],["vec",3],["ademalgebra",3],["i32",15],["global",3],["fpvector",4],["milnoralgebra",3]]]],[0,"steenrod_parser","ext","",null,null],[4,"AlgebraBasisElt","ext::steenrod_parser","",null,null],[13,"AList","","",28,null],[13,"PList","","",28,null],[13,"P","","",28,null],[13,"Q","","",28,null],[4,"AlgebraParseNode","","",null,null],[13,"Product","","",29,null],[13,"Sum","","",29,null],[13,"BasisElt","","",29,null],[13,"Scalar","","",29,null],[4,"ModuleParseNode","","",null,null],[13,"Act","","",30,null],[13,"Sum","","",30,null],[13,"ModuleBasisElt","","",30,null],[4,"BocksteinOrSq","","",null,null],[13,"Bockstein","","",31,null],[13,"Sq","","",31,null],[5,"parse_algebra","","",null,[[["str",15]],[["parseerror",3],["result",4],["algebraparsenode",4]]]],[5,"parse_module","","",null,[[["str",15]],[["moduleparsenode",4],["parseerror",3],["result",4]]]],[3,"ParseError","","",null,null],[12,"info","","",32,null],[0,"steenrod_evaluator","ext","",null,null],[3,"SteenrodCalculator","ext::steenrod_evaluator","",null,null],[12,"adem_algebra","","",33,null],[12,"milnor_algebra","","",33,null],[5,"evaluate_algebra_adem","","",null,[[["str",15],["ademalgebra",3],["milnoralgebra",3]],[["error",3],["result",4]]]],[5,"evaluate_algebra_milnor","","",null,[[["str",15],["ademalgebra",3],["milnoralgebra",3]],[["error",3],["result",4]]]],[5,"evaluate_module","","",null,[[["str",15],["ademalgebra",3],["hashmap",3],["milnoralgebra",3]],[["error",3],["result",4]]]],[3,"DegreeError","","",null,null],[3,"UnknownBasisElementError","","",null,null],[12,"name","","",34,null],[0,"module","ext","",null,null],[0,"block_structure","ext::module","",null,null],[3,"GeneratorBasisEltPair","ext::module::block_structure","",null,null],[12,"generator_degree","","",25,null],[12,"generator_index","","",25,null],[12,"basis_index","","",25,null],[3,"BlockStructure","","",null,null],[12,"total_dimension","","",26,null],[12,"basis_element_to_block_idx","","",26,null],[12,"block_starts","","",26,null],[3,"BlockStart","","",null,null],[12,"block_start_index","","",27,null],[12,"block_size","","",27,null],[0,"homomorphism","ext::module","",null,null],[8,"ModuleHomomorphism","ext::module::homomorphism","",null,null],[16,"Source","","",35,null],[16,"Target","","",35,null],[18,"CUSTOM_QI","","",35,null],[10,"source","","",35,[[],["arc",3]]],[10,"target","","",35,[[],["arc",3]]],[10,"degree_shift","","",35,[[],["i32",15]]],[10,"apply_to_basis_element","","Calling this function when …",35,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[10,"kernel","","",35,[[["i32",15]],["subspace",3]]],[10,"quasi_inverse","","",35,[[["i32",15]],["quasiinverse",3]]],[10,"compute_kernels_and_quasi_inverses_through_degree","","",35,[[["i32",15]]]],[11,"apply","","",35,[[["u32",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"prime","","",35,[[],["validprime",3]]],[11,"min_degree","","",35,[[],["i32",15]]],[11,"image","","Returns the image of the module homomorphism in degree …",35,[[["i32",15]],["option",4]]],[11,"calculate_quasi_inverse","","A version of kernel_and_quasi_inverse that, in fact, doesn…",35,[[["i32",15]],["quasiinverse",3]]],[11,"kernel_and_quasi_inverse","","",35,[[["i32",15]]]],[11,"get_matrix","","The (sliced) dimensions of <code>matrix</code> must be equal to …",35,[[["matrixslicemut",3],["i32",15]]]],[11,"apply_quasi_inverse","","",35,[[["slicemut",4],["slice",4],["i32",15]]]],[8,"ZeroHomomorphism","","",null,null],[10,"zero_homomorphism","","",36,[[["arc",3],["arc",3],["i32",15]]]],[8,"IdentityHomomorphism","","",null,null],[10,"identity_homomorphism","","",37,[[["arc",3]]]],[3,"BoundedModuleHomomorphism","","",null,null],[12,"lock","","",38,null],[12,"source","","",38,null],[12,"target","","",38,null],[12,"degree_shift","","",38,null],[12,"matrices","","",38,null],[12,"quasi_inverses","","",38,null],[12,"kernels","","",38,null],[3,"FiniteModuleHomomorphism","","",null,null],[12,"source","","",39,null],[12,"target","","",39,null],[12,"map","","",39,null],[3,"FPModuleHomomorphism","","",null,null],[12,"source","","",40,null],[12,"underlying_map","","",40,null],[8,"FPModuleT","","",null,null],[10,"gen_idx_to_fp_idx","","",41,[[["usize",15],["i32",15]],["isize",15]]],[10,"fp_idx_to_gen_idx","","",41,[[["usize",15],["i32",15]],["usize",15]]],[10,"generators","","",41,[[],["arc",3]]],[3,"FreeModuleHomomorphism","","",null,null],[12,"source","","",42,null],[12,"target","","",42,null],[12,"outputs","","",42,null],[12,"kernel","","",42,null],[12,"quasi_inverse","","",42,null],[12,"min_degree","","",42,null],[12,"lock","","",42,null],[12,"degree_shift","","degree shift, such that ouptut_degree = input_degree - …",42,null],[3,"GenericZeroHomomorphism","","",null,null],[12,"source","","",43,null],[12,"target","","",43,null],[12,"degree_shift","","",43,null],[3,"HomPullback","","Given a map <code>map</code>: A -> B and <code>source</code> = Hom(B, X), <code>target</code> = …",null,null],[12,"source","","",44,null],[12,"target","","",44,null],[12,"map","","",44,null],[12,"kernel","","",44,null],[12,"quasi_inverse","","",44,null],[3,"QuotientHomomorphism","","",null,null],[12,"f","","",45,null],[12,"s","","",45,null],[12,"t","","",45,null],[3,"QuotientHomomorphismSource","","",null,null],[12,"f","","",46,null],[12,"s","","",46,null],[12,"t","","",46,null],[3,"TruncatedHomomorphism","","",null,null],[12,"f","","",47,null],[12,"s","","",47,null],[12,"t","","",47,null],[3,"TruncatedHomomorphismSource","","",null,null],[12,"f","","",48,null],[12,"s","","",48,null],[12,"t","","",48,null],[8,"SteenrodModule","ext::module","",null,null],[3,"FDModule","","",null,null],[12,"algebra","","",49,null],[12,"name","","",49,null],[12,"graded_dimension","","",49,null],[12,"gen_names","","",49,null],[12,"actions","","",49,null],[4,"FiniteModule","","",null,null],[13,"FDModule","","",50,null],[13,"FPModule","","",50,null],[13,"RealProjectiveSpace","","",50,null],[3,"FPModule","","",null,null],[12,"name","","",51,null],[12,"min_degree","","",51,null],[12,"generators","","",51,null],[12,"relations","","",51,null],[12,"map","","",51,null],[12,"index_table","","",51,null],[3,"FreeModule","","We have a linear enumeration of all generators among all …",null,null],[12,"algebra","","",52,null],[12,"name","","",52,null],[12,"min_degree","","",52,null],[12,"gen_names","","",52,null],[12,"gen_deg_idx_to_internal_idx","","degree -> internal index of first generator in degree",52,null],[12,"num_gens","","",52,null],[12,"basis_element_to_opgen","","",52,null],[12,"generator_to_index","","degree -> internal_gen_idx -> the offset of the generator …",52,null],[3,"OperationGeneratorPair","","",null,null],[12,"operation_degree","","",53,null],[12,"operation_index","","",53,null],[12,"generator_degree","","",53,null],[12,"generator_index","","",53,null],[3,"RealProjectiveSpace","","This is $\\\\mathbb{RP}_{\\\\mathrm{min}}^{\\\\mathrm{max}}$. The …",null,null],[12,"algebra","","",54,null],[12,"min","","",54,null],[12,"clear_bottom","","",54,null],[12,"max","","",54,null],[8,"ZeroModule","","",null,null],[10,"zero_module","","",55,[[["arc",3],["i32",15]]]],[8,"BoundedModule","","",null,null],[10,"max_degree","","<code>max_degree</code> is the a degree such that if t > <code>max_degree</code>, …",56,[[],["i32",15]]],[11,"total_dimension","","",56,[[],["usize",15]]],[11,"to_fd_module","","",56,[[],["finitedimensionalmodule",3]]],[8,"Module","","",null,null],[16,"Algebra","","",57,null],[10,"algebra","","",57,[[],["arc",3]]],[10,"name","","",57,[[],["string",3]]],[10,"min_degree","","",57,[[],["i32",15]]],[11,"compute_basis","","",57,[[["i32",15]]]],[10,"max_computed_degree","","",57,[[],["i32",15]]],[10,"dimension","","",57,[[["i32",15]],["usize",15]]],[10,"act_on_basis","","",57,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[10,"basis_element_to_string","","",57,[[["usize",15],["i32",15]],["string",3]]],[11,"is_unit","","Whether this is the unit module.",57,[[],["bool",15]]],[11,"prime","","",57,[[],["validprime",3]]],[11,"borrow_output","","Whether act_on_basis_borrow is available.",57,[[],["bool",15]]],[11,"act_on_basis_borrow","","Returns a borrow of the value of the corresponding action …",57,[[["usize",15],["i32",15]],["fpvector",4]]],[11,"act","","",57,[[["u32",15],["usize",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"act_by_element","","",57,[[["u32",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"act_by_element_on_basis","","",57,[[["u32",15],["usize",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"basis_string_list","","",57,[[["i32",15]],[["vec",3],["global",3],["string",3]]]],[11,"element_to_string","","",57,[[["slice",4],["i32",15]],["string",3]]],[11,"truncate_to_fd_module","","This truncates the module to <code>max_dim</code> and represents it as …",57,[[["arc",3],["i32",15]],["finitedimensionalmodule",3]]],[11,"check_relation","","op1(op2(x)) - (op1*op2)(x)",57,[[["usize",15],["i32",15],["fpvector",4]]]],[11,"check_relations","","Input: degree through which to check. Output: Vec of …",57,[[["i32",15]],[["vec",3],["global",3]]]],[11,"test_relations","","",57,[[["usize",15],["i32",15]]]],[3,"ModuleFailedRelationError","","",null,null],[12,"relation","","",58,null],[12,"value","","",58,null],[3,"FreeUnstableModule","","",null,null],[12,"algebra","","",59,null],[12,"name","","",59,null],[12,"min_degree","","",59,null],[12,"gen_names","","",59,null],[12,"gen_deg_idx_to_internal_idx","","",59,null],[12,"num_gens","","",59,null],[12,"basis_element_to_opgen","","",59,null],[12,"generator_to_index","","",59,null],[8,"PolynomialAlgebraModule","","",null,null],[16,"Algebra","","",60,null],[10,"algebra","","",60,[[],["arc",3]]],[10,"sq_polynomial_generator_to_monomial","","",60,[[["usize",15],["polynomialalgebramonomial",3],["i32",15]]]],[10,"sq_exterior_generator_to_monomial","","",60,[[["usize",15],["polynomialalgebramonomial",3],["i32",15]]]],[10,"bockstein_polynomial_generator_to_monomial","","",60,[[["usize",15],["polynomialalgebramonomial",3],["i32",15]]]],[10,"bockstein_exterior_generator_to_monomial","","",60,[[["usize",15],["polynomialalgebramonomial",3],["i32",15]]]],[10,"action_table","","",60,[[],["oncevec",3]]],[10,"bockstein_table","","",60,[[],["oncevec",3]]],[11,"bottom_truncation","","",60,[[],["i32",15]]],[11,"top_truncation","","",60,[[],["i32",15]]],[11,"sq_polynomial_generator_to_polynomial","","",60,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"sq_exterior_generator_to_polynomial","","",60,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"bockstein_polynomial_generator_to_polynomial","","",60,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"bockstein_exterior_generator_to_polynomial","","",60,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"sq_on_basis","","",60,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"sq_monomial_to_polynomial","","",60,[[["u32",15],["polynomialalgebramonomial",3],["i32",15],["slicemut",4]]]],[11,"sq_polynomial_to_polynomial","","",60,[[["u32",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"bockstein_on_basis","","",60,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"bockstein_monomial_to_polynomial","","",60,[[["u32",15],["slicemut",4],["polynomialalgebramonomial",3]]]],[11,"bockstein_polynomial_to_polynomial","","",60,[[["u32",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"compute_action_table","","",60,[[["i32",15]]]],[11,"compute_action_table_ext_case","","",60,[[["usize",15],["polynomialalgebramonomial",3],["i32",15],["fpvector",4],["fpvector",4]],["fpvector",4]]],[11,"compute_action_table_poly_case","","",60,[[["usize",15],["polynomialalgebramonomial",3],["i32",15],["fpvector",4]],["fpvector",4]]],[11,"compute_bockstein_table","","",60,[[["i32",15]]]],[3,"KFpn","","",null,null],[12,"algebra","","",61,null],[12,"n","","",61,null],[12,"polynomial_monomials_field","","",61,null],[12,"exterior_monomials_field","","",61,null],[12,"basis_table_field","","",61,null],[12,"action_table_field","","",61,null],[12,"bockstein_table_field","","",61,null],[12,"frobenius_table","","",61,null],[12,"inverse_frobenius_table","","",61,null],[3,"BCp","","",null,null],[12,"algebra","","",62,null],[12,"polynomial_monomials_field","","",62,null],[12,"exterior_monomials_field","","",62,null],[12,"basis_table_field","","",62,null],[12,"action_table_field","","",62,null],[12,"bockstein_table_field","","",62,null],[3,"Dickson2","","",null,null],[12,"algebra","","",63,null],[12,"n","","",63,null],[12,"polynomial_monomials_field","","",63,null],[12,"exterior_monomials_field","","",63,null],[12,"basis_table_field","","",63,null],[12,"action_table_field","","",63,null],[12,"quadratic_terms_field","","",63,null],[3,"HomModule","","",null,null],[12,"algebra","","",64,null],[12,"source","","",64,null],[12,"target","","",64,null],[12,"block_structures","","",64,null],[3,"QuotientModule","","Given a module <code>module</code>, this is the quotient of <code>module</code> by …",null,null],[12,"module","","",65,null],[12,"subspaces","","",65,null],[12,"basis_list","","",65,null],[3,"SumModule","","",null,null],[12,"algebra","","",66,null],[12,"min_degree","","",66,null],[12,"modules","","",66,null],[12,"block_structures","","",66,null],[3,"TensorModule","","",null,null],[12,"left","","",67,null],[12,"right","","",67,null],[12,"block_structures","","",67,null],[3,"TruncatedModule","","A module M where we quotient out everything above degree …",null,null],[12,"module","","",68,null],[12,"truncation","","",68,null],[0,"cli_module_loaders","ext","",null,null],[5,"get_gens","ext::cli_module_loaders","",null,[[["i32",15]],[["bivec",3],["error",3],["result",4]]]],[5,"gens_to_json","","",null,[[["bivec",3]],["value",4]]],[5,"get_expression_to_vector","","",null,[[["fpvector",4],["str",15]]]],[5,"interactive_module_define","","",null,[[],[["error",3],["result",4],["string",3]]]],[5,"interactive_module_define_fdmodule","","",null,[[["validprime",3],["value",4],["string",3],["bool",15]],[["result",4],["error",3]]]],[5,"interactive_module_define_fpmodule","","",null,[[["validprime",3],["value",4],["string",3],["bool",15]],[["result",4],["error",3]]]],[6,"CCC","ext","",null,null],[14,"load_s_2","","",null,null],[11,"from","ext::chain_complex::finite_chain_complex","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","ext::chain_complex::hom_complex","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","ext::chain_complex::tensor_product_chain_complex","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","ext::chain_complex","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","ext::resolution","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","ext::resolution_homomorphism","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","ext::utils","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","ext::secondary","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","ext::combinatorics","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"into_iter","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","ext::module::block_structure","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","ext::steenrod_parser","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_string","","",32,[[],["string",3]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","ext::steenrod_evaluator","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_string","","",69,[[],["string",3]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","ext::module::homomorphism","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","ext::module","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_string","","",58,[[],["string",3]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"algebra_type","","",61,[[],["str",15]]],[11,"prime","","",61,[[],["validprime",3]]],[11,"compute_basis","","",61,[[["i32",15]]]],[11,"max_computed_degree","","",61,[[],["i32",15]]],[11,"dimension","","",61,[[["i32",15]],["usize",15]]],[11,"basis_element_to_string","","",61,[[["usize",15],["i32",15]],["string",3]]],[11,"multiply_basis_elements","","",61,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"algebra","","",61,[[],["arc",3]]],[11,"name","","",61,[[],["string",3]]],[11,"min_degree","","",61,[[],["i32",15]]],[11,"max_computed_degree","","",61,[[],["i32",15]]],[11,"dimension","","",61,[[["i32",15]],["usize",15]]],[11,"compute_basis","","",61,[[["i32",15]]]],[11,"basis_element_to_string","","",61,[[["usize",15],["i32",15]],["string",3]]],[11,"act_on_basis","","",61,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"act","","",61,[[["u32",15],["usize",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"algebra_type","","",62,[[],["str",15]]],[11,"prime","","",62,[[],["validprime",3]]],[11,"compute_basis","","",62,[[["i32",15]]]],[11,"max_computed_degree","","",62,[[],["i32",15]]],[11,"dimension","","",62,[[["i32",15]],["usize",15]]],[11,"basis_element_to_string","","",62,[[["usize",15],["i32",15]],["string",3]]],[11,"multiply_basis_elements","","",62,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"algebra","","",62,[[],["arc",3]]],[11,"name","","",62,[[],["string",3]]],[11,"min_degree","","",62,[[],["i32",15]]],[11,"max_computed_degree","","",62,[[],["i32",15]]],[11,"dimension","","",62,[[["i32",15]],["usize",15]]],[11,"compute_basis","","",62,[[["i32",15]]]],[11,"basis_element_to_string","","",62,[[["usize",15],["i32",15]],["string",3]]],[11,"act_on_basis","","",62,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"act","","",62,[[["u32",15],["usize",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"algebra_type","","",63,[[],["str",15]]],[11,"prime","","",63,[[],["validprime",3]]],[11,"compute_basis","","",63,[[["i32",15]]]],[11,"max_computed_degree","","",63,[[],["i32",15]]],[11,"dimension","","",63,[[["i32",15]],["usize",15]]],[11,"basis_element_to_string","","",63,[[["usize",15],["i32",15]],["string",3]]],[11,"multiply_basis_elements","","",63,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"algebra","","",63,[[],["arc",3]]],[11,"name","","",63,[[],["string",3]]],[11,"min_degree","","",63,[[],["i32",15]]],[11,"max_computed_degree","","",63,[[],["i32",15]]],[11,"dimension","","",63,[[["i32",15]],["usize",15]]],[11,"compute_basis","","",63,[[["i32",15]]]],[11,"basis_element_to_string","","",63,[[["usize",15],["i32",15]],["string",3]]],[11,"act_on_basis","","",63,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"act","","",63,[[["u32",15],["usize",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"fmt","ext::steenrod_evaluator","",69,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","ext::module","",58,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","ext::steenrod_parser","",32,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","ext::steenrod_evaluator","",34,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fp_idx_to_gen_idx","ext::module","",51,[[["usize",15],["i32",15]],["usize",15]]],[11,"gen_idx_to_fp_idx","","",51,[[["usize",15],["i32",15]],["isize",15]]],[11,"generators","","",51,[[],["arc",3]]],[11,"fp_idx_to_gen_idx","","",50,[[["usize",15],["i32",15]],["usize",15]]],[11,"gen_idx_to_fp_idx","","",50,[[["usize",15],["i32",15]],["isize",15]]],[11,"generators","","",50,[[],["arc",3]]],[11,"from","ext::module::homomorphism","",39,[[["boundedmodulehomomorphism",3],["finitemodule",4]],["finitemodulehomomorphism",3]]],[11,"from","ext::module","",50,[[["steenrodalgebra",4],["finitelypresentedmodule",3]],["finitemodule",4]]],[11,"from","","",50,[[["steenrodalgebra",4],["realprojectivespace",3]],["finitemodule",4]]],[11,"from","","",50,[[["finitedimensionalmodule",3],["steenrodalgebra",4]],["finitemodule",4]]],[11,"from","ext::module::homomorphism","",39,[[["fpmodulehomomorphism",3],["finitemodule",4]],["finitemodulehomomorphism",3]]],[11,"identity_homomorphism","","",38,[[["arc",3]],["boundedmodulehomomorphism",3]]],[11,"identity_homomorphism","","",39,[[["arc",3],["finitemodule",4]],[["finitemodulehomomorphism",3],["finitemodule",4]]]],[11,"identity_homomorphism","","",40,[[["arc",3]],["fpmodulehomomorphism",3]]],[11,"prime","ext::module","",63,[[],["validprime",3]]],[11,"name","","",63,[[],["string",3]]],[11,"polynomial_monomials","","",63,[[],["truncatedpolynomialmonomialbasis",3]]],[11,"exterior_monomials","","",63,[[],["truncatedpolynomialmonomialbasis",3]]],[11,"basis_table","","",63,[[],["oncevec",3]]],[11,"polynomial_generators_in_degree","","",63,[[["i32",15]],["usize",15]]],[11,"exterior_generators_in_degree","","",63,[[["i32",15]],["usize",15]]],[11,"repr_poly_generator","","",63,[[["usize",15],["i32",15]]]],[11,"repr_ext_generator","","",63,[[["usize",15],["i32",15]],["string",3]]],[11,"frobenius_on_generator","","",63,[[["usize",15],["i32",15]],[["usize",15],["option",4]]]],[11,"compute_generating_set","","",63,[[["i32",15]]]],[11,"prime","","",62,[[],["validprime",3]]],[11,"name","","",62,[[],["string",3]]],[11,"polynomial_monomials","","",62,[[],["truncatedpolynomialmonomialbasis",3]]],[11,"exterior_monomials","","",62,[[],["truncatedpolynomialmonomialbasis",3]]],[11,"polynomial_generators_in_degree","","",62,[[["i32",15]],["usize",15]]],[11,"exterior_generators_in_degree","","",62,[[["i32",15]],["usize",15]]],[11,"repr_poly_generator","","",62,[[["usize",15],["i32",15]]]],[11,"repr_ext_generator","","",62,[[["usize",15],["i32",15]],["string",3]]],[11,"frobenius_on_generator","","",62,[[["usize",15],["i32",15]],[["usize",15],["option",4]]]],[11,"compute_generating_set","","",62,[[["i32",15]]]],[11,"basis_table","","",62,[[],["oncevec",3]]],[11,"prime","","",61,[[],["validprime",3]]],[11,"name","","",61,[[],["string",3]]],[11,"polynomial_monomials","","",61,[[],["truncatedpolynomialmonomialbasis",3]]],[11,"exterior_monomials","","",61,[[],["truncatedpolynomialmonomialbasis",3]]],[11,"basis_table","","",61,[[],["oncevec",3]]],[11,"polynomial_generators_in_degree","","",61,[[["i32",15]],["usize",15]]],[11,"exterior_generators_in_degree","","",61,[[["i32",15]],["usize",15]]],[11,"repr_poly_generator","","",61,[[["usize",15],["i32",15]]]],[11,"repr_ext_generator","","",61,[[["usize",15],["i32",15]],["string",3]]],[11,"frobenius_on_generator","","",61,[[["usize",15],["i32",15]],[["usize",15],["option",4]]]],[11,"compute_generating_set","","",61,[[["i32",15]]]],[11,"fmt","ext::steenrod_parser","",31,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","ext::module::block_structure","",27,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","ext::steenrod_evaluator","",34,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","ext::steenrod_parser","",32,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","ext::steenrod_evaluator","",69,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","ext::module::block_structure","",25,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",26,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","ext::steenrod_parser","",28,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","ext::module","",53,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",58,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","ext::steenrod_parser","",29,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",30,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","ext::module","",53,[[],["operationgeneratorpair",3]]],[11,"clone","ext::steenrod_parser","",31,[[],["bocksteinorsq",4]]],[11,"clone","","",28,[[],["algebrabasiselt",4]]],[11,"clone","","",29,[[],["algebraparsenode",4]]],[11,"clone","","",30,[[],["moduleparsenode",4]]],[11,"clone","ext::module::homomorphism","",38,[[],["boundedmodulehomomorphism",3]]],[11,"clone","ext::module","",49,[[],["finitedimensionalmodule",3]]],[11,"description","ext::steenrod_parser","",32,[[],["str",15]]],[11,"description","ext::module","",58,[[],["str",15]]],[11,"max_degree","","",49,[[],["i32",15]]],[11,"max_degree","","",50,[[],["i32",15]]],[11,"max_degree","","",66,[[],["i32",15]]],[11,"max_degree","","",67,[[],["i32",15]]],[11,"max_degree","","",68,[[],["i32",15]]],[11,"max_degree","","",65,[[],["i32",15]]],[11,"save","ext::module::homomorphism","",42,[[],[["result",4],["error",3]]]],[11,"save","ext::module","",59,[[],[["result",4],["error",3]]]],[11,"save","","",52,[[],[["result",4],["error",3]]]],[11,"algebra","","",61,[[],["arc",3]]],[11,"action_table","","",61,[[],["oncevec",3]]],[11,"bockstein_table","","",61,[[],["oncevec",3]]],[11,"sq_polynomial_generator_to_monomial","","",61,[[["usize",15],["polynomialalgebramonomial",3],["i32",15]]]],[11,"sq_exterior_generator_to_monomial","","",61,[[["usize",15],["polynomialalgebramonomial",3],["i32",15]]]],[11,"bockstein_polynomial_generator_to_monomial","","",61,[[["usize",15],["polynomialalgebramonomial",3],["i32",15]]]],[11,"bockstein_exterior_generator_to_monomial","","",61,[[["usize",15],["polynomialalgebramonomial",3],["i32",15]]]],[11,"sq_polynomial_generator_to_polynomial","","",61,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"sq_exterior_generator_to_polynomial","","",61,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"bockstein_polynomial_generator_to_polynomial","","",61,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"bockstein_exterior_generator_to_polynomial","","",61,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"algebra","","",63,[[],["arc",3]]],[11,"action_table","","",63,[[],["oncevec",3]]],[11,"bockstein_table","","",63,[[],["oncevec",3]]],[11,"sq_polynomial_generator_to_monomial","","",63,[[["usize",15],["polynomialalgebramonomial",3],["i32",15]]]],[11,"sq_exterior_generator_to_monomial","","",63,[[["usize",15],["polynomialalgebramonomial",3],["i32",15]]]],[11,"bockstein_polynomial_generator_to_monomial","","",63,[[["usize",15],["polynomialalgebramonomial",3],["i32",15]]]],[11,"bockstein_exterior_generator_to_monomial","","",63,[[["usize",15],["polynomialalgebramonomial",3],["i32",15]]]],[11,"algebra","","",62,[[],["arc",3]]],[11,"action_table","","",62,[[],["oncevec",3]]],[11,"bockstein_table","","",62,[[],["oncevec",3]]],[11,"sq_polynomial_generator_to_monomial","","",62,[[["usize",15],["polynomialalgebramonomial",3],["i32",15]]]],[11,"sq_exterior_generator_to_monomial","","",62,[[["usize",15],["polynomialalgebramonomial",3],["i32",15]]]],[11,"bockstein_polynomial_generator_to_monomial","","",62,[[["usize",15],["polynomialalgebramonomial",3],["i32",15]]]],[11,"bockstein_exterior_generator_to_monomial","","",62,[[["usize",15],["polynomialalgebramonomial",3],["i32",15]]]],[11,"algebra","","",50,[[],["arc",3]]],[11,"name","","",50,[[],["string",3]]],[11,"min_degree","","",50,[[],["i32",15]]],[11,"compute_basis","","",50,[[["i32",15]]]],[11,"max_computed_degree","","",50,[[],["i32",15]]],[11,"dimension","","",50,[[["i32",15]],["usize",15]]],[11,"act_on_basis","","",50,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"act","","",50,[[["u32",15],["usize",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"act_by_element","","",50,[[["u32",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"basis_element_to_string","","",50,[[["usize",15],["i32",15]],["string",3]]],[11,"is_unit","","",50,[[],["bool",15]]],[11,"prime","","",50,[[],["validprime",3]]],[11,"borrow_output","","Whether act_on_basis_borrow is available.",50,[[],["bool",15]]],[11,"act_on_basis_borrow","","",50,[[["usize",15],["i32",15]],["fpvector",4]]],[11,"algebra","","",51,[[],["arc",3]]],[11,"min_degree","","",51,[[],["i32",15]]],[11,"name","","",51,[[],["string",3]]],[11,"max_computed_degree","","",51,[[],["i32",15]]],[11,"compute_basis","","",51,[[["i32",15]]]],[11,"dimension","","",51,[[["i32",15]],["usize",15]]],[11,"act_on_basis","","",51,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"basis_element_to_string","","",51,[[["usize",15],["i32",15]],["string",3]]],[11,"algebra","","",64,[[],["arc",3]]],[11,"name","","",64,[[],["string",3]]],[11,"min_degree","","",64,[[],["i32",15]]],[11,"max_computed_degree","","",64,[[],["i32",15]]],[11,"compute_basis","","",64,[[["i32",15]]]],[11,"dimension","","",64,[[["i32",15]],["usize",15]]],[11,"act_on_basis","","",64,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"basis_element_to_string","","",64,[[["usize",15],["i32",15]],["string",3]]],[11,"name","","",52,[[],["string",3]]],[11,"algebra","","",52,[[],["arc",3]]],[11,"min_degree","","",52,[[],["i32",15]]],[11,"max_computed_degree","","",52,[[],["i32",15]]],[11,"dimension","","",52,[[["i32",15]],["usize",15]]],[11,"basis_element_to_string","","",52,[[["usize",15],["i32",15]],["string",3]]],[11,"act_on_basis","","",52,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"name","","",59,[[],["string",3]]],[11,"algebra","","",59,[[],["arc",3]]],[11,"min_degree","","",59,[[],["i32",15]]],[11,"max_computed_degree","","",59,[[],["i32",15]]],[11,"dimension","","",59,[[["i32",15]],["usize",15]]],[11,"basis_element_to_string","","",59,[[["usize",15],["i32",15]],["string",3]]],[11,"act_on_basis","","",59,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"algebra","","",68,[[],["arc",3]]],[11,"name","","",68,[[],["string",3]]],[11,"min_degree","","",68,[[],["i32",15]]],[11,"max_computed_degree","","",68,[[],["i32",15]]],[11,"compute_basis","","",68,[[["i32",15]]]],[11,"dimension","","",68,[[["i32",15]],["usize",15]]],[11,"act_on_basis","","",68,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"basis_element_to_string","","",68,[[["usize",15],["i32",15]],["string",3]]],[11,"name","","",54,[[],["string",3]]],[11,"algebra","","",54,[[],["arc",3]]],[11,"min_degree","","",54,[[],["i32",15]]],[11,"max_computed_degree","","",54,[[],["i32",15]]],[11,"dimension","","",54,[[["i32",15]],["usize",15]]],[11,"basis_element_to_string","","",54,[[["usize",15],["i32",15]],["string",3]]],[11,"act_on_basis","","",54,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"name","","",49,[[],["string",3]]],[11,"algebra","","",49,[[],["arc",3]]],[11,"min_degree","","",49,[[],["i32",15]]],[11,"max_computed_degree","","",49,[[],["i32",15]]],[11,"compute_basis","","",49,[[["i32",15]]]],[11,"dimension","","",49,[[["i32",15]],["usize",15]]],[11,"basis_element_to_string","","",49,[[["usize",15],["i32",15]],["string",3]]],[11,"is_unit","","",49,[[],["bool",15]]],[11,"act_on_basis","","",49,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"borrow_output","","",49,[[],["bool",15]]],[11,"act_on_basis_borrow","","",49,[[["usize",15],["i32",15]],["fpvector",4]]],[11,"algebra","","",66,[[],["arc",3]]],[11,"name","","",66,[[],["string",3]]],[11,"min_degree","","",66,[[],["i32",15]]],[11,"compute_basis","","",66,[[["i32",15]]]],[11,"max_computed_degree","","",66,[[],["i32",15]]],[11,"dimension","","",66,[[["i32",15]],["usize",15]]],[11,"act_on_basis","","",66,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"basis_element_to_string","","",66,[[["usize",15],["i32",15]],["string",3]]],[11,"algebra","","",67,[[],["arc",3]]],[11,"name","","",67,[[],["string",3]]],[11,"min_degree","","",67,[[],["i32",15]]],[11,"max_computed_degree","","",67,[[],["i32",15]]],[11,"compute_basis","","",67,[[["i32",15]]]],[11,"dimension","","",67,[[["i32",15]],["usize",15]]],[11,"act_on_basis","","",67,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"act","","",67,[[["u32",15],["usize",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"basis_element_to_string","","",67,[[["usize",15],["i32",15]],["string",3]]],[11,"algebra","","",65,[[],["arc",3]]],[11,"name","","",65,[[],["string",3]]],[11,"min_degree","","",65,[[],["i32",15]]],[11,"compute_basis","","",65,[[["i32",15]]]],[11,"max_computed_degree","","",65,[[],["i32",15]]],[11,"dimension","","",65,[[["i32",15]],["usize",15]]],[11,"act_on_basis","","",65,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"basis_element_to_string","","",65,[[["usize",15],["i32",15]],["string",3]]],[11,"source","ext::module::homomorphism","",43,[[],["arc",3]]],[11,"target","","",43,[[],["arc",3]]],[11,"degree_shift","","",43,[[],["i32",15]]],[11,"apply_to_basis_element","","",43,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"quasi_inverse","","",43,[[["i32",15]],["quasiinverse",3]]],[11,"kernel","","",43,[[["i32",15]],["subspace",3]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",43,[[["i32",15]]]],[11,"source","","",44,[[],["arc",3]]],[11,"target","","",44,[[],["arc",3]]],[11,"degree_shift","","",44,[[],["i32",15]]],[11,"min_degree","","",44,[[],["i32",15]]],[11,"apply_to_basis_element","","",44,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",44,[[["i32",15]]]],[11,"quasi_inverse","","",44,[[["i32",15]],["quasiinverse",3]]],[11,"kernel","","",44,[[["i32",15]],["subspace",3]]],[11,"source","","",39,[[],["arc",3]]],[11,"target","","",39,[[],["arc",3]]],[11,"degree_shift","","",39,[[],["i32",15]]],[11,"apply_to_basis_element","","",39,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"quasi_inverse","","",39,[[["i32",15]],["quasiinverse",3]]],[11,"kernel","","",39,[[["i32",15]],["subspace",3]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",39,[[["i32",15]]]],[11,"source","","",42,[[],["arc",3]]],[11,"target","","",42,[[],["arc",3]]],[11,"degree_shift","","",42,[[],["i32",15]]],[11,"apply_to_basis_element","","",42,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"quasi_inverse","","",42,[[["i32",15]],["quasiinverse",3]]],[11,"kernel","","",42,[[["i32",15]],["subspace",3]]],[11,"get_matrix","","",42,[[["matrixslicemut",3],["i32",15]]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",42,[[["i32",15]]]],[11,"source","","",47,[[],["arc",3]]],[11,"target","","",47,[[],["arc",3]]],[11,"degree_shift","","",47,[[],["i32",15]]],[11,"apply_to_basis_element","","",47,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"kernel","","",47,[[["i32",15]],["subspace",3]]],[11,"quasi_inverse","","",47,[[["i32",15]],["quasiinverse",3]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",47,[[["i32",15]]]],[11,"source","","",48,[[],["arc",3]]],[11,"target","","",48,[[],["arc",3]]],[11,"degree_shift","","",48,[[],["i32",15]]],[11,"apply_to_basis_element","","",48,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"kernel","","",48,[[["i32",15]],["subspace",3]]],[11,"quasi_inverse","","",48,[[["i32",15]],["quasiinverse",3]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",48,[[["i32",15]]]],[11,"source","","",45,[[],["arc",3]]],[11,"target","","",45,[[],["arc",3]]],[11,"degree_shift","","",45,[[],["i32",15]]],[11,"apply_to_basis_element","","",45,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"kernel","","",45,[[["i32",15]],["subspace",3]]],[11,"quasi_inverse","","",45,[[["i32",15]],["quasiinverse",3]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",45,[[["i32",15]]]],[11,"source","","",38,[[],["arc",3]]],[11,"target","","",38,[[],["arc",3]]],[11,"degree_shift","","",38,[[],["i32",15]]],[11,"apply_to_basis_element","","",38,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"quasi_inverse","","",38,[[["i32",15]],["quasiinverse",3]]],[11,"kernel","","",38,[[["i32",15]],["subspace",3]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",38,[[["i32",15]]]],[11,"source","","",40,[[],["arc",3]]],[11,"target","","",40,[[],["arc",3]]],[11,"degree_shift","","",40,[[],["i32",15]]],[11,"apply_to_basis_element","","",40,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"quasi_inverse","","",40,[[["i32",15]],["quasiinverse",3]]],[11,"kernel","","",40,[[["i32",15]],["subspace",3]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",40,[[["i32",15]]]],[11,"source","","",46,[[],["arc",3]]],[11,"target","","",46,[[],["arc",3]]],[11,"degree_shift","","",46,[[],["i32",15]]],[11,"apply_to_basis_element","","",46,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"kernel","","",46,[[["i32",15]],["subspace",3]]],[11,"quasi_inverse","","",46,[[["i32",15]],["quasiinverse",3]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",46,[[["i32",15]]]],[11,"zero_module","ext::module","",50,[[["steenrodalgebra",4],["i32",15],["arc",3]],["finitemodule",4]]],[11,"zero_module","","",67,[[["i32",15],["arc",3]],["tensormodule",3]]],[11,"zero_module","","",51,[[["i32",15],["arc",3]],["finitelypresentedmodule",3]]],[11,"zero_module","","",66,[[["arc",3],["i32",15]],["summodule",3]]],[11,"zero_module","","",54,[[["i32",15],["arc",3]],["realprojectivespace",3]]],[11,"zero_module","","",49,[[["i32",15],["arc",3]],["finitedimensionalmodule",3]]],[11,"next","ext::combinatorics","",24,[[],["option",4]]],[11,"load","ext::module::homomorphism","",42,[[],[["freemodulehomomorphism",3],["error",3],["result",4]]]],[11,"load","ext::module","",52,[[],[["result",4],["freemodule",3],["error",3]]]],[11,"load","","",59,[[],[["freeunstablemodule",3],["error",3],["result",4]]]],[11,"eq","","",49,[[["finitedimensionalmodule",3]],["bool",15]]],[11,"eq","","",51,[[["finitelypresentedmodule",3]],["bool",15]]],[11,"eq","","",54,[[["realprojectivespace",3]],["bool",15]]],[11,"eq","","",50,[[["finitemodule",4]],["bool",15]]],[11,"ne","","",50,[[["finitemodule",4]],["bool",15]]],[11,"zero_homomorphism","ext::module::homomorphism","",39,[[["arc",3],["finitemodule",4],["i32",15],["arc",3]],["finitemodulehomomorphism",3]]],[11,"zero_homomorphism","","",38,[[["arc",3],["arc",3],["i32",15]],["boundedmodulehomomorphism",3]]],[11,"zero_homomorphism","","",40,[[["arc",3],["arc",3],["i32",15]],["fpmodulehomomorphism",3]]],[11,"zero_homomorphism","","",43,[[["arc",3],["arc",3],["i32",15]],["genericzerohomomorphism",3]]],[11,"algebra","ext::chain_complex::finite_chain_complex","",0,[[],["arc",3]]],[11,"min_degree","","",0,[[],["i32",15]]],[11,"zero_module","","",0,[[],["arc",3]]],[11,"module","","",0,[[["u32",15]],["arc",3]]],[11,"differential","","",0,[[["u32",15]],["arc",3]]],[11,"compute_through_bidegree","","",0,[[["u32",15],["i32",15]]]],[11,"has_computed_bidegree","","",0,[[["u32",15],["i32",15]],["bool",15]]],[11,"set_homology_basis","","",0,[[["u32",15],["usize",15],["i32",15],["vec",3]]]],[11,"homology_basis","","",0,[[["u32",15],["i32",15]],["vec",3]]],[11,"max_homology_degree","","",0,[[["u32",15]],["i32",15]]],[11,"algebra","","",1,[[],["arc",3]]],[11,"min_degree","","",1,[[],["i32",15]]],[11,"has_computed_bidegree","","",1,[[["u32",15],["i32",15]],["bool",15]]],[11,"zero_module","","",1,[[],["arc",3]]],[11,"module","","",1,[[["u32",15]],["arc",3]]],[11,"differential","","",1,[[["u32",15]],["arc",3]]],[11,"compute_through_bidegree","","",1,[[["u32",15],["i32",15]]]],[11,"set_homology_basis","","",1,[[["u32",15],["usize",15],["i32",15],["vec",3]]]],[11,"homology_basis","","",1,[[["u32",15],["i32",15]],["vec",3]]],[11,"max_homology_degree","","",1,[[["u32",15]],["i32",15]]],[11,"algebra","ext::chain_complex::tensor_product_chain_complex","",4,[[],["arc",3]]],[11,"min_degree","","",4,[[],["i32",15]]],[11,"zero_module","","",4,[[],["arc",3]]],[11,"has_computed_bidegree","","",4,[[["u32",15],["i32",15]],["bool",15]]],[11,"module","","",4,[[["u32",15]],["arc",3]]],[11,"differential","","",4,[[["u32",15]],["arc",3]]],[11,"compute_through_bidegree","","",4,[[["u32",15],["i32",15]]]],[11,"set_homology_basis","","",4,[[["u32",15],["usize",15],["i32",15],["vec",3]]]],[11,"homology_basis","","",4,[[["u32",15],["i32",15]],["vec",3]]],[11,"max_homology_degree","","",4,[[["u32",15]],["i32",15]]],[11,"algebra","ext::resolution","",14,[[],["arc",3]]],[11,"module","","",14,[[["u32",15]],["arc",3]]],[11,"zero_module","","",14,[[],["arc",3]]],[11,"min_degree","","",14,[[],["i32",15]]],[11,"has_computed_bidegree","","",14,[[["u32",15],["i32",15]],["bool",15]]],[11,"set_homology_basis","","",14,[[["u32",15],["usize",15],["i32",15],["vec",3]]]],[11,"homology_basis","","",14,[[["u32",15],["i32",15]],["vec",3]]],[11,"homology_dimension","","",14,[[["u32",15],["i32",15]],["usize",15]]],[11,"max_homology_degree","","",14,[[["u32",15]],["i32",15]]],[11,"differential","","",14,[[["u32",15]],["arc",3]]],[11,"compute_through_bidegree","","",14,[[["u32",15],["i32",15]]]],[11,"target","ext::chain_complex::finite_chain_complex","",1,[[],["arc",3]]],[11,"chain_map","","This currently crashes if <code>s</code> is greater than the s degree …",1,[[["u32",15]],["arc",3]]],[11,"target","ext::chain_complex::tensor_product_chain_complex","",4,[[],["arc",3]]],[11,"chain_map","","",4,[[["u32",15]],["arc",3]]],[11,"target","ext::resolution","",14,[[],["arc",3]]],[11,"chain_map","","",14,[[["u32",15]],["arc",3]]],[11,"max_s","ext::chain_complex::finite_chain_complex","",0,[[],["u32",15]]],[11,"max_s","","",1,[[],["u32",15]]],[11,"unit_chain_complex","ext","",70,[[["arc",3]]]],[11,"from","ext::chain_complex::finite_chain_complex","",0,[[["finiteaugmentedchaincomplex",3]],["finitechaincomplex",3]]],[11,"clone","ext::resolution","",15,[[],["cocycle",3]]],[11,"fmt","ext::utils","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"description","","",20,[[],["str",15]]],[11,"source","ext::chain_complex::hom_complex","",3,[[],["arc",3]]],[11,"target","","",3,[[],["arc",3]]],[11,"degree_shift","","",3,[[],["i32",15]]],[11,"apply_to_basis_element","","At the moment, this is off by a sign. However, we only …",3,[[["slicemut",4],["u32",15],["usize",15],["i32",15]]]],[11,"kernel","","",3,[[["i32",15]],["subspace",3]]],[11,"quasi_inverse","","",3,[[["i32",15]],["quasiinverse",3]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",3,[[["i32",15]]]],[11,"apply_quasi_inverse","","",3,[[["slicemut",4],["slice",4],["i32",15]]]],[11,"source","ext::chain_complex::tensor_product_chain_complex","",5,[[],["arc",3]]],[11,"target","","",5,[[],["arc",3]]],[11,"degree_shift","","",5,[[],["i32",15]]],[11,"apply_to_basis_element","","At the moment, this is off by a sign. However, we only …",5,[[["slicemut",4],["u32",15],["usize",15],["i32",15]]]],[11,"kernel","","",5,[[["i32",15]],["subspace",3]]],[11,"quasi_inverse","","",5,[[["i32",15]],["quasiinverse",3]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",5,[[["i32",15]]]],[11,"apply_quasi_inverse","","",5,[[["slicemut",4],["slice",4],["i32",15]]]],[11,"load","ext::resolution","",14,[[],["result",6]]],[11,"load","","",17,[[],["result",6]]],[11,"save","","",14,[[],["result",6]]],[11,"save","","",17,[[],["result",6]]],[11,"new","ext::combinatorics","",23,[[["validprime",3]],["truncatedpolynomialmonomialbasis",3]]],[11,"generators","","",23,[[["i32",15]],["usize",15]]],[11,"generators_up_to_degree","","",23,[[["i32",15]],["usize",15]]],[11,"gen_deg_idx_to_internal_idx","","",23,[[["usize",15],["i32",15]],["usize",15]]],[11,"internal_idx_to_gen_deg","","",23,[[["usize",15]]]],[11,"parts","","",23,[[["i32",15]],["vec",3]]],[11,"add_gens_and_calculate_parts","","",23,[[["usize",15],["i32",15]]]],[11,"new","","",24,[[["u32",15],["i32",15]],["partitioniterator",3]]],[11,"search","","",24,[[],["bool",15]]],[11,"new","ext::module::block_structure","",26,[[["bivec",3]],["blockstructure",3]]],[11,"generator_to_block","","",26,[[["usize",15],["i32",15]],["blockstart",3]]],[11,"generator_basis_elt_to_index","","",26,[[["usize",15],["i32",15]],["usize",15]]],[11,"index_to_generator_basis_elt","","",26,[[["usize",15]],["generatorbasiseltpair",3]]],[11,"add_block","","",26,[[["u32",15],["usize",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"new","ext::steenrod_evaluator","",33,[[["validprime",3]],["steenrodcalculator",3]]],[11,"compute_basis","","",33,[[["i32",15]]]],[11,"evaluate_adem_to_string","","",33,[[["str",15]],[["error",3],["result",4],["string",3]]]],[11,"evaluate_milnor_to_string","","",33,[[["str",15]],[["error",3],["result",4],["string",3]]]],[11,"evaluate_adem","","",33,[[["str",15]],[["error",3],["result",4]]]],[11,"evaluate_milnor","","",33,[[["str",15]],[["error",3],["result",4]]]],[11,"new","ext::module::homomorphism","",38,[[["arc",3],["arc",3],["i32",15]],["boundedmodulehomomorphism",3]]],[11,"from_matrices","","",38,[[["bivec",3],["i32",15],["matrix",3],["arc",3],["arc",3]],["boundedmodulehomomorphism",3]]],[11,"from","","",38,[[],["boundedmodulehomomorphism",3]]],[11,"replace_source","","This function replaces the source of the …",38,[[["arc",3]],["boundedmodulehomomorphism",3]]],[11,"replace_target","","See <code>replace_source</code>",38,[[["arc",3]],["boundedmodulehomomorphism",3]]],[11,"new","","",42,[[["arc",3],["i32",15],["arc",3],["freemodule",3]],["freemodulehomomorphism",3]]],[11,"degree_shift","","",42,[[],["i32",15]]],[11,"min_degree","","",42,[[],["i32",15]]],[11,"next_degree","","",42,[[],["i32",15]]],[11,"output","","",42,[[["usize",15],["i32",15]],["fpvector",4]]],[11,"extend_by_zero_safe","","",42,[[["i32",15]]]],[11,"extend_by_zero","","",42,[[["mutexguard",3],["i32",15]]]],[11,"add_generators_from_big_vector","","",42,[[["mutexguard",3],["slice",4],["i32",15]]]],[11,"add_generators_from_matrix_rows","","A MatrixSlice will do but there is no applicaiton of this …",42,[[["mutexguard",3],["matrixslicemut",3],["i32",15]]]],[11,"add_generators_from_rows","","",42,[[["i32",15],["mutexguard",3],["vec",3],["fpvector",4],["global",3]]]],[11,"apply_to_generator","","",42,[[["u32",15],["usize",15],["i32",15],["fpvector",4]]]],[11,"get_matrix","","",42,[[["matrixslicemut",3],["i32",15]]]],[11,"lock","","",42,[[],[["rawmutex",3],["mutexguard",3]]]],[11,"set_kernel","","",42,[[["mutexguard",3],["subspace",3],["i32",15]]]],[11,"set_quasi_inverse","","",42,[[["mutexguard",3],["quasiinverse",3],["i32",15]]]],[11,"hom_k","","Given f: M -> N, compute the dual f*: Hom(N, k) -> Hom(M, …",42,[[["i32",15]],[["global",3],["vec",3],["vec",3]]]],[11,"new","","",43,[[["arc",3],["arc",3],["i32",15]],["genericzerohomomorphism",3]]],[11,"new","","",44,[[["hommodule",3],["arc",3],["arc",3],["freemodulehomomorphism",3]],["hompullback",3]]],[11,"new","","",45,[[["quotientmodule",3],["arc",3],["arc",3],["arc",3],["quotientmodule",3]],["quotienthomomorphism",3]]],[11,"new","","",46,[[["arc",3],["arc",3],["arc",3],["quotientmodule",3]],["quotienthomomorphismsource",3]]],[11,"new","","",47,[[["arc",3],["arc",3],["truncatedmodule",3],["truncatedmodule",3],["arc",3]],["truncatedhomomorphism",3]]],[11,"new","","",48,[[["arc",3],["arc",3],["truncatedmodule",3],["arc",3]],["truncatedhomomorphismsource",3]]],[11,"test_equal","ext::module","",49,[[["finitedimensionalmodule",3]],[["result",4],["string",3]]]],[11,"new","","",49,[[["usize",15],["string",3],["arc",3],["bivec",3]],["finitedimensionalmodule",3]]],[11,"set_basis_element_name","","",49,[[["usize",15],["string",3],["i32",15]]]],[11,"add_generator","","",49,[[["string",3],["i32",15]]]],[11,"string_to_basis_element","","",49,[[["str",15]],["option",4]]],[11,"set_action_vector","","",49,[[["usize",15],["fpvector",4],["i32",15]]]],[11,"set_action","","",49,[[["usize",15],["u32",15],["i32",15],["global",3],["vec",3]]]],[11,"action","","This function will panic if you call it with input such …",49,[[["usize",15],["i32",15]],["fpvector",4]]],[11,"action_mut","","This function will panic if you call it with input such …",49,[[["usize",15],["i32",15]],["fpvector",4]]],[11,"from_json","","",49,[[["value",4],["arc",3]],[["result",4],["error",3],["finitedimensionalmodule",3]]]],[11,"to_json","","",49,[[["value",4]]]],[11,"parse_action","","",49,[[["hashmap",3],["bool",15],["str",15]],[["result",4],["error",3]]]],[11,"parse_element","","",49,[[["i32",15],["slicemut",4],["str",15]],[["result",4],["error",3]]]],[11,"check_validity","","",49,[[["i32",15]],[["modulefailedrelationerror",3],["result",4]]]],[11,"extend_actions","","",49,[[["i32",15]]]],[11,"minimal_actions_to_json","","",49,[[],["value",4]]],[11,"to_minimal_json","","",49,[[],["value",4]]],[11,"actions_to_json","","",49,[[],["value",4]]],[11,"gens_to_json","","",49,[[],["value",4]]],[11,"from_json","","",50,[[["steenrodalgebra",4],["value",4],["arc",3]],[["result",4],["error",3],["finitemodule",4]]]],[11,"to_json","","",50,[[["value",4]]]],[11,"type_","","",50,[[],["str",15]]],[11,"is_real_projective_space","","",50,[[],["bool",15]]],[11,"is_fp_module","","",50,[[],["bool",15]]],[11,"is_fd_module","","",50,[[],["bool",15]]],[11,"into_real_projective_space","","",50,[[],[["option",4],["realprojectivespace",3]]]],[11,"into_fp_module","","",50,[[],[["option",4],["finitelypresentedmodule",3]]]],[11,"into_fd_module","","",50,[[],[["finitedimensionalmodule",3],["option",4]]]],[11,"as_real_projective_space","","",50,[[],[["realprojectivespace",3],["option",4]]]],[11,"as_fp_module","","",50,[[],[["option",4],["finitelypresentedmodule",3]]]],[11,"as_fd_module","","",50,[[],[["option",4],["finitedimensionalmodule",3]]]],[11,"new","","",51,[[["string",3],["i32",15],["arc",3]],["finitelypresentedmodule",3]]],[11,"add_generators","","",51,[[["i32",15],["vec",3],["global",3],["string",3]]]],[11,"add_relations","","",51,[[["matrix",3],["i32",15]]]],[11,"from_json","","",51,[[["value",4],["arc",3]],[["finitelypresentedmodule",3],["result",4],["error",3]]]],[11,"to_json","","",51,[[["value",4]]]],[11,"relations_to_json","","",51,[[],["value",4]]],[11,"gen_idx_to_fp_idx","","",51,[[["usize",15],["i32",15]],["isize",15]]],[11,"fp_idx_to_gen_idx","","",51,[[["usize",15],["i32",15]],["usize",15]]],[11,"new","","",52,[[["string",3],["i32",15],["arc",3]],["freemodule",3]]],[11,"max_computed_degree","","",52,[[],["i32",15]]],[11,"max_table_degree","","",52,[[],["i32",15]]],[11,"number_of_gens_in_degree","","",52,[[["i32",15]],["usize",15]]],[11,"extend_table_entries","","",52,[[["i32",15]]]],[11,"add_generators","","",52,[[["usize",15],["option",4],["i32",15],["vec",3]]]],[11,"generator_offset","","Given a generator <code>(gen_deg, gen_idx)</code>, find the first …",52,[[["usize",15],["i32",15]],["usize",15]]],[11,"operation_generator_to_index","","",52,[[["usize",15],["i32",15]],["usize",15]]],[11,"operation_generator_pair_to_idx","","",52,[[["operationgeneratorpair",3]],["usize",15]]],[11,"index_to_op_gen","","",52,[[["usize",15],["i32",15]],["operationgeneratorpair",3]]],[11,"element_to_json","","",52,[[["slice",4],["i32",15]],["value",4]]],[11,"add_generators_immediate","","",52,[[["usize",15],["option",4],["i32",15],["vec",3]]]],[11,"add_num_generators","","",52,[[["usize",15],["option",4],["i32",15],["vec",3]]]],[11,"extend_by_zero","","",52,[[["i32",15]]]],[11,"get_degrees_with_gens","","",52,[[["i32",15]],[["i32",15],["global",3],["vec",3]]]],[11,"get_max_generator_degree","","",52,[[],["i32",15]]],[11,"element_to_string_pretty","","A version of element_to_string that names the generator …",52,[[["u32",15],["slice",4],["i32",15]],["string",3]]],[11,"new","","",54,[[["i32",15],["arc",3],["bool",15],["option",4]],["realprojectivespace",3]]],[11,"max_degree","","",54,[[],[["i32",15],["option",4]]]],[11,"from_json","","",54,[[["value",4],["arc",3]],[["realprojectivespace",3],["error",3],["result",4]]]],[11,"to_json","","",54,[[["value",4]]]],[11,"new","","",59,[[["string",3],["i32",15],["arc",3]],["freeunstablemodule",3]]],[11,"adem_algebra","","",59,[[],["ademalgebra",3]]],[11,"max_computed_degree","","",59,[[],["i32",15]]],[11,"max_table_degree","","",59,[[],["i32",15]]],[11,"number_of_gens_in_degree","","",59,[[["i32",15]],["usize",15]]],[11,"extend_table_entries","","",59,[[["i32",15]]]],[11,"add_generators","","",59,[[["usize",15],["option",4],["i32",15],["vec",3]]]],[11,"generator_offset","","",59,[[["usize",15],["i32",15]],["usize",15]]],[11,"operation_generator_to_index","","",59,[[["usize",15],["i32",15]],["usize",15]]],[11,"operation_generator_pair_to_idx","","",59,[[["operationgeneratorpair",3]],["usize",15]]],[11,"index_to_op_gen","","",59,[[["usize",15],["i32",15]],["operationgeneratorpair",3]]],[11,"element_to_json","","",59,[[["fpvector",4],["i32",15]],["value",4]]],[11,"add_generators_immediate","","",59,[[["usize",15],["option",4],["i32",15],["vec",3]]]],[11,"add_num_generators","","",59,[[["usize",15],["option",4],["i32",15],["vec",3]]]],[11,"extend_by_zero","","",59,[[["i32",15]]]],[11,"get_degrees_with_gens","","",59,[[["i32",15]],[["i32",15],["global",3],["vec",3]]]],[11,"get_max_generator_degree","","",59,[[],["i32",15]]],[11,"new","","",61,[[["i32",15],["arc",3]],["kfpn",3]]],[11,"new","","",62,[[["arc",3]],["bcp",3]]],[11,"new","","",63,[[["i32",15],["arc",3]],["dickson2",3]]],[11,"new","","",64,[[["arc",3],["arc",3],["freemodule",3]],["hommodule",3]]],[11,"source","","",64,[[],[["arc",3],["freemodule",3]]]],[11,"target","","",64,[[],["arc",3]]],[11,"element_to_homomorphism","","",64,[[["slice",4],["i32",15]],["freemodulehomomorphism",3]]],[11,"evaluate_basis_map_on_element","","",64,[[["u32",15],["usize",15],["slice",4],["i32",15],["slicemut",4]]]],[11,"new","","",65,[[["arc",3]],["quotientmodule",3]]],[11,"quotient","","",65,[[["slice",4],["i32",15]]]],[11,"quotient_basis_elements","","",65,[[["i32",15]]]],[11,"quotient_vectors","","",65,[[["i32",15],["vec",3],["fpvector",4],["global",3]]]],[11,"quotient_all","","",65,[[["i32",15]]]],[11,"act_on_original_basis","","",65,[[["u32",15],["usize",15],["i32",15],["slicemut",4]]]],[11,"reduce","","",65,[[["slicemut",4],["i32",15]]]],[11,"old_basis_to_new","","",65,[[["slicemut",4],["slice",4],["i32",15]]]],[11,"new","","",66,[[["arc",3],["i32",15],["global",3],["arc",3],["vec",3]],["summodule",3]]],[11,"get_module_num","","",66,[[["usize",15],["i32",15]],["usize",15]]],[11,"offset","","",66,[[["usize",15],["i32",15]],["usize",15]]],[11,"new","","",67,[[["arc",3],["arc",3]],["tensormodule",3]]],[11,"seek_module_num","","",67,[[["usize",15],["i32",15]],["i32",15]]],[11,"offset","","",67,[[["i32",15]],["usize",15]]],[11,"new","","",68,[[["arc",3],["i32",15]],["truncatedmodule",3]]]],"p":[[3,"FiniteChainComplex"],[3,"FiniteAugmentedChainComplex"],[3,"HomChainComplex"],[3,"HomChainMap"],[3,"TensorChainComplex"],[3,"TensorChainMap"],[4,"ChainComplexGrading"],[8,"FreeChainComplex"],[8,"ChainComplex"],[8,"CochainComplex"],[8,"AugmentedChainComplex"],[8,"BoundedChainComplex"],[3,"ChainMap"],[8,"UnitChainComplex"],[3,"ResolutionInner"],[3,"Cocycle"],[3,"SelfMap"],[3,"Resolution"],[3,"ResolutionHomomorphism"],[3,"Config"],[3,"ModuleFileNotFoundError"],[8,"HashMapTuple"],[3,"MilnorClass"],[3,"TruncatedPolynomialMonomialBasis"],[3,"PartitionIterator"],[3,"GeneratorBasisEltPair"],[3,"BlockStructure"],[3,"BlockStart"],[4,"AlgebraBasisElt"],[4,"AlgebraParseNode"],[4,"ModuleParseNode"],[4,"BocksteinOrSq"],[3,"ParseError"],[3,"SteenrodCalculator"],[3,"UnknownBasisElementError"],[8,"ModuleHomomorphism"],[8,"ZeroHomomorphism"],[8,"IdentityHomomorphism"],[3,"BoundedModuleHomomorphism"],[3,"FiniteModuleHomomorphism"],[3,"FPModuleHomomorphism"],[8,"FPModuleT"],[3,"FreeModuleHomomorphism"],[3,"GenericZeroHomomorphism"],[3,"HomPullback"],[3,"QuotientHomomorphism"],[3,"QuotientHomomorphismSource"],[3,"TruncatedHomomorphism"],[3,"TruncatedHomomorphismSource"],[3,"FDModule"],[4,"FiniteModule"],[3,"FPModule"],[3,"FreeModule"],[3,"OperationGeneratorPair"],[3,"RealProjectiveSpace"],[8,"ZeroModule"],[8,"BoundedModule"],[8,"Module"],[3,"ModuleFailedRelationError"],[3,"FreeUnstableModule"],[8,"PolynomialAlgebraModule"],[3,"KFpn"],[3,"BCp"],[3,"Dickson2"],[3,"HomModule"],[3,"QuotientModule"],[3,"SumModule"],[3,"TensorModule"],[3,"TruncatedModule"],[3,"DegreeError"],[6,"CCC"]]},\
"fp":{"doc":"","i":[[0,"matrix","fp","",null,null],[0,"matrix_inner","fp::matrix","",null,null],[5,"split_borrow","fp::matrix::matrix_inner","Mutably borrows x[i] and x[j]. Caller needs to ensure i …",null,[[["usize",15]]]],[3,"Matrix","","A matrix! In particular, a matrix with values in F_p. The …",null,null],[12,"p","","",0,null],[12,"columns","","",0,null],[12,"vectors","","",0,null],[12,"pivot_vec","","",0,null],[11,"new","","Produces a new matrix over F_p with the specified number …",0,[[["usize",15],["validprime",3]],["matrix",3]]],[11,"prime","","",0,[[],["validprime",3]]],[11,"rows","","Gets the number of rows in the matrix.",0,[[],["usize",15]]],[11,"columns","","Gets the number of columns in the matrix.",0,[[],["usize",15]]],[11,"initialize_pivots","","",0,[[]]],[11,"pivots","","",0,[[]]],[11,"pivots_mut","","",0,[[]]],[11,"replace_pivots","","",0,[[["isize",15],["vec",3]],[["isize",15],["vec",3]]]],[11,"take_pivots","","",0,[[],[["isize",15],["vec",3]]]],[11,"set_pivots","","",0,[[["isize",15],["vec",3]]]],[11,"from_rows","","Produces a matrix from a list of rows.",0,[[["usize",15],["vec",3],["fpvector",4],["validprime",3]]]],[11,"from_vec","","Produces a Matrix from an <code>&[Vec<u32>]</code> object. If the …",0,[[["validprime",3]],["matrix",3]]],[11,"to_vec","","",0,[[],[["vec",3],["vec",3]]]],[11,"augmented_from_vec","","Produces a padded augmented matrix from an <code>&[Vec<u32>]</code> …",0,[[["validprime",3]]]],[11,"add_identity","","",0,[[["usize",15]]]],[11,"set_to_zero","","",0,[[]]],[11,"assign","","",0,[[["matrix",3]]]],[11,"into_vec","","",0,[[],[["vec",3],["fpvector",4]]]],[11,"as_slice_mut","","",0,[[],["matrixslicemut",3]]],[11,"slice_mut","","",0,[[["usize",15]],["matrixslicemut",3]]],[11,"iter","","",0,[[],[["iter",3],["fpvector",4]]]],[11,"iter_mut","","",0,[[],[["itermut",3],["fpvector",4]]]],[11,"swap_rows","","",0,[[["usize",15]]]],[11,"row_op","","target and source must be distinct and less that …",0,[[["usize",15],["u32",15]]]],[11,"row_reduce","","Perform row reduction to reduce it to reduced row echelon …",0,[[]]],[11,"row_reduce_into_pivots","","",0,[[["vec",3]]]],[11,"row_reduce_offset_into_pivots","","",0,[[["usize",15],["vec",3]]]],[11,"find_pivots_permutation","","This is very similar to row_reduce, except we only need …",0,[[["iterator",8]],[["usize",15],["vec",3]]]],[11,"row_reduce_permutation_into_pivots","","",0,[[["vec",3]]]],[11,"find_first_row_in_block","","",0,[[["usize",15]],["usize",15]]],[11,"find_first_row_in_block_with_pivots","","",0,[[["usize",15]],["usize",15]]],[11,"compute_quasi_inverse","","Computes the quasi-inverse of a matrix given a rref of […",0,[[["usize",15]],["quasiinverse",3]]],[11,"compute_quasi_inverses","","This function computes quasi-inverses for matrices A, B …",0,[[["usize",15]]]],[11,"get_image","","",0,[[["usize",15]],["subspace",3]]],[11,"extend_to_surjection","","Given a matrix M in rref, add rows to make the matrix …",0,[[["usize",15]],[["usize",15],["vec",3]]]],[11,"extend_image_to_desired_image","","Given a matrix in rref, say [A|B|C], where B lies between …",0,[[["usize",15],["subspace",3]],[["usize",15],["vec",3]]]],[11,"extend_image","","Extends the image of a matrix to either the whole …",0,[[["usize",15],["option",4],["subspace",3]],[["usize",15],["vec",3]]]],[11,"apply","","Applies a matrix to a vector.",0,[[["u32",15],["slice",4],["slicemut",4]]]],[11,"trim","","",0,[[["usize",15]]]],[3,"AugmentedMatrix3","","This models an augmented matrix.",null,null],[12,"end","","",1,null],[12,"start","","",1,null],[12,"inner","","",1,null],[11,"new","","",1,[[["usize",15],["validprime",3]]]],[11,"segment","","",1,[[["usize",15]],["matrixslicemut",3]]],[11,"row_segment","","",1,[[["usize",15]],["slicemut",4]]],[11,"into_matrix","","",1,[[],["matrix",3]]],[3,"AugmentedMatrix2","","This models an augmented matrix.",null,null],[12,"end","","",2,null],[12,"start","","",2,null],[12,"inner","","",2,null],[11,"new","","",2,[[["usize",15],["validprime",3]]]],[11,"segment","","",2,[[["usize",15]],["matrixslicemut",3]]],[11,"row_segment","","",2,[[["usize",15]],["slicemut",4]]],[11,"into_matrix","","",2,[[],["matrix",3]]],[11,"compute_quasi_inverse","","",2,[[],["quasiinverse",3]]],[11,"compute_kernel","","",2,[[],["subspace",3]]],[11,"compute_quasi_inverses","","",1,[[["usize",15]]]],[3,"MatrixSliceMut","","",null,null],[12,"p","","",3,null],[12,"vectors","","",3,null],[12,"col_start","","",3,null],[12,"col_end","","",3,null],[11,"columns","","",3,[[],["usize",15]]],[11,"rows","","",3,[[],["usize",15]]],[11,"row_slice","","",3,[[["usize",15]],["matrixslicemut",3]]],[11,"iter","","",3,[[]]],[11,"iter_mut","","",3,[[]]],[11,"row","","",3,[[["usize",15]],["slice",4]]],[11,"row_mut","","",3,[[["usize",15]],["slicemut",4]]],[11,"row_op","","target and source must be distinct and less that …",3,[[["usize",15],["u32",15]]]],[11,"add_identity","","",3,[[["usize",15]]]],[11,"row_reduce_into_pivots","","",3,[[["vec",3]]]],[11,"compute_kernel","","Computes the kernel from an augmented matrix in rref. To …",3,[[["usize",15]],["subspace",3]]],[0,"quasi_inverse","fp::matrix","",null,null],[3,"QuasiInverse","fp::matrix::quasi_inverse","Given a matrix M, a quasi-inverse Q is a map from the …",null,null],[12,"image","","",4,null],[12,"preimage","","",4,null],[11,"prime","","",4,[[],["validprime",3]]],[11,"apply","","Apply the quasi-inverse to an input vector and add a …",4,[[["u32",15],["slice",4],["slicemut",4]]]],[0,"subquotient","fp::matrix","",null,null],[3,"Subquotient","fp::matrix::subquotient","",null,null],[12,"gens","","",5,null],[12,"quotient","","",5,null],[12,"dimension","","",5,null],[11,"new","","Create a new subquotient of an ambient space of dimension …",5,[[["usize",15],["validprime",3]]]],[11,"new_full","","Create a new subquotient of an ambient space of dimension …",5,[[["usize",15],["validprime",3]]]],[11,"reduce","","Given a vector <code>elt</code>, project <code>elt</code> to the complement and …",5,[[["slicemut",4]],[["u32",15],["vec",3]]]],[11,"set_to_zero","","",5,[[]]],[11,"zeros","","",5,[[],["subspace",3]]],[11,"gens","","",5,[[]]],[11,"quotient","","",5,[[["slice",4]]]],[11,"dimension","","",5,[[],["usize",15]]],[11,"ambient_dimension","","",5,[[],["usize",15]]],[11,"prime","","",5,[[],["validprime",3]]],[11,"is_empty","","",5,[[],["bool",15]]],[11,"clear_gens","","",5,[[]]],[11,"add_gen","","",5,[[["slice",4]]]],[11,"reduce_matrix","","",5,[[["matrix",3]],[["vec",3],["vec",3]]]],[11,"subquotient","","Given a chain of subspaces <code>subspace</code> < <code>space</code> < k^…",5,[[["option",4],["usize",15],["subspace",3]],[["usize",15],["vec",3]]]],[0,"subspace","fp::matrix","",null,null],[3,"Subspace","fp::matrix::subspace","A subspace of a vector space.",null,null],[12,"matrix","","",6,null],[11,"new","","",6,[[["usize",15],["validprime",3]]]],[11,"empty_space","","",6,[[["usize",15],["validprime",3]]]],[11,"entire_space","","",6,[[["usize",15],["validprime",3]]]],[11,"add_vector","","This adds a vector to the subspace. This function assumes …",6,[[["slice",4]]]],[11,"add_vectors","","",6,[[]]],[11,"add_basis_elements","","",6,[[]]],[11,"reduce","","Projects a vector to a complement of the subspace. The …",6,[[["slicemut",4]]]],[11,"shift_reduce","","A version of <code>reduce</code> that doesn’t require the vectors to …",6,[[["slicemut",4]]]],[11,"row_reduce","","",6,[[]]],[11,"contains","","",6,[[["slice",4]],["bool",15]]],[11,"dimension","","",6,[[],["usize",15]]],[11,"ambient_dimension","","",6,[[],["usize",15]]],[11,"basis","","Returns a basis of the subspace.",6,[[]]],[11,"set_to_zero","","Sets the subspace to be the zero subspace.",6,[[]]],[11,"set_to_entire","","Sets the subspace to be the entire subspace.",6,[[]]],[3,"AugmentedMatrix2","fp::matrix","This models an augmented matrix.",null,null],[12,"end","","",2,null],[12,"start","","",2,null],[12,"inner","","",2,null],[3,"AugmentedMatrix3","","This models an augmented matrix.",null,null],[12,"end","","",1,null],[12,"start","","",1,null],[12,"inner","","",1,null],[3,"Matrix","","A matrix! In particular, a matrix with values in F_p. The …",null,null],[12,"p","","",0,null],[12,"columns","","",0,null],[12,"vectors","","",0,null],[12,"pivot_vec","","",0,null],[3,"MatrixSliceMut","","",null,null],[12,"p","","",3,null],[12,"vectors","","",3,null],[12,"col_start","","",3,null],[12,"col_end","","",3,null],[3,"QuasiInverse","","Given a matrix M, a quasi-inverse Q is a map from the …",null,null],[12,"image","","",4,null],[12,"preimage","","",4,null],[3,"Subquotient","","",null,null],[12,"gens","","",5,null],[12,"quotient","","",5,null],[12,"dimension","","",5,null],[3,"Subspace","","A subspace of a vector space.",null,null],[12,"matrix","","",6,null],[0,"prime","fp","",null,null],[17,"NUM_PRIMES","fp::prime","",null,null],[17,"MAX_PRIME","","",null,null],[17,"NOT_A_PRIME","","",null,null],[17,"MAX_MULTINOMIAL_LEN","","",null,null],[3,"ValidPrime","","",null,null],[12,"p","","",7,null],[11,"new","","",7,[[["u32",15]]]],[11,"try_new","","",7,[[["u32",15]],["option",4]]],[11,"value","","Get the underlying prime. This is the same function as …",7,[[],["u32",15]]],[5,"is_valid_prime","","",null,[[["u32",15]],["bool",15]]],[5,"inverse","","",null,[[["u32",15],["validprime",3]],["u32",15]]],[5,"minus_one_to_the_n","","",null,[[["u32",15],["i32",15]],["u32",15]]],[5,"direct_binomial","","This uses a lookup table for n choose k when n and k are …",null,[[["usize",15],["validprime",3]],["u32",15]]],[5,"integer_power","","Computes b^e.",null,[[["u32",15]],["u32",15]]],[5,"power_mod","","Compute b^e mod p.",null,[[["u32",15]],["u32",15]]],[5,"logp","","",null,[[["u32",15]],["u32",15]]],[8,"Binomial","","A number satisfying the Binomial trait supports computing …",null,null],[10,"multinomial2","","mod 2 multinomial coefficient",8,[[]]],[10,"binomial2","","mod 2 binomial coefficient n choose k",8,[[]]],[10,"binomial4","","Binomial coefficients mod 4. We pre-compute the …",8,[[]]],[10,"binomial4_rec","","Compute binomial coefficients mod 4 using the recursion …",8,[[]]],[10,"multinomial_odd","","Computes the multinomial coefficient mod p using Lucas’ …",8,[[["validprime",3]]]],[10,"binomial_odd","","Compute odd binomial coefficients mod p, where p is odd. …",8,[[["validprime",3]]]],[10,"binomial_odd_is_zero","","Checks whether n choose k is zero mod p. Since we don’t …",8,[[["validprime",3]],["bool",15]]],[11,"multinomial","","Multinomial coefficient of the list l",8,[[["validprime",3]]]],[11,"binomial","","Binomial coefficient n choose k.",8,[[["validprime",3]]]],[3,"BitflagIterator","","",null,null],[12,"remaining","","",9,null],[12,"flag","","",9,null],[11,"new","","",9,[[["u64",15]]]],[11,"new_fixed_length","","",9,[[["usize",15],["u64",15]]]],[11,"set_bit_iterator","","",9,[[["u64",15]]]],[17,"PRIMES","","",null,null],[17,"PRIME_TO_INDEX_MAP","","",null,null],[17,"INVERSE_TABLE","","",null,null],[17,"BINOMIAL4_TABLE_SIZE","","",null,null],[17,"BINOMIAL4_TABLE","","",null,null],[7,"BINOMIAL_TABLE","","",null,null],[0,"vector","fp","This module is provides wrappers around the contents of […",null,null],[4,"FpVector","fp::vector","",null,null],[13,"_2","","",10,null],[13,"_3","","",10,null],[13,"_5","","",10,null],[13,"_7","","",10,null],[4,"Slice","","",null,null],[13,"_2","","",11,null],[13,"_3","","",11,null],[13,"_5","","",11,null],[13,"_7","","",11,null],[4,"SliceMut","","",null,null],[13,"_2","","",12,null],[13,"_3","","",12,null],[13,"_5","","",12,null],[13,"_7","","",12,null],[4,"FpVectorNonZeroIterator","","",null,null],[13,"_2","","",13,null],[13,"_3","","",13,null],[13,"_5","","",13,null],[13,"_7","","",13,null],[11,"new","","",10,[[["usize",15],["validprime",3]],["fpvector",4]]],[11,"from_slice","","",10,[[["validprime",3]]]],[11,"padded_dimension","","",10,[[["usize",15],["validprime",3]],["usize",15]]],[11,"prime","","",10,[[],["validprime",3]]],[11,"dimension","","",10,[[],["usize",15]]],[11,"scale","","",10,[[["u32",15]]]],[11,"set_to_zero","","",10,[[]]],[11,"entry","","",10,[[["usize",15]],["u32",15]]],[11,"set_entry","","",10,[[["usize",15],["u32",15]]]],[11,"assign","","",10,[[]]],[11,"add","","",10,[[["u32",15]]]],[11,"slice","","",10,[[["usize",15]],["slice",4]]],[11,"as_slice","","",10,[[],["slice",4]]],[11,"slice_mut","","",10,[[["usize",15]],["slicemut",4]]],[11,"as_slice_mut","","",10,[[],["slicemut",4]]],[11,"is_zero","","",10,[[],["bool",15]]],[11,"iter","","",10,[[],["fpvectoriterator",3]]],[11,"iter_nonzero","","",10,[[],["fpvectornonzeroiterator",4]]],[11,"extend_dimension","","",10,[[["usize",15]]]],[11,"set_scratch_vector_size","","",10,[[["usize",15]]]],[11,"add_basis_element","","",10,[[["usize",15],["u32",15]]]],[11,"copy_from_slice","","",10,[[]]],[11,"trim_start","","",10,[[["usize",15]]]],[11,"add_truncate","","",10,[[["u32",15]],["option",4]]],[11,"sign_rule","","",10,[[],["bool",15]]],[11,"add_carry","","",10,[[["u32",15]],["bool",15]]],[11,"limbs","","",10,[[]]],[11,"limbs_mut","","",10,[[]]],[11,"prime","","",11,[[],["validprime",3]]],[11,"dimension","","",11,[[],["usize",15]]],[11,"entry","","",11,[[["usize",15]],["u32",15]]],[11,"iter","","",11,[[],["fpvectoriterator",3]]],[11,"iter_nonzero","","",11,[[],["fpvectornonzeroiterator",4]]],[11,"is_zero","","",11,[[],["bool",15]]],[11,"slice","","",11,[[["usize",15]],["slice",4]]],[11,"to_owned","","",11,[[],["fpvector",4]]],[11,"prime","","",12,[[],["validprime",3]]],[11,"scale","","",12,[[["u32",15]]]],[11,"set_to_zero","","",12,[[]]],[11,"add","","",12,[[["slice",4],["u32",15]]]],[11,"assign","","",12,[[["slice",4]]]],[11,"set_entry","","",12,[[["usize",15],["u32",15]]]],[11,"as_slice","","",12,[[],["slice",4]]],[11,"slice_mut","","",12,[[["usize",15]],["slicemut",4]]],[11,"add_basis_element","","",12,[[["usize",15],["u32",15]]]],[11,"copy","","",12,[[],["slicemut",4]]],[11,"add_tensor","","",12,[[["usize",15],["u32",15],["slice",4]]]],[11,"next","","",13,[[],["option",4]]],[0,"vector_2","fp","This module replaces <code>vector</code> when <code>odd-primes</code> is disabled. …",null,null],[6,"FpVector","fp::vector_2","",null,null],[6,"Slice","","",null,null],[6,"SliceMut","","",null,null],[6,"FpVectorNonZeroIterator","","",null,null],[11,"new","","",14,[[["usize",15],["validprime",3]],["fpvector",6]]],[11,"from_slice","","",14,[[["validprime",3]]]],[11,"padded_dimension","","",14,[[["usize",15],["validprime",3]],["usize",15]]],[0,"vector_inner","fp","",null,null],[0,"limb","fp::vector_inner","",null,null],[5,"add","fp::vector_inner::limb","",null,[[["u32",15],["u64",15]],["u64",15]]],[5,"reduce","","Contbuted by Robert Burklund",null,[[["u64",15]],["u64",15]]],[5,"is_reduced","","",null,[[["u64",15]],["bool",15]]],[5,"pack","","Given an interator of u32’s, pack all of them into a …",null,[[["iterator",8]],["u64",15]]],[5,"unpack","","Given a limb, return the first <code>dim</code> entries. It is assumed …",null,[[["usize",15],["u64",15]]]],[5,"number","","",null,[[["usize",15]],["usize",15]]],[5,"range","","",null,[[["usize",15]]]],[5,"sign_rule","","",null,[[["u64",15]],["u32",15]]],[5,"truncate","","Returns: either Some(sum) if no carries happen in the …",null,[[["u64",15]],[["option",4],["u64",15]]]],[6,"Limb","fp::vector_inner","",null,null],[17,"BYTES_PER_LIMB","","",null,null],[17,"BITS_PER_LIMB","","",null,null],[17,"MAX_DIMENSION","","",null,null],[17,"BIT_LENGTHS","","",null,null],[5,"bit_length","","",null,[[["validprime",3]],["usize",15]]],[17,"BITMASKS","","",null,null],[5,"bitmask","","TODO: Would it be simpler to just compute this at “…",null,[[["validprime",3]],["u64",15]]],[17,"ENTRIES_PER_LIMB","","",null,null],[5,"entries_per_limb","","",null,[[["validprime",3]],["usize",15]]],[3,"LimbBitIndexPair","","",null,null],[12,"limb","","",15,null],[12,"bit_index","","",15,null],[7,"LIMB_BIT_INDEX_TABLE","","This table tells us which limb and which bitfield of that …",null,null],[7,"LIMB_BIT_INDEX_ONCE_TABLE","","",null,null],[5,"initialize_limb_bit_index_table","","",null,[[["validprime",3]]]],[5,"limb_bit_index_pair","","",null,[[["usize",15],["validprime",3]],["limbbitindexpair",3]]],[3,"FpVectorP","","An <code>FpVectorP</code> is a vector over $\\\\mathbb{F}_p$ for a fixed …",null,null],[12,"dimension","","",16,null],[12,"limbs","","",16,null],[3,"SliceP","","A SliceP is a slice of an FpVectorP. This immutably …",null,null],[12,"limbs","","",17,null],[12,"start","","",17,null],[12,"end","","",17,null],[3,"SliceMutP","","A <code>SliceMutP</code> is a mutable slice of an <code>FpVectorP</code>. This …",null,null],[12,"limbs","","",18,null],[12,"start","","",18,null],[12,"end","","",18,null],[11,"new_","","",16,[[["usize",15]]]],[11,"dimension","","",16,[[],["usize",15]]],[11,"prime","","",16,[[],["validprime",3]]],[11,"slice","","",16,[[["usize",15]],["slicep",3]]],[11,"slice_mut","","",16,[[["usize",15]],["slicemutp",3]]],[11,"as_slice","","",16,[[],["slicep",3]]],[11,"as_slice_mut","","",16,[[],["slicemutp",3]]],[11,"add_basis_element","","",16,[[["usize",15],["u32",15]]]],[11,"entry","","",16,[[["usize",15]],["u32",15]]],[11,"set_entry","","",16,[[["usize",15],["u32",15]]]],[11,"iter","","",16,[[],["fpvectoriterator",3]]],[11,"iter_nonzero","","",16,[[],["fpvectornonzeroiteratorp",3]]],[11,"set_to_zero","","",16,[[]]],[11,"scale","","",16,[[["u32",15]]]],[11,"add","","",16,[[["u32",15],["fpvectorp",3]]]],[11,"assign","","",16,[[]]],[11,"is_zero","","",16,[[],["bool",15]]],[11,"reduce_limbs","","",16,[[]]],[11,"limbs","","",16,[[]]],[11,"limbs_mut","","",16,[[]]],[11,"extend_dimension","","This function ensures the dimension of the vector is at …",16,[[["usize",15]]]],[11,"set_scratch_vector_size","","This clears the vector and sets the dimension to dim. …",16,[[["usize",15]]]],[11,"copy_from_slice","","This replaces the contents of the vector with the …",16,[[]]],[11,"trim_start","","Permanently remove the first <code>n</code> elements in the vector. <code>n</code> …",16,[[["usize",15]]]],[11,"sign_rule","","",16,[[],["bool",15]]],[11,"add_truncate","","",16,[[["u32",15]],["option",4]]],[11,"add_carry_limb","","",16,[[["usize",15],["u32",15],["u64",15]],["bool",15]]],[11,"add_carry","","",16,[[["u32",15]],["bool",15]]],[11,"slice_mut","","",18,[[["usize",15]],["slicemutp",3]]],[11,"as_slice","","",18,[[],["slicep",3]]],[11,"copy","","Generates a version of itself with a shorter lifetime",18,[[],["slicemutp",3]]],[11,"slice","","",17,[[["usize",15]],["slicep",3]]],[11,"to_owned","","Converts a slice to an owned FpVectorP. This assumes the …",17,[[],["fpvectorp",3]]],[11,"prime","","",17,[[],["validprime",3]]],[11,"dimension","","",17,[[],["usize",15]]],[11,"entry","","",17,[[["usize",15]],["u32",15]]],[11,"iter","","TODO: implement prime 2 version",17,[[],["fpvectoriterator",3]]],[11,"iter_nonzero","","",17,[[],["fpvectornonzeroiteratorp",3]]],[11,"is_zero","","",17,[[],["bool",15]]],[11,"offset","","",17,[[],["usize",15]]],[11,"limb_range","","",17,[[]]],[11,"min_limb_mask","","",17,[[],["u64",15]]],[11,"max_limb_mask","","",17,[[],["u64",15]]],[11,"limb_masks","","",17,[[]]],[11,"prime","","",18,[[],["validprime",3]]],[11,"add_basis_element","","",18,[[["usize",15],["u32",15]]]],[11,"set_entry","","",18,[[["usize",15],["u32",15]]]],[11,"reduce_limbs","","",18,[[]]],[11,"scale","","",18,[[["u32",15]]]],[11,"set_to_zero","","",18,[[]]],[11,"add","","",18,[[["u32",15],["slicep",3]]]],[11,"add_tensor","","<code>coeff</code> need not be reduced mod p. Adds v otimes w to self.",18,[[["usize",15],["u32",15],["slicep",3]]]],[11,"assign","","TODO: improve efficiency",18,[[["slicep",3]]]],[11,"add_shift_none","","Adds <code>c</code> * <code>other</code> to <code>self</code>. <code>other</code> must have the same length, …",18,[[["u32",15],["slicep",3]]]],[11,"add_shift_left","","",18,[[["u32",15],["slicep",3]]]],[11,"add_shift_right","","",18,[[["u32",15],["slicep",3]]]],[3,"AddShiftNoneData","","",null,null],[12,"min_source_limb","","",19,null],[12,"min_target_limb","","",19,null],[12,"number_of_limbs","","",19,null],[11,"new","","",19,[[["slicep",3]]]],[11,"mask_first_limb","","",19,[[["usize",15],["slicep",3]],["u64",15]]],[11,"mask_middle_limb","","",19,[[["usize",15],["slicep",3]],["u64",15]]],[11,"mask_last_limb","","",19,[[["usize",15],["slicep",3]],["u64",15]]],[3,"AddShiftLeftData","","",null,null],[12,"offset_shift","","",20,null],[12,"tail_shift","","",20,null],[12,"zero_bits","","",20,null],[12,"min_source_limb","","",20,null],[12,"min_target_limb","","",20,null],[12,"number_of_source_limbs","","",20,null],[12,"number_of_target_limbs","","",20,null],[12,"min_mask","","",20,null],[12,"max_mask","","",20,null],[11,"new","","",20,[[["slicep",3]]]],[11,"mask_first_limb","","",20,[[["usize",15],["slicep",3]],["u64",15]]],[11,"mask_middle_limb_a","","",20,[[["usize",15],["slicep",3]],["u64",15]]],[11,"mask_middle_limb_b","","",20,[[["usize",15],["slicep",3]],["u64",15]]],[11,"mask_last_limb_a","","",20,[[["usize",15],["slicep",3]],["u64",15]]],[11,"mask_last_limb_b","","",20,[[["usize",15],["slicep",3]],["u64",15]]],[3,"AddShiftRightData","","",null,null],[12,"offset_shift","","",21,null],[12,"tail_shift","","",21,null],[12,"zero_bits","","",21,null],[12,"min_source_limb","","",21,null],[12,"min_target_limb","","",21,null],[12,"number_of_source_limbs","","",21,null],[12,"number_of_target_limbs","","",21,null],[12,"min_mask","","",21,null],[12,"max_mask","","",21,null],[11,"new","","",21,[[["slicep",3]]]],[11,"mask_first_limb_a","","",21,[[["usize",15],["slicep",3]],["u64",15]]],[11,"mask_first_limb_b","","",21,[[["usize",15],["slicep",3]],["u64",15]]],[11,"mask_middle_limb_a","","",21,[[["usize",15],["slicep",3]],["u64",15]]],[11,"mask_middle_limb_b","","",21,[[["usize",15],["slicep",3]],["u64",15]]],[11,"mask_last_limb_a","","",21,[[["usize",15],["slicep",3]],["u64",15]]],[11,"mask_last_limb_b","","",21,[[["usize",15],["slicep",3]],["u64",15]]],[3,"FpVectorIterator","","",null,null],[12,"limbs","","",22,null],[12,"bit_length","","",22,null],[12,"bit_mask","","",22,null],[12,"entries_per_limb_m_1","","",22,null],[12,"limb_index","","",22,null],[12,"entries_left","","",22,null],[12,"cur_limb","","",22,null],[12,"counter","","",22,null],[11,"new","","",22,[[["slicep",3]]]],[11,"skip_n","","",22,[[["usize",15]]]],[3,"FpVectorNonZeroIteratorP","","Iterator over non-zero entries of an FpVector. This is …",null,null],[12,"limbs","","",23,null],[12,"limb_index","","",23,null],[12,"cur_limb_entries_left","","",23,null],[12,"cur_limb","","",23,null],[12,"idx","","",23,null],[12,"dim","","",23,null],[11,"new","","",23,[[["slicep",3]]]],[14,"const_for","fp","",null,null],[11,"from","fp::matrix::matrix_inner","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","fp::matrix::quasi_inverse","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","fp::matrix::subquotient","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","fp::matrix::subspace","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","fp::prime","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","fp::vector","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"into_iter","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","fp::vector_inner","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"into_iter","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"into_iter","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",17,[[["fpvectorp",3]]]],[11,"from","","",18,[[["fpvectorp",3]]]],[11,"from","","",16,[[]]],[11,"len","","",22,[[],["usize",15]]],[11,"next","fp::prime","",9,[[],["option",4]]],[11,"next","fp::vector","",13,[[],["option",4]]],[11,"next","fp::vector_inner","",22,[[],["option",4]]],[11,"next","","",23,[[],["option",4]]],[11,"clone","fp::matrix::matrix_inner","",0,[[],["matrix",3]]],[11,"clone","","",1,[[],["augmentedmatrix3",3]]],[11,"clone","","",2,[[],["augmentedmatrix2",3]]],[11,"clone","fp::matrix::quasi_inverse","",4,[[],["quasiinverse",3]]],[11,"clone","fp::matrix::subquotient","",5,[[],["subquotient",3]]],[11,"clone","fp::matrix::subspace","",6,[[],["subspace",3]]],[11,"clone","fp::prime","",7,[[],["validprime",3]]],[11,"clone","fp::vector","",10,[[],["fpvector",4]]],[11,"clone","","",11,[[],["slice",4]]],[11,"clone","fp::vector_inner","",15,[[],["limbbitindexpair",3]]],[11,"clone","","",16,[[],["fpvectorp",3]]],[11,"clone","","",17,[[],["slicep",3]]],[11,"eq","fp::matrix::matrix_inner","",0,[[],["bool",15]]],[11,"eq","fp::matrix::quasi_inverse","",4,[[["quasiinverse",3]],["bool",15]]],[11,"ne","","",4,[[["quasiinverse",3]],["bool",15]]],[11,"eq","fp::matrix::subspace","",6,[[["subspace",3]],["bool",15]]],[11,"ne","","",6,[[["subspace",3]],["bool",15]]],[11,"eq","fp::prime","",7,[[["validprime",3]],["bool",15]]],[11,"ne","","",7,[[["validprime",3]],["bool",15]]],[11,"eq","fp::vector","",10,[[["fpvector",4]],["bool",15]]],[11,"ne","","",10,[[["fpvector",4]],["bool",15]]],[11,"eq","fp::vector_inner","",16,[[["fpvectorp",3]],["bool",15]]],[11,"ne","","",16,[[["fpvectorp",3]],["bool",15]]],[11,"deref","fp::matrix::matrix_inner","",0,[[]]],[11,"deref","","",1,[[],["matrix",3]]],[11,"deref","","",2,[[],["matrix",3]]],[11,"deref","fp::matrix::subspace","",6,[[],["matrix",3]]],[11,"deref","fp::prime","",7,[[]]],[11,"deref_mut","fp::matrix::matrix_inner","",0,[[]]],[11,"deref_mut","","",1,[[],["matrix",3]]],[11,"deref_mut","","",2,[[],["matrix",3]]],[11,"deref_mut","fp::matrix::subspace","",6,[[],["matrix",3]]],[11,"fmt","fp::matrix::matrix_inner","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","fp::matrix::quasi_inverse","",4,[[["formatter",3]],["result",6]]],[11,"fmt","fp::matrix::subspace","",6,[[["formatter",3]],["result",6]]],[11,"fmt","fp::prime","",7,[[["formatter",3]],["result",6]]],[11,"fmt","fp::vector","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","fp::vector_inner","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","fp::matrix::matrix_inner","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","fp::matrix::subquotient","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","fp::matrix::subspace","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","fp::prime","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","fp::vector","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","fp","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"add_assign","fp::matrix::matrix_inner","",0,[[["matrix",3]]]],[11,"add_assign","fp::vector","",10,[[["fpvector",4]]]],[11,"add_assign","fp","",14,[[["fpvector",6]]]],[11,"mul_assign","fp::matrix::matrix_inner","",0,[[["u32",15]]]],[11,"index","","",0,[[["usize",15]]]],[11,"index_mut","","",0,[[["usize",15]]]],[11,"hash","fp::vector","",10,[[]]],[11,"hash","fp::vector_inner","",16,[[]]],[11,"load","fp::matrix::matrix_inner","",0,[[["validprime",3]],["result",6]]],[11,"load","fp::matrix::subspace","",6,[[["validprime",3]],["result",6]]],[11,"load","fp::matrix::quasi_inverse","",4,[[["validprime",3]],["result",6]]],[11,"load","fp::vector","",10,[[["validprime",3]],["result",6]]],[11,"load","fp","",14,[[["validprime",3]],["result",6]]],[11,"save","fp::matrix::matrix_inner","",0,[[],["result",6]]],[11,"save","fp::matrix::subspace","",6,[[],["result",6]]],[11,"save","fp::matrix::quasi_inverse","",4,[[],["result",6]]],[11,"save","fp::vector","",10,[[],["result",6]]],[11,"save","fp","",14,[[],["result",6]]],[11,"serialize","fp::prime","",7,[[],["result",4]]],[11,"serialize","fp::vector","",10,[[],["result",4]]],[11,"serialize","fp","",14,[[],["result",4]]],[11,"deserialize","fp::prime","",7,[[],["result",4]]],[11,"deserialize","fp::vector","",10,[[],["result",4]]],[11,"deserialize","fp","",14,[[],["result",4]]],[11,"new","fp::vector_inner","",16,[[["usize",15],["validprime",3]],["fpvector",6]]],[11,"from_slice","","",16,[[["validprime",3]]]],[11,"padded_dimension","","",16,[[["usize",15],["validprime",3]],["usize",15]]]],"p":[[3,"Matrix"],[3,"AugmentedMatrix3"],[3,"AugmentedMatrix2"],[3,"MatrixSliceMut"],[3,"QuasiInverse"],[3,"Subquotient"],[3,"Subspace"],[3,"ValidPrime"],[8,"Binomial"],[3,"BitflagIterator"],[4,"FpVector"],[4,"Slice"],[4,"SliceMut"],[4,"FpVectorNonZeroIterator"],[6,"FpVector"],[3,"LimbBitIndexPair"],[3,"FpVectorP"],[3,"SliceP"],[3,"SliceMutP"],[3,"AddShiftNoneData"],[3,"AddShiftLeftData"],[3,"AddShiftRightData"],[3,"FpVectorIterator"],[3,"FpVectorNonZeroIteratorP"],[6,"Slice"]]},\
"once":{"doc":"","i":[[17,"USIZE_LEN","once","",null,null],[3,"OnceVec","","",null,null],[12,"data","","",0,null],[11,"into_vec","","",0,[[],["vec",3]]],[11,"from_vec","","",0,[[["vec",3]]]],[11,"new","","",0,[[]]],[11,"with_capacity","","",0,[[["usize",15]]]],[11,"len","","",0,[[],["usize",15]]],[11,"is_empty","","",0,[[],["bool",15]]],[11,"get","","",0,[[["usize",15]],["option",4]]],[11,"last","","",0,[[],["option",4]]],[11,"reserve","","",0,[[["usize",15]]]],[11,"reserve_exact","","",0,[[["usize",15]]]],[11,"push","","",0,[[]]],[11,"iter","","",0,[[]]],[3,"OnceBiVec","","",null,null],[12,"data","","",1,null],[12,"min_degree","","",1,null],[11,"new","","",1,[[["i32",15]]]],[11,"from_vec","","",1,[[["vec",3],["i32",15]]]],[11,"from_bivec","","",1,[[["bivec",3]]]],[11,"with_capacity","","",1,[[["i32",15]]]],[11,"min_degree","","",1,[[],["i32",15]]],[11,"max_degree","","This returns the largest degree in the bivector. This is …",1,[[],["i32",15]]],[11,"len","","This returns the “length” of the bivector, defined to …",1,[[],["i32",15]]],[11,"is_empty","","",1,[[],["bool",15]]],[11,"push","","",1,[[]]],[11,"get","","",1,[[["i32",15]],["option",4]]],[11,"last","","",1,[[],["option",4]]],[11,"iter","","",1,[[]]],[11,"iter_enum","","",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_iter","","",0,[[]]],[11,"clone","","",0,[[]]],[11,"clone","","",1,[[],["oncebivec",3]]],[11,"default","","",0,[[]]],[11,"eq","","",0,[[["oncevec",3]],["bool",15]]],[11,"eq","","",1,[[["oncebivec",3]],["bool",15]]],[11,"ne","","",1,[[["oncebivec",3]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"index","","",0,[[["usize",15]]]],[11,"index","","",0,[[["u32",15]]]],[11,"index","","",1,[[["i32",15]]]],[11,"index_mut","","",0,[[["usize",15]]]],[11,"index_mut","","",0,[[["u32",15]]]],[11,"index_mut","","",1,[[["i32",15]]]],[11,"load","","",0,[[],["result",6]]],[11,"load","","",1,[[],["result",6]]],[11,"save","","",0,[[],["result",6]]],[11,"save","","",1,[[],["result",6]]]],"p":[[3,"OnceVec"],[3,"OnceBiVec"]]},\
"query":{"doc":"","i":[[5,"query","query","",null,[[["str",15]],["display",8]]],[5,"query_with_default","","",null,[[["display",8],["str",15]],["display",8]]],[5,"query_with_default_no_default_indicated","","",null,[[["display",8],["str",15]],["display",8]]],[5,"query_yes_no","","",null,[[["str",15]],["bool",15]]]],"p":[]},\
"saveload":{"doc":"This crate provides a simple interface for saving and …","i":[[0,"default_impl","saveload","",null,null],[8,"Save","","",null,null],[10,"save","","Example",0,[[],["result",6]]],[8,"Load","","",null,null],[16,"AuxData","","The type of the auxiliary data needed for loading.",1,null],[10,"load","","The auxiliary data is a borrow. This is useful for <code>Vec<T></code> …",1,[[],["result",6]]]],"p":[[8,"Save"],[8,"Load"]]},\
"thread_token":{"doc":"","i":[[3,"TokenBucket","thread_token","A <code>TokenBucket</code> is a bucket containing a fixed number of “…",null,null],[12,"max_threads","","",0,null],[12,"running_threads","","",0,null],[12,"condvar","","",0,null],[11,"new","","Constructs a new <code>TokenBucket</code> with a fixed number of …",0,[[["usize",15]]]],[11,"take_token","","Attempts to take a token from the bucket. This will block …",0,[[],["token",3]]],[11,"recv_or_release","","This function attempts to read a message from <code>receiver</code> …",0,[[["option",4],["token",3]],["token",3]]],[11,"recv2_or_release","","This function attempts to read a message from <code>receiver</code> …",0,[[["option",4],["token",3]],["token",3]]],[11,"release_token","","",0,[[]]],[3,"Token","","A <code>Token</code> is what <code>TokenBucket::take_token</code> returns. The …",null,null],[12,"bucket","","",1,null],[11,"release","","This function does not do anything. It simply takes …",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"drop","","",1,[[]]]],"p":[[3,"TokenBucket"],[3,"Token"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);
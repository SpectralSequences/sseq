name: Test rust_ext

on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    env:
        RUST_BACKTRACE: 1
        RUSTUP_TOOLCHAIN: ${{ matrix.toolchain }}

    strategy:
      matrix:
          toolchain: ['nightly-2021-03-24', 'nightly']

    steps:
    - uses: actions/checkout@v2

    - name: Cache files
      uses: actions/cache@v2
      with:
          path: |
              ~/.rustup
              ~/.cargo
              **/target
          key: ${{ matrix.toolchain }}-${{ hashFiles('ext/Cargo.*') }}

    - name: Install rustup
      uses: actions-rs/toolchain@v1
      with:
          toolchain: ${{ matrix.toolchain }}

    - name: Run tests
      run: make -C ext test

    - name: Run concurrent tests
      run: make -C ext test-concurrent

    - name: Run rust_webserver tests
      run: make -C rust_webserver test

  lint:
    runs-on: ubuntu-latest
    env:
        RUST_BACKTRACE: 1
        RUTSFLAGS: "-D warnings"
        RUSTUP_TOOLCHAIN: ${{ matrix.toolchain }}

    strategy:
      matrix:
          toolchain: ['nightly-2021-03-24', 'nightly']

    steps:
    - uses: actions/checkout@v2

    - name: Cache files
      uses: actions/cache@v2
      with:
          path: |
              ~/.rustup
              ~/.cargo
              **/target
          key: lint-${{ matrix.toolchain }}-${{ hashFiles('ext/Cargo.*', 'rust_webserver/Cargo.*') }}

    - name: Install rustup
      uses: actions-rs/toolchain@v1
      with:
          toolchain: ${{ matrix.toolchain }}
          components: clippy, rustfmt

    - name: Run lint
      run: make -C ext lint

    - name: Lint rust_webserver
      run: make -C rust_webserver lint

  examples:
    runs-on: ubuntu-latest
    env:
        RUST_BACKTRACE: 1
        RUSTUP_TOOLCHAIN: ${{ matrix.toolchain }}

    strategy:
      matrix:
          toolchain: ['nightly-2021-03-24', 'nightly']

    steps:
    - uses: actions/checkout@v2

    - name: Cache files
      uses: actions/cache@v2
      with:
          path: |
              ~/.rustup
              ~/.cargo
              **/target
          key: example-${{ matrix.toolchain }}-${{ hashFiles('ext/Cargo.*') }}

    - name: Install rustup
      uses: actions-rs/toolchain@v1
      with:
          toolchain: ${{ matrix.toolchain }}

    - name: Run ext examples
      run: make -C ext run_examples

    - name: Run rust_webserver examples
      run: make -C rust_webserver run_examples

  wasm-build:
    needs: [test, lint, examples]
    runs-on: ubuntu-20.04
    env:
        RUST_BACKTRACE: 1
        RUSTUP_TOOLCHAIN: ${{ matrix.toolchain }}

    strategy:
      matrix:
          toolchain: ['nightly-2021-03-24', 'nightly']

    steps:
    - uses: actions/checkout@v2

    - name: Cache files
      uses: actions/cache@v2
      with:
          path: |
              ~/.rustup
              ~/.cargo
              **/target
          key: wasm-${{ matrix.toolchain }}-${{ hashFiles('ext/Cargo.*') }}

    - name: Install rustup
      uses: actions-rs/toolchain@v1
      with:
          toolchain: ${{ matrix.toolchain }}
          target: wasm32-unknown-unknown

    - name: Install wasm-opt
      run: sudo apt-get install binaryen

    - name: Setup build environment
      run: make -C rust_webserver setup-wasm

    - name: Build wasm
      run: make -C rust_webserver wasm

    - name: Deploy
      if: ${{ matrix.toolchain == 'nightly-2021-03-24' && github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      uses: JamesIves/github-pages-deploy-action@4.1.0
      with:
          branch: gh-pages
          folder: rust_webserver/dist/
          clean-exclude: docs/

  docs:
    needs: [test, lint, examples]
    runs-on: ubuntu-20.04
    env:
        RUST_BACKTRACE: 1

    steps:
    - uses: actions/checkout@v2

    - name: Cache files
      uses: actions/cache@v2
      with:
          path: |
              ~/.rustup
              ~/.cargo
              **/target
          key: docs-${{ matrix.toolchain }}-${{ hashFiles('ext/Cargo.*') }}

    - name: Install rustup
      uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly-2021-03-24

    - name: Generate docs
      run: make -C ext docs

    - name: Deploy
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      uses: JamesIves/github-pages-deploy-action@4.1.0
      with:
          branch: gh-pages
          folder: ext/target/doc
          target-folder: docs/
